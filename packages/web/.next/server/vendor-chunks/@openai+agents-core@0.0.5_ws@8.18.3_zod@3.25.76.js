"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76";
exports.ids = ["vendor-chunks/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76"];
exports.modules = {

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/agent.mjs":
/*!********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/agent.mjs ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Agent: () => (/* binding */ Agent)\n/* harmony export */ });\n/* harmony import */ var _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lifecycle.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/lifecycle.mjs\");\n/* harmony import */ var _mcp_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mcp.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/mcp.mjs\");\n/* harmony import */ var _tool_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tool.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tool.mjs\");\n/* harmony import */ var _run_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./run.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/run.mjs\");\n/* harmony import */ var _utils_tools_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/tools.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/tools.mjs\");\n/* harmony import */ var _utils_messages_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/messages.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/messages.mjs\");\n/* harmony import */ var _utils_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/typeGuards.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n\n\n\n\n\n\n\n\n\n\n/**\n * The class representing an AI agent configured with instructions, tools, guardrails, handoffs and more.\n *\n * We strongly recommend passing `instructions`, which is the \"system prompt\" for the agent. In\n * addition, you can pass `handoffDescription`, which is a human-readable description of the\n * agent, used when the agent is used inside tools/handoffs.\n *\n * Agents are generic on the context type. The context is a (mutable) object you create. It is\n * passed to tool functions, handoffs, guardrails, etc.\n */\nclass Agent extends _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_0__.AgentHooks {\n    /**\n     * Create an Agent with handoffs and automatically infer the union type for TOutput from the handoff agents' output types.\n     */\n    static create(config) {\n        return new Agent({\n            ...config,\n            handoffs: config.handoffs,\n            outputType: config.outputType,\n            handoffOutputTypeWarningEnabled: false,\n        });\n    }\n    name;\n    instructions;\n    handoffDescription;\n    handoffs;\n    model;\n    modelSettings;\n    tools;\n    mcpServers;\n    inputGuardrails;\n    outputGuardrails;\n    outputType = 'text';\n    toolUseBehavior;\n    resetToolChoice;\n    constructor(config) {\n        super();\n        if (typeof config.name !== 'string' || config.name.trim() === '') {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_7__.UserError('Agent must have a name.');\n        }\n        this.name = config.name;\n        this.instructions = config.instructions ?? '';\n        this.handoffDescription = config.handoffDescription ?? '';\n        this.handoffs = config.handoffs ?? [];\n        this.model = config.model ?? '';\n        this.modelSettings = config.modelSettings ?? {};\n        this.tools = config.tools ?? [];\n        this.mcpServers = config.mcpServers ?? [];\n        this.inputGuardrails = config.inputGuardrails ?? [];\n        this.outputGuardrails = config.outputGuardrails ?? [];\n        if (config.outputType) {\n            this.outputType = config.outputType;\n        }\n        this.toolUseBehavior = config.toolUseBehavior ?? 'run_llm_again';\n        this.resetToolChoice = config.resetToolChoice ?? true;\n        // --- Runtime warning for handoff output type compatibility ---\n        if (config.handoffOutputTypeWarningEnabled === undefined ||\n            config.handoffOutputTypeWarningEnabled) {\n            if (this.handoffs && this.outputType) {\n                const outputTypes = new Set([JSON.stringify(this.outputType)]);\n                for (const h of this.handoffs) {\n                    if ('outputType' in h && h.outputType) {\n                        outputTypes.add(JSON.stringify(h.outputType));\n                    }\n                    else if ('agent' in h && h.agent.outputType) {\n                        outputTypes.add(JSON.stringify(h.agent.outputType));\n                    }\n                }\n                if (outputTypes.size > 1) {\n                    _logger_mjs__WEBPACK_IMPORTED_MODULE_8__[\"default\"].warn(`[Agent] Warning: Handoff agents have different output types: ${Array.from(outputTypes).join(', ')}. You can make it type-safe by using Agent.create({ ... }) method instead.`);\n                }\n            }\n        }\n    }\n    /**\n     * Ouput schema name\n     */\n    get outputSchemaName() {\n        if (this.outputType === 'text') {\n            return 'text';\n        }\n        else if ((0,_utils_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_6__.isZodObject)(this.outputType)) {\n            return 'ZodOutput';\n        }\n        else if (typeof this.outputType === 'object') {\n            return this.outputType.name;\n        }\n        throw new Error(`Unknown output type: ${this.outputType}`);\n    }\n    /**\n     * Makes a copy of the agent, with the given arguments changed. For example, you could do:\n     *\n     * ```\n     * const newAgent = agent.clone({ instructions: 'New instructions' })\n     * ```\n     *\n     * @param config - A partial configuration to change.\n     * @returns A new agent with the given changes.\n     */\n    clone(config) {\n        return new Agent({\n            ...this,\n            ...config,\n        });\n    }\n    /**\n     * Transform this agent into a tool, callable by other agents.\n     *\n     * This is different from handoffs in two ways:\n     * 1. In handoffs, the new agent receives the conversation history. In this tool, the new agent\n     *    receives generated input.\n     * 2. In handoffs, the new agent takes over the conversation. In this tool, the new agent is\n     *    called as a tool, and the conversation is continued by the original agent.\n     *\n     * @param options - Options for the tool.\n     * @returns A tool that runs the agent and returns the output text.\n     */\n    asTool(options) {\n        const { toolName, toolDescription, customOutputExtractor } = options;\n        return (0,_tool_mjs__WEBPACK_IMPORTED_MODULE_2__.tool)({\n            name: toolName ?? (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_4__.toFunctionToolName)(this.name),\n            description: toolDescription ?? '',\n            parameters: {\n                type: 'object',\n                properties: {\n                    input: {\n                        type: 'string',\n                    },\n                },\n                required: ['input'],\n                additionalProperties: false,\n            },\n            strict: true,\n            execute: async (data, context) => {\n                if (!(0,_utils_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_6__.isAgentToolInput)(data)) {\n                    throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_7__.ModelBehaviorError('Agent tool called with invalid input');\n                }\n                const runner = new _run_mjs__WEBPACK_IMPORTED_MODULE_3__.Runner();\n                const result = await runner.run(this, data.input, {\n                    context: context?.context,\n                });\n                if (typeof customOutputExtractor === 'function') {\n                    return customOutputExtractor(result);\n                }\n                return (0,_utils_messages_mjs__WEBPACK_IMPORTED_MODULE_5__.getOutputText)(result.rawResponses[result.rawResponses.length - 1]);\n            },\n        });\n    }\n    /**\n     * Returns the system prompt for the agent.\n     *\n     * If the agent has a function as its instructions, this function will be called with the\n     * runContext and the agent instance.\n     */\n    async getSystemPrompt(runContext) {\n        if (typeof this.instructions === 'function') {\n            return await this.instructions(runContext, this);\n        }\n        return this.instructions;\n    }\n    /**\n     * Fetches the available tools from the MCP servers.\n     * @returns the MCP powered tools\n     */\n    async getMcpTools() {\n        if (this.mcpServers.length > 0) {\n            return (0,_mcp_mjs__WEBPACK_IMPORTED_MODULE_1__.getAllMcpTools)(this.mcpServers);\n        }\n        return [];\n    }\n    /**\n     * ALl agent tools, including the MCPl and function tools.\n     *\n     * @returns all configured tools\n     */\n    async getAllTools() {\n        return [...(await this.getMcpTools()), ...this.tools];\n    }\n    /**\n     * Processes the final output of the agent.\n     *\n     * @param output - The output of the agent.\n     * @returns The parsed out.\n     */\n    processFinalOutput(output) {\n        if (this.outputType === 'text') {\n            return output;\n        }\n        if (typeof this.outputType === 'object') {\n            const parsed = JSON.parse(output);\n            if ((0,_utils_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_6__.isZodObject)(this.outputType)) {\n                return this.outputType.parse(parsed);\n            }\n            return parsed;\n        }\n        throw new Error(`Unknown output type: ${this.outputType}`);\n    }\n    /**\n     * Returns a JSON representation of the agent, which is serializable.\n     *\n     * @returns A JSON object containing the agent's name.\n     */\n    toJSON() {\n        return {\n            name: this.name,\n        };\n    }\n}\n//# sourceMappingURL=agent.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/agent.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/config.mjs":
/*!*********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/config.mjs ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadEnv: () => (/* binding */ loadEnv),\n/* harmony export */   logging: () => (/* binding */ logging),\n/* harmony export */   tracing: () => (/* binding */ tracing)\n/* harmony export */ });\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n\n/**\n * Loads environment variables from the process environment.\n *\n * @returns An object containing the environment variables.\n */\nfunction loadEnv() {\n    return (0,_openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.loadEnv)();\n}\n/**\n * Checks if a flag is enabled in the environment.\n *\n * @param flagName - The name of the flag to check.\n * @returns `true` if the flag is enabled, `false` otherwise.\n */\nfunction isEnabled(flagName) {\n    const env = loadEnv();\n    return (typeof env !== 'undefined' &&\n        (env[flagName] === 'true' || env[flagName] === '1'));\n}\n/**\n * Global configuration for tracing.\n */\nconst tracing = {\n    get disabled() {\n        return isEnabled('OPENAI_AGENTS_DISABLE_TRACING');\n    },\n};\n/**\n * Global configuration for logging.\n */\nconst logging = {\n    get dontLogModelData() {\n        return isEnabled('OPENAI_AGENTS_DONT_LOG_MODEL_DATA');\n    },\n    get dontLogToolData() {\n        return isEnabled('OPENAI_AGENTS_DONT_LOG_TOOL_DATA');\n    },\n};\n//# sourceMappingURL=config.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvY29uZmlnLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWlFO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsa0VBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3l1d2FuZy9wcm9qZWN0cy9vcGVuYWktcmVhbHRpbWUtYWdlbnRzL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC41X3dzQDguMTguM196b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L2NvbmZpZy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9hZEVudiBhcyBfbG9hZEVudiB9IGZyb20gJ0BvcGVuYWkvYWdlbnRzLWNvcmUvX3NoaW1zJztcbi8qKlxuICogTG9hZHMgZW52aXJvbm1lbnQgdmFyaWFibGVzIGZyb20gdGhlIHByb2Nlc3MgZW52aXJvbm1lbnQuXG4gKlxuICogQHJldHVybnMgQW4gb2JqZWN0IGNvbnRhaW5pbmcgdGhlIGVudmlyb25tZW50IHZhcmlhYmxlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxvYWRFbnYoKSB7XG4gICAgcmV0dXJuIF9sb2FkRW52KCk7XG59XG4vKipcbiAqIENoZWNrcyBpZiBhIGZsYWcgaXMgZW5hYmxlZCBpbiB0aGUgZW52aXJvbm1lbnQuXG4gKlxuICogQHBhcmFtIGZsYWdOYW1lIC0gVGhlIG5hbWUgb2YgdGhlIGZsYWcgdG8gY2hlY2suXG4gKiBAcmV0dXJucyBgdHJ1ZWAgaWYgdGhlIGZsYWcgaXMgZW5hYmxlZCwgYGZhbHNlYCBvdGhlcndpc2UuXG4gKi9cbmZ1bmN0aW9uIGlzRW5hYmxlZChmbGFnTmFtZSkge1xuICAgIGNvbnN0IGVudiA9IGxvYWRFbnYoKTtcbiAgICByZXR1cm4gKHR5cGVvZiBlbnYgIT09ICd1bmRlZmluZWQnICYmXG4gICAgICAgIChlbnZbZmxhZ05hbWVdID09PSAndHJ1ZScgfHwgZW52W2ZsYWdOYW1lXSA9PT0gJzEnKSk7XG59XG4vKipcbiAqIEdsb2JhbCBjb25maWd1cmF0aW9uIGZvciB0cmFjaW5nLlxuICovXG5leHBvcnQgY29uc3QgdHJhY2luZyA9IHtcbiAgICBnZXQgZGlzYWJsZWQoKSB7XG4gICAgICAgIHJldHVybiBpc0VuYWJsZWQoJ09QRU5BSV9BR0VOVFNfRElTQUJMRV9UUkFDSU5HJyk7XG4gICAgfSxcbn07XG4vKipcbiAqIEdsb2JhbCBjb25maWd1cmF0aW9uIGZvciBsb2dnaW5nLlxuICovXG5leHBvcnQgY29uc3QgbG9nZ2luZyA9IHtcbiAgICBnZXQgZG9udExvZ01vZGVsRGF0YSgpIHtcbiAgICAgICAgcmV0dXJuIGlzRW5hYmxlZCgnT1BFTkFJX0FHRU5UU19ET05UX0xPR19NT0RFTF9EQVRBJyk7XG4gICAgfSxcbiAgICBnZXQgZG9udExvZ1Rvb2xEYXRhKCkge1xuICAgICAgICByZXR1cm4gaXNFbmFibGVkKCdPUEVOQUlfQUdFTlRTX0RPTlRfTE9HX1RPT0xfREFUQScpO1xuICAgIH0sXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Y29uZmlnLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/config.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/errors.mjs":
/*!*********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/errors.mjs ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentsError: () => (/* binding */ AgentsError),\n/* harmony export */   GuardrailExecutionError: () => (/* binding */ GuardrailExecutionError),\n/* harmony export */   InputGuardrailTripwireTriggered: () => (/* binding */ InputGuardrailTripwireTriggered),\n/* harmony export */   MaxTurnsExceededError: () => (/* binding */ MaxTurnsExceededError),\n/* harmony export */   ModelBehaviorError: () => (/* binding */ ModelBehaviorError),\n/* harmony export */   OutputGuardrailTripwireTriggered: () => (/* binding */ OutputGuardrailTripwireTriggered),\n/* harmony export */   SystemError: () => (/* binding */ SystemError),\n/* harmony export */   ToolCallError: () => (/* binding */ ToolCallError),\n/* harmony export */   UserError: () => (/* binding */ UserError)\n/* harmony export */ });\n/**\n * Base class for all errors thrown by the library.\n */\nclass AgentsError extends Error {\n    state;\n    constructor(message, state) {\n        super(message);\n        this.state = state;\n    }\n}\n/**\n * System error thrown when the library encounters an error that is not caused by the user's\n * misconfiguration.\n */\nclass SystemError extends AgentsError {\n}\n/**\n * Error thrown when the maximum number of turns is exceeded.\n */\nclass MaxTurnsExceededError extends AgentsError {\n}\n/**\n * Error thrown when a model behavior is unexpected.\n */\nclass ModelBehaviorError extends AgentsError {\n}\n/**\n * Error thrown when the error is caused by the library user's misconfiguration.\n */\nclass UserError extends AgentsError {\n}\n/**\n * Error thrown when a guardrail execution fails.\n */\nclass GuardrailExecutionError extends AgentsError {\n    error;\n    constructor(message, error, state) {\n        super(message, state);\n        this.error = error;\n    }\n}\n/**\n * Error thrown when a tool call fails.\n */\nclass ToolCallError extends AgentsError {\n    error;\n    constructor(message, error, state) {\n        super(message, state);\n        this.error = error;\n    }\n}\n/**\n * Error thrown when an input guardrail tripwire is triggered.\n */\nclass InputGuardrailTripwireTriggered extends AgentsError {\n    result;\n    constructor(message, result, state) {\n        super(message, state);\n        this.result = result;\n    }\n}\n/**\n * Error thrown when an output guardrail tripwire is triggered.\n */\nclass OutputGuardrailTripwireTriggered extends AgentsError {\n    result;\n    constructor(message, result, state) {\n        super(message, state);\n        this.result = result;\n    }\n}\n//# sourceMappingURL=errors.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvZXJyb3JzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXdhbmcvcHJvamVjdHMvb3BlbmFpLXJlYWx0aW1lLWFnZW50cy9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuNV93c0A4LjE4LjNfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9lcnJvcnMubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQmFzZSBjbGFzcyBmb3IgYWxsIGVycm9ycyB0aHJvd24gYnkgdGhlIGxpYnJhcnkuXG4gKi9cbmV4cG9ydCBjbGFzcyBBZ2VudHNFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBzdGF0ZTtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBzdGF0ZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHN0YXRlO1xuICAgIH1cbn1cbi8qKlxuICogU3lzdGVtIGVycm9yIHRocm93biB3aGVuIHRoZSBsaWJyYXJ5IGVuY291bnRlcnMgYW4gZXJyb3IgdGhhdCBpcyBub3QgY2F1c2VkIGJ5IHRoZSB1c2VyJ3NcbiAqIG1pc2NvbmZpZ3VyYXRpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBTeXN0ZW1FcnJvciBleHRlbmRzIEFnZW50c0Vycm9yIHtcbn1cbi8qKlxuICogRXJyb3IgdGhyb3duIHdoZW4gdGhlIG1heGltdW0gbnVtYmVyIG9mIHR1cm5zIGlzIGV4Y2VlZGVkLlxuICovXG5leHBvcnQgY2xhc3MgTWF4VHVybnNFeGNlZWRlZEVycm9yIGV4dGVuZHMgQWdlbnRzRXJyb3Ige1xufVxuLyoqXG4gKiBFcnJvciB0aHJvd24gd2hlbiBhIG1vZGVsIGJlaGF2aW9yIGlzIHVuZXhwZWN0ZWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBNb2RlbEJlaGF2aW9yRXJyb3IgZXh0ZW5kcyBBZ2VudHNFcnJvciB7XG59XG4vKipcbiAqIEVycm9yIHRocm93biB3aGVuIHRoZSBlcnJvciBpcyBjYXVzZWQgYnkgdGhlIGxpYnJhcnkgdXNlcidzIG1pc2NvbmZpZ3VyYXRpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBVc2VyRXJyb3IgZXh0ZW5kcyBBZ2VudHNFcnJvciB7XG59XG4vKipcbiAqIEVycm9yIHRocm93biB3aGVuIGEgZ3VhcmRyYWlsIGV4ZWN1dGlvbiBmYWlscy5cbiAqL1xuZXhwb3J0IGNsYXNzIEd1YXJkcmFpbEV4ZWN1dGlvbkVycm9yIGV4dGVuZHMgQWdlbnRzRXJyb3Ige1xuICAgIGVycm9yO1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGVycm9yLCBzdGF0ZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBzdGF0ZSk7XG4gICAgICAgIHRoaXMuZXJyb3IgPSBlcnJvcjtcbiAgICB9XG59XG4vKipcbiAqIEVycm9yIHRocm93biB3aGVuIGEgdG9vbCBjYWxsIGZhaWxzLlxuICovXG5leHBvcnQgY2xhc3MgVG9vbENhbGxFcnJvciBleHRlbmRzIEFnZW50c0Vycm9yIHtcbiAgICBlcnJvcjtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBlcnJvciwgc3RhdGUpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgc3RhdGUpO1xuICAgICAgICB0aGlzLmVycm9yID0gZXJyb3I7XG4gICAgfVxufVxuLyoqXG4gKiBFcnJvciB0aHJvd24gd2hlbiBhbiBpbnB1dCBndWFyZHJhaWwgdHJpcHdpcmUgaXMgdHJpZ2dlcmVkLlxuICovXG5leHBvcnQgY2xhc3MgSW5wdXRHdWFyZHJhaWxUcmlwd2lyZVRyaWdnZXJlZCBleHRlbmRzIEFnZW50c0Vycm9yIHtcbiAgICByZXN1bHQ7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgcmVzdWx0LCBzdGF0ZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBzdGF0ZSk7XG4gICAgICAgIHRoaXMucmVzdWx0ID0gcmVzdWx0O1xuICAgIH1cbn1cbi8qKlxuICogRXJyb3IgdGhyb3duIHdoZW4gYW4gb3V0cHV0IGd1YXJkcmFpbCB0cmlwd2lyZSBpcyB0cmlnZ2VyZWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBPdXRwdXRHdWFyZHJhaWxUcmlwd2lyZVRyaWdnZXJlZCBleHRlbmRzIEFnZW50c0Vycm9yIHtcbiAgICByZXN1bHQ7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgcmVzdWx0LCBzdGF0ZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCBzdGF0ZSk7XG4gICAgICAgIHRoaXMucmVzdWx0ID0gcmVzdWx0O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWVycm9ycy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/errors.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/events.mjs":
/*!*********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/events.mjs ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RunAgentUpdatedStreamEvent: () => (/* binding */ RunAgentUpdatedStreamEvent),\n/* harmony export */   RunItemStreamEvent: () => (/* binding */ RunItemStreamEvent),\n/* harmony export */   RunRawModelStreamEvent: () => (/* binding */ RunRawModelStreamEvent)\n/* harmony export */ });\n/**\n * Streaming event from the LLM. These are `raw` events, i.e. they are directly passed through from\n * the LLM.\n */\nclass RunRawModelStreamEvent {\n    data;\n    /**\n     * The type of the event.\n     */\n    type = 'raw_model_stream_event';\n    /**\n     * @param data The raw responses stream events from the LLM.\n     */\n    constructor(data) {\n        this.data = data;\n    }\n}\n/**\n * Streaming events that wrap a `RunItem`. As the agent processes the LLM response, it will generate\n * these events from new messages, tool calls, tool outputs, handoffs, etc.\n */\nclass RunItemStreamEvent {\n    name;\n    item;\n    type = 'run_item_stream_event';\n    /**\n     * @param name The name of the event.\n     * @param item The item that was created.\n     */\n    constructor(name, item) {\n        this.name = name;\n        this.item = item;\n    }\n}\n/**\n * Event that notifies that there is a new agent running.\n */\nclass RunAgentUpdatedStreamEvent {\n    agent;\n    type = 'agent_updated_stream_event';\n    /**\n     * @param agent The new agent\n     */\n    constructor(agent) {\n        this.agent = agent;\n    }\n}\n//# sourceMappingURL=events.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvZXZlbnRzLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXdhbmcvcHJvamVjdHMvb3BlbmFpLXJlYWx0aW1lLWFnZW50cy9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuNV93c0A4LjE4LjNfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9ldmVudHMubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU3RyZWFtaW5nIGV2ZW50IGZyb20gdGhlIExMTS4gVGhlc2UgYXJlIGByYXdgIGV2ZW50cywgaS5lLiB0aGV5IGFyZSBkaXJlY3RseSBwYXNzZWQgdGhyb3VnaCBmcm9tXG4gKiB0aGUgTExNLlxuICovXG5leHBvcnQgY2xhc3MgUnVuUmF3TW9kZWxTdHJlYW1FdmVudCB7XG4gICAgZGF0YTtcbiAgICAvKipcbiAgICAgKiBUaGUgdHlwZSBvZiB0aGUgZXZlbnQuXG4gICAgICovXG4gICAgdHlwZSA9ICdyYXdfbW9kZWxfc3RyZWFtX2V2ZW50JztcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gZGF0YSBUaGUgcmF3IHJlc3BvbnNlcyBzdHJlYW0gZXZlbnRzIGZyb20gdGhlIExMTS5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgfVxufVxuLyoqXG4gKiBTdHJlYW1pbmcgZXZlbnRzIHRoYXQgd3JhcCBhIGBSdW5JdGVtYC4gQXMgdGhlIGFnZW50IHByb2Nlc3NlcyB0aGUgTExNIHJlc3BvbnNlLCBpdCB3aWxsIGdlbmVyYXRlXG4gKiB0aGVzZSBldmVudHMgZnJvbSBuZXcgbWVzc2FnZXMsIHRvb2wgY2FsbHMsIHRvb2wgb3V0cHV0cywgaGFuZG9mZnMsIGV0Yy5cbiAqL1xuZXhwb3J0IGNsYXNzIFJ1bkl0ZW1TdHJlYW1FdmVudCB7XG4gICAgbmFtZTtcbiAgICBpdGVtO1xuICAgIHR5cGUgPSAncnVuX2l0ZW1fc3RyZWFtX2V2ZW50JztcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gbmFtZSBUaGUgbmFtZSBvZiB0aGUgZXZlbnQuXG4gICAgICogQHBhcmFtIGl0ZW0gVGhlIGl0ZW0gdGhhdCB3YXMgY3JlYXRlZC5cbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBpdGVtKSB7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuaXRlbSA9IGl0ZW07XG4gICAgfVxufVxuLyoqXG4gKiBFdmVudCB0aGF0IG5vdGlmaWVzIHRoYXQgdGhlcmUgaXMgYSBuZXcgYWdlbnQgcnVubmluZy5cbiAqL1xuZXhwb3J0IGNsYXNzIFJ1bkFnZW50VXBkYXRlZFN0cmVhbUV2ZW50IHtcbiAgICBhZ2VudDtcbiAgICB0eXBlID0gJ2FnZW50X3VwZGF0ZWRfc3RyZWFtX2V2ZW50JztcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gYWdlbnQgVGhlIG5ldyBhZ2VudFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGFnZW50KSB7XG4gICAgICAgIHRoaXMuYWdlbnQgPSBhZ2VudDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ldmVudHMubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/events.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/guardrail.mjs":
/*!************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/guardrail.mjs ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defineInputGuardrail: () => (/* binding */ defineInputGuardrail),\n/* harmony export */   defineOutputGuardrail: () => (/* binding */ defineOutputGuardrail)\n/* harmony export */ });\n/**\n * Defines an internal input guardrail definition.\n * SDK users usually do not need to use this.\n */\nfunction defineInputGuardrail({ name, execute, }) {\n    return {\n        type: 'input',\n        name,\n        guardrailFunction: execute,\n        async run(args) {\n            return {\n                guardrail: { type: 'input', name },\n                output: await execute(args),\n            };\n        },\n    };\n}\n/**\n * Creates an internal output guardrail definition.\n * SDK users usually do not need to use this.\n * @internal\n */\nfunction defineOutputGuardrail({ name, execute, }) {\n    return {\n        type: 'output',\n        name,\n        guardrailFunction: execute,\n        async run(args) {\n            return {\n                guardrail: { type: 'output', name },\n                agent: args.agent,\n                agentOutput: args.agentOutput,\n                output: await execute(args),\n            };\n        },\n    };\n}\n//# sourceMappingURL=guardrail.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvZ3VhcmRyYWlsLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0NBQWdDLGdCQUFnQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIscUJBQXFCO0FBQ2xEO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyxpQ0FBaUMsZ0JBQWdCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixzQkFBc0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMveXV3YW5nL3Byb2plY3RzL29wZW5haS1yZWFsdGltZS1hZ2VudHMvbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvZ3VhcmRyYWlsLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIERlZmluZXMgYW4gaW50ZXJuYWwgaW5wdXQgZ3VhcmRyYWlsIGRlZmluaXRpb24uXG4gKiBTREsgdXNlcnMgdXN1YWxseSBkbyBub3QgbmVlZCB0byB1c2UgdGhpcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmluZUlucHV0R3VhcmRyYWlsKHsgbmFtZSwgZXhlY3V0ZSwgfSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdpbnB1dCcsXG4gICAgICAgIG5hbWUsXG4gICAgICAgIGd1YXJkcmFpbEZ1bmN0aW9uOiBleGVjdXRlLFxuICAgICAgICBhc3luYyBydW4oYXJncykge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBndWFyZHJhaWw6IHsgdHlwZTogJ2lucHV0JywgbmFtZSB9LFxuICAgICAgICAgICAgICAgIG91dHB1dDogYXdhaXQgZXhlY3V0ZShhcmdzKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhbiBpbnRlcm5hbCBvdXRwdXQgZ3VhcmRyYWlsIGRlZmluaXRpb24uXG4gKiBTREsgdXNlcnMgdXN1YWxseSBkbyBub3QgbmVlZCB0byB1c2UgdGhpcy5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVmaW5lT3V0cHV0R3VhcmRyYWlsKHsgbmFtZSwgZXhlY3V0ZSwgfSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdvdXRwdXQnLFxuICAgICAgICBuYW1lLFxuICAgICAgICBndWFyZHJhaWxGdW5jdGlvbjogZXhlY3V0ZSxcbiAgICAgICAgYXN5bmMgcnVuKGFyZ3MpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgZ3VhcmRyYWlsOiB7IHR5cGU6ICdvdXRwdXQnLCBuYW1lIH0sXG4gICAgICAgICAgICAgICAgYWdlbnQ6IGFyZ3MuYWdlbnQsXG4gICAgICAgICAgICAgICAgYWdlbnRPdXRwdXQ6IGFyZ3MuYWdlbnRPdXRwdXQsXG4gICAgICAgICAgICAgICAgb3V0cHV0OiBhd2FpdCBleGVjdXRlKGFyZ3MpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z3VhcmRyYWlsLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/guardrail.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/handoff.mjs":
/*!**********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/handoff.mjs ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Handoff: () => (/* binding */ Handoff),\n/* harmony export */   getHandoff: () => (/* binding */ getHandoff),\n/* harmony export */   getTransferMessage: () => (/* binding */ getTransferMessage),\n/* harmony export */   handoff: () => (/* binding */ handoff)\n/* harmony export */ });\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/tools.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/tools.mjs\");\n/* harmony import */ var _tracing_context_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tracing/context.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/context.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n\n\n\n\n\n/**\n * Generates the message that will be given as tool output to the model that requested the handoff.\n *\n * @param agent The agent to transfer to\n * @returns The message that will be given as tool output to the model that requested the handoff\n */\nfunction getTransferMessage(agent) {\n    return JSON.stringify({ assistant: agent.name });\n}\n/**\n * The default name of the tool that represents the handoff.\n *\n * @param agent The agent to transfer to\n * @returns The name of the tool that represents the handoff\n */\nfunction defaultHandoffToolName(agent) {\n    return `transfer_to_${(0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__.toFunctionToolName)(agent.name)}`;\n}\n/**\n * Generates the description of the tool that represents the handoff.\n *\n * @param agent The agent to transfer to\n * @returns The description of the tool that represents the handoff\n */\nfunction defaultHandoffToolDescription(agent) {\n    return `Handoff to the ${agent.name} agent to handle the request. ${agent.handoffDescription ?? ''}`;\n}\n/**\n * A handoff is when an agent delegates a task to another agent.\n * For example, in a customer support scenario you might have a \"triage agent\" that determines which\n * agent should handle the user's request, and sub-agents that specialize in different areas like\n * billing, account management, etc.\n *\n * @template TContext The context of the handoff\n * @template TOutput The output type of the handoff\n */\nclass Handoff {\n    /**\n     * The name of the tool that represents the handoff.\n     */\n    toolName;\n    /**\n     * The description of the tool that represents the handoff.\n     */\n    toolDescription;\n    /**\n     * The JSON schema for the handoff input. Can be empty if the handoff does not take an input\n     */\n    inputJsonSchema = {\n        type: 'object',\n        properties: {},\n        required: [],\n        additionalProperties: false,\n    };\n    /**\n     * Whether the input JSON schema is in strict mode. We **strongly** recommend setting this to\n     * true, as it increases the likelihood of correct JSON input.\n     */\n    strictJsonSchema = true;\n    /**\n     * The function that invokes the handoff. The parameters passed are:\n     * 1. The handoff run context\n     * 2. The arugments from the LLM, as a JSON string. Empty string if inputJsonSchema is empty.\n     *\n     * Must return an agent\n     */\n    onInvokeHandoff;\n    /**\n     * The name of the agent that is being handed off to.\n     */\n    agentName;\n    /**\n     * A function that filters the inputs that are passed to the next agent. By default, the new agent\n     * sees the entire conversation history. In some cases, you may want to filter inputs e.g. to\n     * remove older inputs, or remove tools from existing inputs.\n     *\n     * The function will receive the entire conversation hisstory so far, including the input item\n     * that triggered the handoff and a tool call output item representing the handoff tool's output.\n     *\n     * You are free to modify the input history or new items as you see fit. The next agent that runs\n     * will receive `handoffInputData.allItems\n     */\n    inputFilter;\n    /**\n     * The agent that is being handed off to.\n     */\n    agent;\n    /**\n     * Returns a function tool definition that can be used to invoke the handoff.\n     */\n    getHandoffAsFunctionTool() {\n        return {\n            type: 'function',\n            name: this.toolName,\n            description: this.toolDescription,\n            parameters: this.inputJsonSchema,\n            strict: this.strictJsonSchema,\n        };\n    }\n    constructor(agent, onInvokeHandoff) {\n        this.agentName = agent.name;\n        this.onInvokeHandoff = onInvokeHandoff;\n        this.toolName = defaultHandoffToolName(agent);\n        this.toolDescription = defaultHandoffToolDescription(agent);\n        this.agent = agent;\n    }\n}\n/**\n * Creates a handoff from an agent. Handoffs are automatically created when you pass an agent\n * into the `handoffs` option of the `Agent` constructor. Alternatively, you can use this function\n * to create a handoff manually, giving you more control over configuration.\n *\n * @template TContext The context of the handoff\n * @template TOutput The output type of the handoff\n * @template TInputType The input type of the handoff\n */\nfunction handoff(agent, config = {}) {\n    let parser = undefined;\n    const hasOnHandoff = !!config.onHandoff;\n    const hasInputType = !!config.inputType;\n    const hasBothOrNeitherHandoffAndInputType = hasOnHandoff === hasInputType;\n    if (!hasBothOrNeitherHandoffAndInputType) {\n        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.UserError('You must provide either both `onHandoff` and `inputType` or neither.');\n    }\n    async function onInvokeHandoff(context, inputJsonString) {\n        if (parser) {\n            if (!inputJsonString) {\n                (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_2__.addErrorToCurrentSpan)({\n                    message: `Handoff function expected non empty input but got: ${inputJsonString}`,\n                    data: {\n                        details: `input is empty`,\n                    },\n                });\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.ModelBehaviorError('Handoff function expected non empty input');\n            }\n            try {\n                // verify that it's valid input but we don't care about the result\n                const parsed = await parser(inputJsonString);\n                if (config.onHandoff) {\n                    await config.onHandoff(context, parsed);\n                }\n            }\n            catch (error) {\n                (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_2__.addErrorToCurrentSpan)({\n                    message: `Invalid JSON provided`,\n                    data: {},\n                });\n                if (!_logger_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].dontLogToolData) {\n                    _logger_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(`Invalid JSON when parsing: ${inputJsonString}. Error: ${error}`);\n                }\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.ModelBehaviorError('Invalid JSON provided');\n            }\n        }\n        else {\n            await config.onHandoff?.(context);\n        }\n        return agent;\n    }\n    const handoff = new Handoff(agent, onInvokeHandoff);\n    if (config.inputType) {\n        const result = (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__.getSchemaAndParserFromInputType)(config.inputType, handoff.toolName);\n        handoff.inputJsonSchema = result.schema;\n        handoff.strictJsonSchema = true;\n        parser = result.parser;\n    }\n    if (config.toolNameOverride) {\n        handoff.toolName = config.toolNameOverride;\n    }\n    if (config.toolDescriptionOverride) {\n        handoff.toolDescription = config.toolDescriptionOverride;\n    }\n    if (config.inputFilter) {\n        handoff.inputFilter = config.inputFilter;\n    }\n    return handoff;\n}\n/**\n * Returns a handoff for the given agent. If the agent is already wrapped into a handoff,\n * it will be returned as is. Otherwise, a new handoff instance will be created.\n *\n * @template TContext The context of the handoff\n * @template TOutput The output type of the handoff\n */\nfunction getHandoff(agent) {\n    if (agent instanceof Handoff) {\n        return agent;\n    }\n    return handoff(agent);\n}\n//# sourceMappingURL=handoff.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/handoff.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/helpers/message.mjs":
/*!******************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/helpers/message.mjs ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assistant: () => (/* binding */ assistant),\n/* harmony export */   system: () => (/* binding */ system),\n/* harmony export */   user: () => (/* binding */ user)\n/* harmony export */ });\n/**\n * Creates a user message entry\n *\n * @param input The input message from the user\n * @param options Any additional options that will be directly passed to the model\n * @returns a message entry\n */\nfunction user(input, options) {\n    return {\n        type: 'message',\n        role: 'user',\n        content: typeof input === 'string'\n            ? [\n                {\n                    type: 'input_text',\n                    text: input,\n                },\n            ]\n            : input,\n        providerData: options,\n    };\n}\n/**\n * Creates a system message entry\n *\n * @param input The system prompt\n * @param options Any additional options that will be directly passed to the model\n * @returns a message entry\n */\nfunction system(input, options) {\n    return {\n        type: 'message',\n        role: 'system',\n        content: input,\n        providerData: options,\n    };\n}\n/**\n * Creates an assistant message entry for example for multi-shot prompting\n *\n * @param input The assistant response\n * @param options Any additional options that will be directly passed to the model\n * @returns a message entry\n */\nfunction assistant(content, options) {\n    return {\n        type: 'message',\n        role: 'assistant',\n        content: typeof content === 'string'\n            ? [\n                {\n                    type: 'output_text',\n                    text: content,\n                },\n            ]\n            : content,\n        status: 'completed',\n        providerData: options,\n    };\n}\n//# sourceMappingURL=message.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvaGVscGVycy9tZXNzYWdlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXdhbmcvcHJvamVjdHMvb3BlbmFpLXJlYWx0aW1lLWFnZW50cy9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuNV93c0A4LjE4LjNfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9oZWxwZXJzL21lc3NhZ2UubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlcyBhIHVzZXIgbWVzc2FnZSBlbnRyeVxuICpcbiAqIEBwYXJhbSBpbnB1dCBUaGUgaW5wdXQgbWVzc2FnZSBmcm9tIHRoZSB1c2VyXG4gKiBAcGFyYW0gb3B0aW9ucyBBbnkgYWRkaXRpb25hbCBvcHRpb25zIHRoYXQgd2lsbCBiZSBkaXJlY3RseSBwYXNzZWQgdG8gdGhlIG1vZGVsXG4gKiBAcmV0dXJucyBhIG1lc3NhZ2UgZW50cnlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVzZXIoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnbWVzc2FnZScsXG4gICAgICAgIHJvbGU6ICd1c2VyJyxcbiAgICAgICAgY29udGVudDogdHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJ1xuICAgICAgICAgICAgPyBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnaW5wdXRfdGV4dCcsXG4gICAgICAgICAgICAgICAgICAgIHRleHQ6IGlucHV0LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdXG4gICAgICAgICAgICA6IGlucHV0LFxuICAgICAgICBwcm92aWRlckRhdGE6IG9wdGlvbnMsXG4gICAgfTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhIHN5c3RlbSBtZXNzYWdlIGVudHJ5XG4gKlxuICogQHBhcmFtIGlucHV0IFRoZSBzeXN0ZW0gcHJvbXB0XG4gKiBAcGFyYW0gb3B0aW9ucyBBbnkgYWRkaXRpb25hbCBvcHRpb25zIHRoYXQgd2lsbCBiZSBkaXJlY3RseSBwYXNzZWQgdG8gdGhlIG1vZGVsXG4gKiBAcmV0dXJucyBhIG1lc3NhZ2UgZW50cnlcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHN5c3RlbShpbnB1dCwgb3B0aW9ucykge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdtZXNzYWdlJyxcbiAgICAgICAgcm9sZTogJ3N5c3RlbScsXG4gICAgICAgIGNvbnRlbnQ6IGlucHV0LFxuICAgICAgICBwcm92aWRlckRhdGE6IG9wdGlvbnMsXG4gICAgfTtcbn1cbi8qKlxuICogQ3JlYXRlcyBhbiBhc3Npc3RhbnQgbWVzc2FnZSBlbnRyeSBmb3IgZXhhbXBsZSBmb3IgbXVsdGktc2hvdCBwcm9tcHRpbmdcbiAqXG4gKiBAcGFyYW0gaW5wdXQgVGhlIGFzc2lzdGFudCByZXNwb25zZVxuICogQHBhcmFtIG9wdGlvbnMgQW55IGFkZGl0aW9uYWwgb3B0aW9ucyB0aGF0IHdpbGwgYmUgZGlyZWN0bHkgcGFzc2VkIHRvIHRoZSBtb2RlbFxuICogQHJldHVybnMgYSBtZXNzYWdlIGVudHJ5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3Npc3RhbnQoY29udGVudCwgb3B0aW9ucykge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdtZXNzYWdlJyxcbiAgICAgICAgcm9sZTogJ2Fzc2lzdGFudCcsXG4gICAgICAgIGNvbnRlbnQ6IHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJ1xuICAgICAgICAgICAgPyBbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICB0eXBlOiAnb3V0cHV0X3RleHQnLFxuICAgICAgICAgICAgICAgICAgICB0ZXh0OiBjb250ZW50LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdXG4gICAgICAgICAgICA6IGNvbnRlbnQsXG4gICAgICAgIHN0YXR1czogJ2NvbXBsZXRlZCcsXG4gICAgICAgIHByb3ZpZGVyRGF0YTogb3B0aW9ucyxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVzc2FnZS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/helpers/message.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/index.mjs":
/*!********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/index.mjs ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Agent: () => (/* reexport safe */ _agent_mjs__WEBPACK_IMPORTED_MODULE_3__.Agent),\n/* harmony export */   AgentHooks: () => (/* reexport safe */ _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_10__.AgentHooks),\n/* harmony export */   AgentsError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.AgentsError),\n/* harmony export */   BatchTraceProcessor: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.BatchTraceProcessor),\n/* harmony export */   ConsoleSpanExporter: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.ConsoleSpanExporter),\n/* harmony export */   GuardrailExecutionError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.GuardrailExecutionError),\n/* harmony export */   Handoff: () => (/* reexport safe */ _handoff_mjs__WEBPACK_IMPORTED_MODULE_7__.Handoff),\n/* harmony export */   InputGuardrailTripwireTriggered: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.InputGuardrailTripwireTriggered),\n/* harmony export */   MCPServerStdio: () => (/* reexport safe */ _mcp_mjs__WEBPACK_IMPORTED_MODULE_12__.MCPServerStdio),\n/* harmony export */   MaxTurnsExceededError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.MaxTurnsExceededError),\n/* harmony export */   ModelBehaviorError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.ModelBehaviorError),\n/* harmony export */   NoopSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.NoopSpan),\n/* harmony export */   NoopTrace: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.NoopTrace),\n/* harmony export */   OutputGuardrailTripwireTriggered: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.OutputGuardrailTripwireTriggered),\n/* harmony export */   RunAgentUpdatedStreamEvent: () => (/* reexport safe */ _events_mjs__WEBPACK_IMPORTED_MODULE_5__.RunAgentUpdatedStreamEvent),\n/* harmony export */   RunContext: () => (/* reexport safe */ _runContext_mjs__WEBPACK_IMPORTED_MODULE_16__.RunContext),\n/* harmony export */   RunHandoffCallItem: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_9__.RunHandoffCallItem),\n/* harmony export */   RunItemStreamEvent: () => (/* reexport safe */ _events_mjs__WEBPACK_IMPORTED_MODULE_5__.RunItemStreamEvent),\n/* harmony export */   RunMessageOutputItem: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_9__.RunMessageOutputItem),\n/* harmony export */   RunRawModelStreamEvent: () => (/* reexport safe */ _events_mjs__WEBPACK_IMPORTED_MODULE_5__.RunRawModelStreamEvent),\n/* harmony export */   RunReasoningItem: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_9__.RunReasoningItem),\n/* harmony export */   RunResult: () => (/* reexport safe */ _result_mjs__WEBPACK_IMPORTED_MODULE_14__.RunResult),\n/* harmony export */   RunState: () => (/* reexport safe */ _runState_mjs__WEBPACK_IMPORTED_MODULE_17__.RunState),\n/* harmony export */   RunToolApprovalItem: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_9__.RunToolApprovalItem),\n/* harmony export */   RunToolCallItem: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_9__.RunToolCallItem),\n/* harmony export */   RunToolCallOutputItem: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_9__.RunToolCallOutputItem),\n/* harmony export */   Runner: () => (/* reexport safe */ _run_mjs__WEBPACK_IMPORTED_MODULE_15__.Runner),\n/* harmony export */   RuntimeEventEmitter: () => (/* reexport safe */ _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_2__.RuntimeEventEmitter),\n/* harmony export */   Span: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.Span),\n/* harmony export */   StreamedRunResult: () => (/* reexport safe */ _result_mjs__WEBPACK_IMPORTED_MODULE_14__.StreamedRunResult),\n/* harmony export */   SystemError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.SystemError),\n/* harmony export */   ToolCallError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.ToolCallError),\n/* harmony export */   Trace: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.Trace),\n/* harmony export */   TraceProvider: () => (/* reexport safe */ _tracing_provider_mjs__WEBPACK_IMPORTED_MODULE_19__.TraceProvider),\n/* harmony export */   Usage: () => (/* reexport safe */ _usage_mjs__WEBPACK_IMPORTED_MODULE_20__.Usage),\n/* harmony export */   UserError: () => (/* reexport safe */ _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.UserError),\n/* harmony export */   addTraceProcessor: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.addTraceProcessor),\n/* harmony export */   assistant: () => (/* reexport safe */ _helpers_message_mjs__WEBPACK_IMPORTED_MODULE_8__.assistant),\n/* harmony export */   computerTool: () => (/* reexport safe */ _tool_mjs__WEBPACK_IMPORTED_MODULE_18__.computerTool),\n/* harmony export */   createAgentSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.createAgentSpan),\n/* harmony export */   createCustomSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.createCustomSpan),\n/* harmony export */   createFunctionSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.createFunctionSpan),\n/* harmony export */   createGenerationSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.createGenerationSpan),\n/* harmony export */   createGuardrailSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.createGuardrailSpan),\n/* harmony export */   createHandoffSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.createHandoffSpan),\n/* harmony export */   createMCPListToolsSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.createMCPListToolsSpan),\n/* harmony export */   createResponseSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.createResponseSpan),\n/* harmony export */   createSpeechGroupSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.createSpeechGroupSpan),\n/* harmony export */   createSpeechSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.createSpeechSpan),\n/* harmony export */   createTranscriptionSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.createTranscriptionSpan),\n/* harmony export */   defineOutputGuardrail: () => (/* reexport safe */ _guardrail_mjs__WEBPACK_IMPORTED_MODULE_6__.defineOutputGuardrail),\n/* harmony export */   extractAllTextOutput: () => (/* reexport safe */ _items_mjs__WEBPACK_IMPORTED_MODULE_9__.extractAllTextOutput),\n/* harmony export */   generateGroupId: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.generateGroupId),\n/* harmony export */   generateSpanId: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.generateSpanId),\n/* harmony export */   generateTraceId: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.generateTraceId),\n/* harmony export */   getAllMcpTools: () => (/* reexport safe */ _mcp_mjs__WEBPACK_IMPORTED_MODULE_12__.getAllMcpTools),\n/* harmony export */   getCurrentSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.getCurrentSpan),\n/* harmony export */   getCurrentTrace: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.getCurrentTrace),\n/* harmony export */   getGlobalTraceProvider: () => (/* reexport safe */ _tracing_provider_mjs__WEBPACK_IMPORTED_MODULE_19__.getGlobalTraceProvider),\n/* harmony export */   getHandoff: () => (/* reexport safe */ _handoff_mjs__WEBPACK_IMPORTED_MODULE_7__.getHandoff),\n/* harmony export */   getLogger: () => (/* reexport safe */ _logger_mjs__WEBPACK_IMPORTED_MODULE_11__.getLogger),\n/* harmony export */   getOrCreateTrace: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.getOrCreateTrace),\n/* harmony export */   getTransferMessage: () => (/* reexport safe */ _handoff_mjs__WEBPACK_IMPORTED_MODULE_7__.getTransferMessage),\n/* harmony export */   handoff: () => (/* reexport safe */ _handoff_mjs__WEBPACK_IMPORTED_MODULE_7__.handoff),\n/* harmony export */   invalidateServerToolsCache: () => (/* reexport safe */ _mcp_mjs__WEBPACK_IMPORTED_MODULE_12__.invalidateServerToolsCache),\n/* harmony export */   protocol: () => (/* reexport module object */ _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_21__),\n/* harmony export */   resetCurrentSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.resetCurrentSpan),\n/* harmony export */   run: () => (/* reexport safe */ _run_mjs__WEBPACK_IMPORTED_MODULE_15__.run),\n/* harmony export */   setCurrentSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.setCurrentSpan),\n/* harmony export */   setDefaultModelProvider: () => (/* reexport safe */ _providers_mjs__WEBPACK_IMPORTED_MODULE_13__.setDefaultModelProvider),\n/* harmony export */   setTraceProcessors: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.setTraceProcessors),\n/* harmony export */   setTracingDisabled: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.setTracingDisabled),\n/* harmony export */   system: () => (/* reexport safe */ _helpers_message_mjs__WEBPACK_IMPORTED_MODULE_8__.system),\n/* harmony export */   tool: () => (/* reexport safe */ _tool_mjs__WEBPACK_IMPORTED_MODULE_18__.tool),\n/* harmony export */   user: () => (/* reexport safe */ _helpers_message_mjs__WEBPACK_IMPORTED_MODULE_8__.user),\n/* harmony export */   withAgentSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.withAgentSpan),\n/* harmony export */   withCustomSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.withCustomSpan),\n/* harmony export */   withFunctionSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.withFunctionSpan),\n/* harmony export */   withGenerationSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.withGenerationSpan),\n/* harmony export */   withGuardrailSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.withGuardrailSpan),\n/* harmony export */   withHandoffSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.withHandoffSpan),\n/* harmony export */   withMCPListToolsSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.withMCPListToolsSpan),\n/* harmony export */   withResponseSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.withResponseSpan),\n/* harmony export */   withSpeechGroupSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.withSpeechGroupSpan),\n/* harmony export */   withSpeechSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.withSpeechSpan),\n/* harmony export */   withTrace: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.withTrace),\n/* harmony export */   withTranscriptionSpan: () => (/* reexport safe */ _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.withTranscriptionSpan)\n/* harmony export */ });\n/* harmony import */ var _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tracing/index.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/index.mjs\");\n/* harmony import */ var _tracing_processor_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tracing/processor.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/processor.mjs\");\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n/* harmony import */ var _agent_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./agent.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/agent.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _events_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./events.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/events.mjs\");\n/* harmony import */ var _guardrail_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./guardrail.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/guardrail.mjs\");\n/* harmony import */ var _handoff_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./handoff.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/handoff.mjs\");\n/* harmony import */ var _helpers_message_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./helpers/message.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/helpers/message.mjs\");\n/* harmony import */ var _items_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./items.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/items.mjs\");\n/* harmony import */ var _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./lifecycle.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/lifecycle.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _mcp_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./mcp.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/mcp.mjs\");\n/* harmony import */ var _providers_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./providers.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/providers.mjs\");\n/* harmony import */ var _result_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./result.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/result.mjs\");\n/* harmony import */ var _run_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./run.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/run.mjs\");\n/* harmony import */ var _runContext_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./runContext.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runContext.mjs\");\n/* harmony import */ var _runState_mjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./runState.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runState.mjs\");\n/* harmony import */ var _tool_mjs__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./tool.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tool.mjs\");\n/* harmony import */ var _tracing_provider_mjs__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./tracing/provider.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/provider.mjs\");\n/* harmony import */ var _usage_mjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./usage.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/usage.mjs\");\n/* harmony import */ var _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./types/protocol.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/types/protocol.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Add the default processor, which exports traces and spans to the backend in batches. You can\n * change the default behavior by either:\n * 1. calling addTraceProcessor, which adds additional processors, or\n * 2. calling setTraceProcessors, which sets the processors and discards the default one\n */\n(0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_0__.addTraceProcessor)((0,_tracing_processor_mjs__WEBPACK_IMPORTED_MODULE_1__.defaultProcessor)());\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd0Q7QUFDRztBQUNNO0FBQzVCO0FBQ3FMO0FBQ25IO0FBQzlDO0FBQ3lCO0FBQ2xCO0FBQzZHO0FBQ2hJO0FBQ0o7QUFDK0M7QUFDOUI7QUFDRTtBQUNuQjtBQUNLO0FBQ0o7QUFDTztBQUNiO0FBQzJDO0FBQzNDO0FBQ2E7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUVBQWlCLENBQUMsd0VBQWdCO0FBQ2xDIiwic291cmNlcyI6WyIvVXNlcnMveXV3YW5nL3Byb2plY3RzL29wZW5haS1yZWFsdGltZS1hZ2VudHMvbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFkZFRyYWNlUHJvY2Vzc29yIH0gZnJvbSBcIi4vdHJhY2luZy9pbmRleC5tanNcIjtcbmltcG9ydCB7IGRlZmF1bHRQcm9jZXNzb3IgfSBmcm9tIFwiLi90cmFjaW5nL3Byb2Nlc3Nvci5tanNcIjtcbmV4cG9ydCB7IFJ1bnRpbWVFdmVudEVtaXR0ZXIgfSBmcm9tICdAb3BlbmFpL2FnZW50cy1jb3JlL19zaGltcyc7XG5leHBvcnQgeyBBZ2VudCwgfSBmcm9tIFwiLi9hZ2VudC5tanNcIjtcbmV4cG9ydCB7IEFnZW50c0Vycm9yLCBHdWFyZHJhaWxFeGVjdXRpb25FcnJvciwgSW5wdXRHdWFyZHJhaWxUcmlwd2lyZVRyaWdnZXJlZCwgTWF4VHVybnNFeGNlZWRlZEVycm9yLCBNb2RlbEJlaGF2aW9yRXJyb3IsIE91dHB1dEd1YXJkcmFpbFRyaXB3aXJlVHJpZ2dlcmVkLCBUb29sQ2FsbEVycm9yLCBVc2VyRXJyb3IsIFN5c3RlbUVycm9yLCB9IGZyb20gXCIuL2Vycm9ycy5tanNcIjtcbmV4cG9ydCB7IFJ1bkFnZW50VXBkYXRlZFN0cmVhbUV2ZW50LCBSdW5SYXdNb2RlbFN0cmVhbUV2ZW50LCBSdW5JdGVtU3RyZWFtRXZlbnQsIH0gZnJvbSBcIi4vZXZlbnRzLm1qc1wiO1xuZXhwb3J0IHsgZGVmaW5lT3V0cHV0R3VhcmRyYWlsLCB9IGZyb20gXCIuL2d1YXJkcmFpbC5tanNcIjtcbmV4cG9ydCB7IGdldEhhbmRvZmYsIGdldFRyYW5zZmVyTWVzc2FnZSwgSGFuZG9mZiwgaGFuZG9mZiwgfSBmcm9tIFwiLi9oYW5kb2ZmLm1qc1wiO1xuZXhwb3J0IHsgYXNzaXN0YW50LCBzeXN0ZW0sIHVzZXIgfSBmcm9tIFwiLi9oZWxwZXJzL21lc3NhZ2UubWpzXCI7XG5leHBvcnQgeyBleHRyYWN0QWxsVGV4dE91dHB1dCwgUnVuSGFuZG9mZkNhbGxJdGVtLCBSdW5NZXNzYWdlT3V0cHV0SXRlbSwgUnVuUmVhc29uaW5nSXRlbSwgUnVuVG9vbEFwcHJvdmFsSXRlbSwgUnVuVG9vbENhbGxJdGVtLCBSdW5Ub29sQ2FsbE91dHB1dEl0ZW0sIH0gZnJvbSBcIi4vaXRlbXMubWpzXCI7XG5leHBvcnQgeyBBZ2VudEhvb2tzIH0gZnJvbSBcIi4vbGlmZWN5Y2xlLm1qc1wiO1xuZXhwb3J0IHsgZ2V0TG9nZ2VyIH0gZnJvbSBcIi4vbG9nZ2VyLm1qc1wiO1xuZXhwb3J0IHsgZ2V0QWxsTWNwVG9vbHMsIGludmFsaWRhdGVTZXJ2ZXJUb29sc0NhY2hlLCBNQ1BTZXJ2ZXJTdGRpbywgfSBmcm9tIFwiLi9tY3AubWpzXCI7XG5leHBvcnQgeyBzZXREZWZhdWx0TW9kZWxQcm92aWRlciB9IGZyb20gXCIuL3Byb3ZpZGVycy5tanNcIjtcbmV4cG9ydCB7IFJ1blJlc3VsdCwgU3RyZWFtZWRSdW5SZXN1bHQgfSBmcm9tIFwiLi9yZXN1bHQubWpzXCI7XG5leHBvcnQgeyBydW4sIFJ1bm5lciwgfSBmcm9tIFwiLi9ydW4ubWpzXCI7XG5leHBvcnQgeyBSdW5Db250ZXh0IH0gZnJvbSBcIi4vcnVuQ29udGV4dC5tanNcIjtcbmV4cG9ydCB7IFJ1blN0YXRlIH0gZnJvbSBcIi4vcnVuU3RhdGUubWpzXCI7XG5leHBvcnQgeyBjb21wdXRlclRvb2wsIHRvb2wsIH0gZnJvbSBcIi4vdG9vbC5tanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3RyYWNpbmcvaW5kZXgubWpzXCI7XG5leHBvcnQgeyBnZXRHbG9iYWxUcmFjZVByb3ZpZGVyLCBUcmFjZVByb3ZpZGVyIH0gZnJvbSBcIi4vdHJhY2luZy9wcm92aWRlci5tanNcIjtcbmV4cG9ydCB7IFVzYWdlIH0gZnJvbSBcIi4vdXNhZ2UubWpzXCI7XG5leHBvcnQgKiBhcyBwcm90b2NvbCBmcm9tIFwiLi90eXBlcy9wcm90b2NvbC5tanNcIjtcbi8qKlxuICogQWRkIHRoZSBkZWZhdWx0IHByb2Nlc3Nvciwgd2hpY2ggZXhwb3J0cyB0cmFjZXMgYW5kIHNwYW5zIHRvIHRoZSBiYWNrZW5kIGluIGJhdGNoZXMuIFlvdSBjYW5cbiAqIGNoYW5nZSB0aGUgZGVmYXVsdCBiZWhhdmlvciBieSBlaXRoZXI6XG4gKiAxLiBjYWxsaW5nIGFkZFRyYWNlUHJvY2Vzc29yLCB3aGljaCBhZGRzIGFkZGl0aW9uYWwgcHJvY2Vzc29ycywgb3JcbiAqIDIuIGNhbGxpbmcgc2V0VHJhY2VQcm9jZXNzb3JzLCB3aGljaCBzZXRzIHRoZSBwcm9jZXNzb3JzIGFuZCBkaXNjYXJkcyB0aGUgZGVmYXVsdCBvbmVcbiAqL1xuYWRkVHJhY2VQcm9jZXNzb3IoZGVmYXVsdFByb2Nlc3NvcigpKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4Lm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/index.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/items.mjs":
/*!********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/items.mjs ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RunHandoffCallItem: () => (/* binding */ RunHandoffCallItem),\n/* harmony export */   RunHandoffOutputItem: () => (/* binding */ RunHandoffOutputItem),\n/* harmony export */   RunItemBase: () => (/* binding */ RunItemBase),\n/* harmony export */   RunMessageOutputItem: () => (/* binding */ RunMessageOutputItem),\n/* harmony export */   RunReasoningItem: () => (/* binding */ RunReasoningItem),\n/* harmony export */   RunToolApprovalItem: () => (/* binding */ RunToolApprovalItem),\n/* harmony export */   RunToolCallItem: () => (/* binding */ RunToolCallItem),\n/* harmony export */   RunToolCallOutputItem: () => (/* binding */ RunToolCallOutputItem),\n/* harmony export */   extractAllTextOutput: () => (/* binding */ extractAllTextOutput)\n/* harmony export */ });\n/* harmony import */ var _utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/smartString.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/smartString.mjs\");\n\nclass RunItemBase {\n    type = 'base_item';\n    rawItem;\n    toJSON() {\n        return {\n            type: this.type,\n            rawItem: this.rawItem,\n        };\n    }\n}\nclass RunMessageOutputItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'message_output_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n    get content() {\n        let content = '';\n        for (const part of this.rawItem.content) {\n            if (part.type === 'output_text') {\n                content += part.text;\n            }\n        }\n        return content;\n    }\n}\nclass RunToolCallItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'tool_call_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n}\nclass RunToolCallOutputItem extends RunItemBase {\n    rawItem;\n    agent;\n    output;\n    type = 'tool_call_output_item';\n    constructor(rawItem, agent, output) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n        this.output = output;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n            output: (0,_utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_0__.toSmartString)(this.output),\n        };\n    }\n}\nclass RunReasoningItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'reasoning_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n}\nclass RunHandoffCallItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'handoff_call_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n}\nclass RunHandoffOutputItem extends RunItemBase {\n    rawItem;\n    sourceAgent;\n    targetAgent;\n    type = 'handoff_output_item';\n    constructor(rawItem, sourceAgent, targetAgent) {\n        super();\n        this.rawItem = rawItem;\n        this.sourceAgent = sourceAgent;\n        this.targetAgent = targetAgent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            sourceAgent: this.sourceAgent.toJSON(),\n            targetAgent: this.targetAgent.toJSON(),\n        };\n    }\n}\nclass RunToolApprovalItem extends RunItemBase {\n    rawItem;\n    agent;\n    type = 'tool_approval_item';\n    constructor(rawItem, agent) {\n        super();\n        this.rawItem = rawItem;\n        this.agent = agent;\n    }\n    toJSON() {\n        return {\n            ...super.toJSON(),\n            agent: this.agent.toJSON(),\n        };\n    }\n}\n/**\n * Extract all text output from a list of run items by concatenating the content of all\n * message output items.\n *\n * @param items - The list of run items to extract text from.\n * @returns A string of all the text output from the run items.\n */\nfunction extractAllTextOutput(items) {\n    return items\n        .filter((item) => item.type === 'message_output_item')\n        .map((item) => item.content)\n        .join('');\n}\n//# sourceMappingURL=items.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvaXRlbXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBd0Q7QUFDakQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFFQUFhO0FBQ2pDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3l1d2FuZy9wcm9qZWN0cy9vcGVuYWktcmVhbHRpbWUtYWdlbnRzL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC41X3dzQDguMTguM196b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L2l0ZW1zLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b1NtYXJ0U3RyaW5nIH0gZnJvbSBcIi4vdXRpbHMvc21hcnRTdHJpbmcubWpzXCI7XG5leHBvcnQgY2xhc3MgUnVuSXRlbUJhc2Uge1xuICAgIHR5cGUgPSAnYmFzZV9pdGVtJztcbiAgICByYXdJdGVtO1xuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6IHRoaXMudHlwZSxcbiAgICAgICAgICAgIHJhd0l0ZW06IHRoaXMucmF3SXRlbSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUnVuTWVzc2FnZU91dHB1dEl0ZW0gZXh0ZW5kcyBSdW5JdGVtQmFzZSB7XG4gICAgcmF3SXRlbTtcbiAgICBhZ2VudDtcbiAgICB0eXBlID0gJ21lc3NhZ2Vfb3V0cHV0X2l0ZW0nO1xuICAgIGNvbnN0cnVjdG9yKHJhd0l0ZW0sIGFnZW50KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMucmF3SXRlbSA9IHJhd0l0ZW07XG4gICAgICAgIHRoaXMuYWdlbnQgPSBhZ2VudDtcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uc3VwZXIudG9KU09OKCksXG4gICAgICAgICAgICBhZ2VudDogdGhpcy5hZ2VudC50b0pTT04oKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZ2V0IGNvbnRlbnQoKSB7XG4gICAgICAgIGxldCBjb250ZW50ID0gJyc7XG4gICAgICAgIGZvciAoY29uc3QgcGFydCBvZiB0aGlzLnJhd0l0ZW0uY29udGVudCkge1xuICAgICAgICAgICAgaWYgKHBhcnQudHlwZSA9PT0gJ291dHB1dF90ZXh0Jykge1xuICAgICAgICAgICAgICAgIGNvbnRlbnQgKz0gcGFydC50ZXh0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBSdW5Ub29sQ2FsbEl0ZW0gZXh0ZW5kcyBSdW5JdGVtQmFzZSB7XG4gICAgcmF3SXRlbTtcbiAgICBhZ2VudDtcbiAgICB0eXBlID0gJ3Rvb2xfY2FsbF9pdGVtJztcbiAgICBjb25zdHJ1Y3RvcihyYXdJdGVtLCBhZ2VudCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnJhd0l0ZW0gPSByYXdJdGVtO1xuICAgICAgICB0aGlzLmFnZW50ID0gYWdlbnQ7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLnN1cGVyLnRvSlNPTigpLFxuICAgICAgICAgICAgYWdlbnQ6IHRoaXMuYWdlbnQudG9KU09OKCksXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFJ1blRvb2xDYWxsT3V0cHV0SXRlbSBleHRlbmRzIFJ1bkl0ZW1CYXNlIHtcbiAgICByYXdJdGVtO1xuICAgIGFnZW50O1xuICAgIG91dHB1dDtcbiAgICB0eXBlID0gJ3Rvb2xfY2FsbF9vdXRwdXRfaXRlbSc7XG4gICAgY29uc3RydWN0b3IocmF3SXRlbSwgYWdlbnQsIG91dHB1dCkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLnJhd0l0ZW0gPSByYXdJdGVtO1xuICAgICAgICB0aGlzLmFnZW50ID0gYWdlbnQ7XG4gICAgICAgIHRoaXMub3V0cHV0ID0gb3V0cHV0O1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5zdXBlci50b0pTT04oKSxcbiAgICAgICAgICAgIGFnZW50OiB0aGlzLmFnZW50LnRvSlNPTigpLFxuICAgICAgICAgICAgb3V0cHV0OiB0b1NtYXJ0U3RyaW5nKHRoaXMub3V0cHV0KSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUnVuUmVhc29uaW5nSXRlbSBleHRlbmRzIFJ1bkl0ZW1CYXNlIHtcbiAgICByYXdJdGVtO1xuICAgIGFnZW50O1xuICAgIHR5cGUgPSAncmVhc29uaW5nX2l0ZW0nO1xuICAgIGNvbnN0cnVjdG9yKHJhd0l0ZW0sIGFnZW50KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMucmF3SXRlbSA9IHJhd0l0ZW07XG4gICAgICAgIHRoaXMuYWdlbnQgPSBhZ2VudDtcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4uc3VwZXIudG9KU09OKCksXG4gICAgICAgICAgICBhZ2VudDogdGhpcy5hZ2VudC50b0pTT04oKSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnQgY2xhc3MgUnVuSGFuZG9mZkNhbGxJdGVtIGV4dGVuZHMgUnVuSXRlbUJhc2Uge1xuICAgIHJhd0l0ZW07XG4gICAgYWdlbnQ7XG4gICAgdHlwZSA9ICdoYW5kb2ZmX2NhbGxfaXRlbSc7XG4gICAgY29uc3RydWN0b3IocmF3SXRlbSwgYWdlbnQpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5yYXdJdGVtID0gcmF3SXRlbTtcbiAgICAgICAgdGhpcy5hZ2VudCA9IGFnZW50O1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5zdXBlci50b0pTT04oKSxcbiAgICAgICAgICAgIGFnZW50OiB0aGlzLmFnZW50LnRvSlNPTigpLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBSdW5IYW5kb2ZmT3V0cHV0SXRlbSBleHRlbmRzIFJ1bkl0ZW1CYXNlIHtcbiAgICByYXdJdGVtO1xuICAgIHNvdXJjZUFnZW50O1xuICAgIHRhcmdldEFnZW50O1xuICAgIHR5cGUgPSAnaGFuZG9mZl9vdXRwdXRfaXRlbSc7XG4gICAgY29uc3RydWN0b3IocmF3SXRlbSwgc291cmNlQWdlbnQsIHRhcmdldEFnZW50KSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMucmF3SXRlbSA9IHJhd0l0ZW07XG4gICAgICAgIHRoaXMuc291cmNlQWdlbnQgPSBzb3VyY2VBZ2VudDtcbiAgICAgICAgdGhpcy50YXJnZXRBZ2VudCA9IHRhcmdldEFnZW50O1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5zdXBlci50b0pTT04oKSxcbiAgICAgICAgICAgIHNvdXJjZUFnZW50OiB0aGlzLnNvdXJjZUFnZW50LnRvSlNPTigpLFxuICAgICAgICAgICAgdGFyZ2V0QWdlbnQ6IHRoaXMudGFyZ2V0QWdlbnQudG9KU09OKCksXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFJ1blRvb2xBcHByb3ZhbEl0ZW0gZXh0ZW5kcyBSdW5JdGVtQmFzZSB7XG4gICAgcmF3SXRlbTtcbiAgICBhZ2VudDtcbiAgICB0eXBlID0gJ3Rvb2xfYXBwcm92YWxfaXRlbSc7XG4gICAgY29uc3RydWN0b3IocmF3SXRlbSwgYWdlbnQpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgdGhpcy5yYXdJdGVtID0gcmF3SXRlbTtcbiAgICAgICAgdGhpcy5hZ2VudCA9IGFnZW50O1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5zdXBlci50b0pTT04oKSxcbiAgICAgICAgICAgIGFnZW50OiB0aGlzLmFnZW50LnRvSlNPTigpLFxuICAgICAgICB9O1xuICAgIH1cbn1cbi8qKlxuICogRXh0cmFjdCBhbGwgdGV4dCBvdXRwdXQgZnJvbSBhIGxpc3Qgb2YgcnVuIGl0ZW1zIGJ5IGNvbmNhdGVuYXRpbmcgdGhlIGNvbnRlbnQgb2YgYWxsXG4gKiBtZXNzYWdlIG91dHB1dCBpdGVtcy5cbiAqXG4gKiBAcGFyYW0gaXRlbXMgLSBUaGUgbGlzdCBvZiBydW4gaXRlbXMgdG8gZXh0cmFjdCB0ZXh0IGZyb20uXG4gKiBAcmV0dXJucyBBIHN0cmluZyBvZiBhbGwgdGhlIHRleHQgb3V0cHV0IGZyb20gdGhlIHJ1biBpdGVtcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RBbGxUZXh0T3V0cHV0KGl0ZW1zKSB7XG4gICAgcmV0dXJuIGl0ZW1zXG4gICAgICAgIC5maWx0ZXIoKGl0ZW0pID0+IGl0ZW0udHlwZSA9PT0gJ21lc3NhZ2Vfb3V0cHV0X2l0ZW0nKVxuICAgICAgICAubWFwKChpdGVtKSA9PiBpdGVtLmNvbnRlbnQpXG4gICAgICAgIC5qb2luKCcnKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWl0ZW1zLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/items.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/lifecycle.mjs":
/*!************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/lifecycle.mjs ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentHooks: () => (/* binding */ AgentHooks),\n/* harmony export */   EventEmitterDelegate: () => (/* binding */ EventEmitterDelegate),\n/* harmony export */   RunHooks: () => (/* binding */ RunHooks)\n/* harmony export */ });\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n\nclass EventEmitterDelegate {\n    on(type, listener) {\n        this.eventEmitter.on(type, listener);\n        return this.eventEmitter;\n    }\n    off(type, listener) {\n        this.eventEmitter.off(type, listener);\n        return this.eventEmitter;\n    }\n    emit(type, ...args) {\n        return this.eventEmitter.emit(type, ...args);\n    }\n    once(type, listener) {\n        this.eventEmitter.once(type, listener);\n        return this.eventEmitter;\n    }\n}\n/**\n * Event emitter that every Agent instance inherits from and that emits events for the lifecycle\n * of the agent.\n */\nclass AgentHooks extends EventEmitterDelegate {\n    eventEmitter = new _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.RuntimeEventEmitter();\n}\n/**\n * Event emitter that every Runner instance inherits from and that emits events for the lifecycle\n * of the overall run.\n */\nclass RunHooks extends EventEmitterDelegate {\n    eventEmitter = new _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.RuntimeEventEmitter();\n}\n//# sourceMappingURL=lifecycle.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvbGlmZWN5Y2xlLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWtFO0FBQzNEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsdUJBQXVCLDBFQUFtQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCx1QkFBdUIsMEVBQW1CO0FBQzFDO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXdhbmcvcHJvamVjdHMvb3BlbmFpLXJlYWx0aW1lLWFnZW50cy9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuNV93c0A4LjE4LjNfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9saWZlY3ljbGUubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJ1bnRpbWVFdmVudEVtaXR0ZXIsIH0gZnJvbSAnQG9wZW5haS9hZ2VudHMtY29yZS9fc2hpbXMnO1xuZXhwb3J0IGNsYXNzIEV2ZW50RW1pdHRlckRlbGVnYXRlIHtcbiAgICBvbih0eXBlLCBsaXN0ZW5lcikge1xuICAgICAgICB0aGlzLmV2ZW50RW1pdHRlci5vbih0eXBlLCBsaXN0ZW5lcik7XG4gICAgICAgIHJldHVybiB0aGlzLmV2ZW50RW1pdHRlcjtcbiAgICB9XG4gICAgb2ZmKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuZXZlbnRFbWl0dGVyLm9mZih0eXBlLCBsaXN0ZW5lcik7XG4gICAgICAgIHJldHVybiB0aGlzLmV2ZW50RW1pdHRlcjtcbiAgICB9XG4gICAgZW1pdCh0eXBlLCAuLi5hcmdzKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmV2ZW50RW1pdHRlci5lbWl0KHR5cGUsIC4uLmFyZ3MpO1xuICAgIH1cbiAgICBvbmNlKHR5cGUsIGxpc3RlbmVyKSB7XG4gICAgICAgIHRoaXMuZXZlbnRFbWl0dGVyLm9uY2UodHlwZSwgbGlzdGVuZXIpO1xuICAgICAgICByZXR1cm4gdGhpcy5ldmVudEVtaXR0ZXI7XG4gICAgfVxufVxuLyoqXG4gKiBFdmVudCBlbWl0dGVyIHRoYXQgZXZlcnkgQWdlbnQgaW5zdGFuY2UgaW5oZXJpdHMgZnJvbSBhbmQgdGhhdCBlbWl0cyBldmVudHMgZm9yIHRoZSBsaWZlY3ljbGVcbiAqIG9mIHRoZSBhZ2VudC5cbiAqL1xuZXhwb3J0IGNsYXNzIEFnZW50SG9va3MgZXh0ZW5kcyBFdmVudEVtaXR0ZXJEZWxlZ2F0ZSB7XG4gICAgZXZlbnRFbWl0dGVyID0gbmV3IFJ1bnRpbWVFdmVudEVtaXR0ZXIoKTtcbn1cbi8qKlxuICogRXZlbnQgZW1pdHRlciB0aGF0IGV2ZXJ5IFJ1bm5lciBpbnN0YW5jZSBpbmhlcml0cyBmcm9tIGFuZCB0aGF0IGVtaXRzIGV2ZW50cyBmb3IgdGhlIGxpZmVjeWNsZVxuICogb2YgdGhlIG92ZXJhbGwgcnVuLlxuICovXG5leHBvcnQgY2xhc3MgUnVuSG9va3MgZXh0ZW5kcyBFdmVudEVtaXR0ZXJEZWxlZ2F0ZSB7XG4gICAgZXZlbnRFbWl0dGVyID0gbmV3IFJ1bnRpbWVFdmVudEVtaXR0ZXIoKTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxpZmVjeWNsZS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/lifecycle.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs":
/*!*********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getLogger: () => (/* binding */ getLogger),\n/* harmony export */   logger: () => (/* binding */ logger)\n/* harmony export */ });\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! debug */ \"(ssr)/../../node_modules/.pnpm/debug@4.4.3/node_modules/debug/src/index.js\");\n/* harmony import */ var _config_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./config.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/config.mjs\");\n\n\n/**\n * By default we don't log LLM inputs/outputs, to prevent exposing sensitive data. Set this flag\n * to enable logging them.\n */\nconst dontLogModelData = _config_mjs__WEBPACK_IMPORTED_MODULE_1__.logging.dontLogModelData;\n/**\n * By default we don't log tool inputs/outputs, to prevent exposing sensitive data. Set this flag\n * to enable logging them.\n */\nconst dontLogToolData = _config_mjs__WEBPACK_IMPORTED_MODULE_1__.logging.dontLogToolData;\n/**\n * Get a logger for a given package.\n *\n * @param namespace - the namespace to use for the logger.\n * @returns A logger object with `debug` and `error` methods.\n */\nfunction getLogger(namespace = 'openai-agents') {\n    return {\n        namespace,\n        debug: debug__WEBPACK_IMPORTED_MODULE_0__(namespace),\n        error: console.error,\n        warn: console.warn,\n        dontLogModelData,\n        dontLogToolData,\n    };\n}\nconst logger = getLogger('openai-agents:core');\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (logger);\n//# sourceMappingURL=logger.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvbG9nZ2VyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEwQjtBQUNhO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGdEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdEQUFPO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGVBQWUsa0NBQUs7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxpRUFBZSxNQUFNLEVBQUM7QUFDdEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXdhbmcvcHJvamVjdHMvb3BlbmFpLXJlYWx0aW1lLWFnZW50cy9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuNV93c0A4LjE4LjNfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9sb2dnZXIubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkZWJ1ZyBmcm9tICdkZWJ1Zyc7XG5pbXBvcnQgeyBsb2dnaW5nIH0gZnJvbSBcIi4vY29uZmlnLm1qc1wiO1xuLyoqXG4gKiBCeSBkZWZhdWx0IHdlIGRvbid0IGxvZyBMTE0gaW5wdXRzL291dHB1dHMsIHRvIHByZXZlbnQgZXhwb3Npbmcgc2Vuc2l0aXZlIGRhdGEuIFNldCB0aGlzIGZsYWdcbiAqIHRvIGVuYWJsZSBsb2dnaW5nIHRoZW0uXG4gKi9cbmNvbnN0IGRvbnRMb2dNb2RlbERhdGEgPSBsb2dnaW5nLmRvbnRMb2dNb2RlbERhdGE7XG4vKipcbiAqIEJ5IGRlZmF1bHQgd2UgZG9uJ3QgbG9nIHRvb2wgaW5wdXRzL291dHB1dHMsIHRvIHByZXZlbnQgZXhwb3Npbmcgc2Vuc2l0aXZlIGRhdGEuIFNldCB0aGlzIGZsYWdcbiAqIHRvIGVuYWJsZSBsb2dnaW5nIHRoZW0uXG4gKi9cbmNvbnN0IGRvbnRMb2dUb29sRGF0YSA9IGxvZ2dpbmcuZG9udExvZ1Rvb2xEYXRhO1xuLyoqXG4gKiBHZXQgYSBsb2dnZXIgZm9yIGEgZ2l2ZW4gcGFja2FnZS5cbiAqXG4gKiBAcGFyYW0gbmFtZXNwYWNlIC0gdGhlIG5hbWVzcGFjZSB0byB1c2UgZm9yIHRoZSBsb2dnZXIuXG4gKiBAcmV0dXJucyBBIGxvZ2dlciBvYmplY3Qgd2l0aCBgZGVidWdgIGFuZCBgZXJyb3JgIG1ldGhvZHMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRMb2dnZXIobmFtZXNwYWNlID0gJ29wZW5haS1hZ2VudHMnKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZXNwYWNlLFxuICAgICAgICBkZWJ1ZzogZGVidWcobmFtZXNwYWNlKSxcbiAgICAgICAgZXJyb3I6IGNvbnNvbGUuZXJyb3IsXG4gICAgICAgIHdhcm46IGNvbnNvbGUud2FybixcbiAgICAgICAgZG9udExvZ01vZGVsRGF0YSxcbiAgICAgICAgZG9udExvZ1Rvb2xEYXRhLFxuICAgIH07XG59XG5leHBvcnQgY29uc3QgbG9nZ2VyID0gZ2V0TG9nZ2VyKCdvcGVuYWktYWdlbnRzOmNvcmUnKTtcbmV4cG9ydCBkZWZhdWx0IGxvZ2dlcjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWxvZ2dlci5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/mcp.mjs":
/*!******************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/mcp.mjs ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseMCPServerStdio: () => (/* binding */ BaseMCPServerStdio),\n/* harmony export */   DEFAULT_STDIO_MCP_CLIENT_LOGGER_NAME: () => (/* binding */ DEFAULT_STDIO_MCP_CLIENT_LOGGER_NAME),\n/* harmony export */   MCPServerStdio: () => (/* binding */ MCPServerStdio),\n/* harmony export */   MCPTool: () => (/* binding */ MCPTool),\n/* harmony export */   getAllMcpFunctionTools: () => (/* binding */ getAllMcpFunctionTools),\n/* harmony export */   getAllMcpTools: () => (/* binding */ getAllMcpTools),\n/* harmony export */   invalidateServerToolsCache: () => (/* binding */ invalidateServerToolsCache),\n/* harmony export */   mcpToFunctionTool: () => (/* binding */ mcpToFunctionTool)\n/* harmony export */ });\n/* harmony import */ var _tool_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tool.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tool.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n/* harmony import */ var _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tracing/index.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/index.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var debug__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! debug */ \"(ssr)/../../node_modules/.pnpm/debug@4.4.3/node_modules/debug/src/index.js\");\n/* harmony import */ var _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @openai/zod/v3 */ \"(ssr)/../../node_modules/.pnpm/zod@3.25.76/node_modules/zod/v3/types.js\");\n\n\n\n\n\n\n\nconst DEFAULT_STDIO_MCP_CLIENT_LOGGER_NAME = 'openai-agents:stdio-mcp-client';\nclass BaseMCPServerStdio {\n    cacheToolsList;\n    _cachedTools = undefined;\n    logger;\n    constructor(options) {\n        this.logger =\n            options.logger ?? (0,_logger_mjs__WEBPACK_IMPORTED_MODULE_4__.getLogger)(DEFAULT_STDIO_MCP_CLIENT_LOGGER_NAME);\n        this.cacheToolsList = options.cacheToolsList ?? true;\n    }\n    /**\n     * Logs a debug message when debug logging is enabled.\n     * @param buildMessage A function that returns the message to log.\n     */\n    debugLog(buildMessage) {\n        if (debug__WEBPACK_IMPORTED_MODULE_5__.enabled(this.logger.namespace)) {\n            // only when this is true, the function to build the string is called\n            this.logger.debug(buildMessage());\n        }\n    }\n}\n/**\n * Minimum MCP tool data definition.\n * This type definition does not intend to cover all possible properties.\n * It supports the properties that are used in this SDK.\n */\nconst MCPTool = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.object({\n    name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.string(),\n    description: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.string().optional(),\n    inputSchema: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.literal('object'),\n        properties: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.any()),\n        required: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.string()),\n        additionalProperties: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_6__.boolean(),\n    }),\n});\n/**\n * Public interface of an MCP server that provides tools.\n * You can use this class to pass MCP server settings to your agent.\n */\nclass MCPServerStdio extends BaseMCPServerStdio {\n    underlying;\n    constructor(options) {\n        super(options);\n        this.underlying = new _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_2__.MCPServerStdio(options);\n    }\n    get name() {\n        return this.underlying.name;\n    }\n    connect() {\n        return this.underlying.connect();\n    }\n    close() {\n        return this.underlying.close();\n    }\n    async listTools() {\n        if (this.cacheToolsList && this._cachedTools) {\n            return this._cachedTools;\n        }\n        const tools = await this.underlying.listTools();\n        if (this.cacheToolsList) {\n            this._cachedTools = tools;\n        }\n        return tools;\n    }\n    callTool(toolName, args) {\n        return this.underlying.callTool(toolName, args);\n    }\n}\n/**\n * Fetches and flattens all tools from multiple MCP servers.\n * Logs and skips any servers that fail to respond.\n */\nasync function getAllMcpFunctionTools(mcpServers, convertSchemasToStrict = false) {\n    const allTools = [];\n    const toolNames = new Set();\n    for (const server of mcpServers) {\n        const serverTools = await getFunctionToolsFromServer(server, convertSchemasToStrict);\n        const serverToolNames = new Set(serverTools.map((t) => t.name));\n        const intersection = [...serverToolNames].filter((n) => toolNames.has(n));\n        if (intersection.length > 0) {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_1__.UserError(`Duplicate tool names found across MCP servers: ${intersection.join(', ')}`);\n        }\n        for (const t of serverTools) {\n            toolNames.add(t.name);\n            allTools.push(t);\n        }\n    }\n    return allTools;\n}\nconst _cachedTools = {};\n/**\n * Remove cached tools for the given server so the next lookup fetches fresh data.\n *\n * @param serverName - Name of the MCP server whose cache should be cleared.\n */\nfunction invalidateServerToolsCache(serverName) {\n    delete _cachedTools[serverName];\n}\n/**\n * Fetches all function tools from a single MCP server.\n */\nasync function getFunctionToolsFromServer(server, convertSchemasToStrict) {\n    if (server.cacheToolsList && _cachedTools[server.name]) {\n        return _cachedTools[server.name];\n    }\n    return (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_3__.withMCPListToolsSpan)(async (span) => {\n        const mcpTools = await server.listTools();\n        span.spanData.result = mcpTools.map((t) => t.name);\n        const tools = mcpTools.map((t) => mcpToFunctionTool(t, server, convertSchemasToStrict));\n        if (server.cacheToolsList) {\n            _cachedTools[server.name] = tools;\n        }\n        return tools;\n    }, { data: { server: server.name } });\n}\n/**\n * Returns all MCP tools from the provided servers, using the function tool conversion.\n */\nasync function getAllMcpTools(mcpServers, convertSchemasToStrict = false) {\n    return getAllMcpFunctionTools(mcpServers, convertSchemasToStrict);\n}\n/**\n * Converts an MCP tool definition to a function tool for the Agents SDK.\n */\nfunction mcpToFunctionTool(mcpTool, server, convertSchemasToStrict) {\n    async function invoke(input, _context) {\n        let args = {};\n        if (typeof input === 'string' && input) {\n            args = JSON.parse(input);\n        }\n        else if (typeof input === 'object' && input != null) {\n            args = input;\n        }\n        const currentSpan = (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_3__.getCurrentSpan)();\n        if (currentSpan) {\n            currentSpan.spanData['mcp_data'] = { server: server.name };\n        }\n        const content = await server.callTool(mcpTool.name, args);\n        return content.length === 1 ? content[0] : content;\n    }\n    const schema = {\n        type: mcpTool.inputSchema?.type ?? 'object',\n        properties: mcpTool.inputSchema?.properties ?? {},\n        required: mcpTool.inputSchema?.required ?? [],\n        additionalProperties: mcpTool.inputSchema?.additionalProperties ?? false,\n    };\n    if (convertSchemasToStrict || schema.additionalProperties === true) {\n        try {\n            const strictSchema = ensureStrictJsonSchema(schema);\n            return (0,_tool_mjs__WEBPACK_IMPORTED_MODULE_0__.tool)({\n                name: mcpTool.name,\n                description: mcpTool.description || '',\n                parameters: strictSchema,\n                strict: true,\n                execute: invoke,\n            });\n        }\n        catch (e) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_4__.logger.warn(`Error converting MCP schema to strict mode: ${e}`);\n        }\n    }\n    const nonStrictSchema = {\n        ...schema,\n        additionalProperties: true,\n    };\n    return (0,_tool_mjs__WEBPACK_IMPORTED_MODULE_0__.tool)({\n        name: mcpTool.name,\n        description: mcpTool.description || '',\n        parameters: nonStrictSchema,\n        strict: false,\n        execute: invoke,\n    });\n}\n/**\n * Ensures the given JSON schema is strict (no additional properties, required fields set).\n */\nfunction ensureStrictJsonSchema(schema) {\n    const out = {\n        ...schema,\n        additionalProperties: false,\n    };\n    if (!out.required)\n        out.required = [];\n    return out;\n}\n//# sourceMappingURL=mcp.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/mcp.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/providers.mjs":
/*!************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/providers.mjs ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefaultModelProvider: () => (/* binding */ getDefaultModelProvider),\n/* harmony export */   setDefaultModelProvider: () => (/* binding */ setDefaultModelProvider)\n/* harmony export */ });\nlet DEFAULT_PROVIDER;\n/**\n * Set the model provider used when no explicit provider is supplied.\n *\n * @param provider - The provider to use by default.\n */\nfunction setDefaultModelProvider(provider) {\n    DEFAULT_PROVIDER = provider;\n}\n/**\n * Returns the default model provider.\n *\n * @returns The default model provider.\n */\nfunction getDefaultModelProvider() {\n    if (typeof DEFAULT_PROVIDER === 'undefined') {\n        throw new Error('No default model provider set. Make sure to set a provider using setDefaultModelProvider before calling getDefaultModelProvider or pass an explicit provider.');\n    }\n    return DEFAULT_PROVIDER;\n}\n//# sourceMappingURL=providers.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvcHJvdmlkZXJzLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3l1d2FuZy9wcm9qZWN0cy9vcGVuYWktcmVhbHRpbWUtYWdlbnRzL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC41X3dzQDguMTguM196b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L3Byb3ZpZGVycy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IERFRkFVTFRfUFJPVklERVI7XG4vKipcbiAqIFNldCB0aGUgbW9kZWwgcHJvdmlkZXIgdXNlZCB3aGVuIG5vIGV4cGxpY2l0IHByb3ZpZGVyIGlzIHN1cHBsaWVkLlxuICpcbiAqIEBwYXJhbSBwcm92aWRlciAtIFRoZSBwcm92aWRlciB0byB1c2UgYnkgZGVmYXVsdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldERlZmF1bHRNb2RlbFByb3ZpZGVyKHByb3ZpZGVyKSB7XG4gICAgREVGQVVMVF9QUk9WSURFUiA9IHByb3ZpZGVyO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBkZWZhdWx0IG1vZGVsIHByb3ZpZGVyLlxuICpcbiAqIEByZXR1cm5zIFRoZSBkZWZhdWx0IG1vZGVsIHByb3ZpZGVyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmYXVsdE1vZGVsUHJvdmlkZXIoKSB7XG4gICAgaWYgKHR5cGVvZiBERUZBVUxUX1BST1ZJREVSID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIGRlZmF1bHQgbW9kZWwgcHJvdmlkZXIgc2V0LiBNYWtlIHN1cmUgdG8gc2V0IGEgcHJvdmlkZXIgdXNpbmcgc2V0RGVmYXVsdE1vZGVsUHJvdmlkZXIgYmVmb3JlIGNhbGxpbmcgZ2V0RGVmYXVsdE1vZGVsUHJvdmlkZXIgb3IgcGFzcyBhbiBleHBsaWNpdCBwcm92aWRlci4nKTtcbiAgICB9XG4gICAgcmV0dXJuIERFRkFVTFRfUFJPVklERVI7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1wcm92aWRlcnMubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/providers.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/result.mjs":
/*!*********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/result.mjs ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RunResult: () => (/* binding */ RunResult),\n/* harmony export */   StreamedRunResult: () => (/* binding */ StreamedRunResult)\n/* harmony export */ });\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n/* harmony import */ var _run_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./run.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/run.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./types/protocol.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/types/protocol.mjs\");\n\n\n\n\nclass RunResultBase {\n    state;\n    constructor(state) {\n        this.state = state;\n    }\n    /**\n     * The history of the agent run. This includes the input items and the new items generated during\n     * the agent run.\n     *\n     * This can be used as inputs for the next agent run.\n     */\n    get history() {\n        return (0,_run_mjs__WEBPACK_IMPORTED_MODULE_1__.getTurnInput)(this.input, this.newItems);\n    }\n    /**\n     * The new items generated during the agent run. These include things like new messages, tool\n     * calls and their outputs, etc.\n     *\n     * It does not include information about the agents and instead represents the model data.\n     *\n     * For the output including the agents, use the `newItems` property.\n     */\n    get output() {\n        return (0,_run_mjs__WEBPACK_IMPORTED_MODULE_1__.getTurnInput)([], this.newItems);\n    }\n    /**\n     * A copy of the original input items.\n     */\n    get input() {\n        return this.state._originalInput;\n    }\n    /**\n     * The run items generated during the agent run. This associates the model data with the agents.\n     *\n     * For the model data that can be used as inputs for the next agent run, use the `output` property.\n     */\n    get newItems() {\n        return this.state._generatedItems;\n    }\n    /**\n     * The raw LLM responses generated by the model during the agent run.\n     */\n    get rawResponses() {\n        return this.state._modelResponses;\n    }\n    /**\n     * The last response ID generated by the model during the agent run.\n     */\n    get lastResponseId() {\n        const responses = this.rawResponses;\n        return responses && responses.length > 0\n            ? responses[responses.length - 1].responseId\n            : undefined;\n    }\n    /**\n     * The last agent that was run\n     */\n    get lastAgent() {\n        return this.state._currentAgent;\n    }\n    /**\n     * Guardrail results for the input messages.\n     */\n    get inputGuardrailResults() {\n        return this.state._inputGuardrailResults;\n    }\n    /**\n     * Guardrail results for the final output of the agent.\n     */\n    get outputGuardrailResults() {\n        return this.state._outputGuardrailResults;\n    }\n    /**\n     * Any interruptions that occurred during the agent run for example for tool approvals.\n     */\n    get interruptions() {\n        if (this.state._currentStep?.type === 'next_step_interruption') {\n            return this.state._currentStep.data.interruptions;\n        }\n        return [];\n    }\n    /**\n     * The final output of the agent. If the output type was set to anything other than `text`,\n     * this will be parsed either as JSON or using the Zod schema you provided.\n     */\n    get finalOutput() {\n        if (this.state._currentStep?.type === 'next_step_final_output') {\n            return this.state._currentAgent.processFinalOutput(this.state._currentStep.output);\n        }\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].warn('Accessed finalOutput before agent run is completed.');\n        return undefined;\n    }\n}\n/**\n * The result of an agent run.\n */\nclass RunResult extends RunResultBase {\n    constructor(state) {\n        super(state);\n    }\n}\n/**\n * The result of an agent run in streaming mode.\n */\nclass StreamedRunResult extends RunResultBase {\n    /**\n     * The current agent that is running\n     */\n    get currentAgent() {\n        return this.lastAgent;\n    }\n    /**\n     * The current turn number\n     */\n    currentTurn = 0;\n    /**\n     * The maximum number of turns that can be run\n     */\n    maxTurns;\n    #error = null;\n    #signal;\n    #readableController;\n    #readableStream;\n    #completedPromise;\n    #completedPromiseResolve;\n    #completedPromiseReject;\n    #cancelled = false;\n    constructor(result = {}) {\n        super(result.state);\n        this.#signal = result.signal;\n        if (this.#signal) {\n            this.#signal.addEventListener('abort', async () => {\n                await this.#readableStream.cancel();\n            });\n        }\n        this.#readableStream = new _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.ReadableStream({\n            start: (controller) => {\n                this.#readableController = controller;\n            },\n            cancel: () => {\n                this.#cancelled = true;\n            },\n        });\n        this.#completedPromise = new Promise((resolve, reject) => {\n            this.#completedPromiseResolve = resolve;\n            this.#completedPromiseReject = reject;\n        });\n    }\n    /**\n     * @internal\n     * Adds an item to the stream of output items\n     */\n    _addItem(item) {\n        if (!this.cancelled) {\n            this.#readableController?.enqueue(item);\n        }\n    }\n    /**\n     * @internal\n     * Indicates that the stream has been completed\n     */\n    _done() {\n        if (!this.cancelled && this.#readableController) {\n            this.#readableController.close();\n            this.#readableController = undefined;\n            this.#completedPromiseResolve?.();\n        }\n    }\n    /**\n     * @internal\n     * Handles an error in the stream loop.\n     */\n    _raiseError(err) {\n        if (!this.cancelled && this.#readableController) {\n            this.#readableController.error(err);\n            this.#readableController = undefined;\n        }\n        this.#error = err;\n        this.#completedPromiseReject?.(err);\n    }\n    /**\n     * Returns true if the stream has been cancelled.\n     */\n    get cancelled() {\n        return this.#cancelled;\n    }\n    /**\n     * Returns the underlying readable stream.\n     * @returns A readable stream of the agent run.\n     */\n    toStream() {\n        return this.#readableStream;\n    }\n    /**\n     * Await this promise to ensure that the stream has been completed if you are not consuming the\n     * stream directly.\n     */\n    get completed() {\n        return this.#completedPromise;\n    }\n    /**\n     * Error thrown during the run, if any.\n     */\n    get error() {\n        return this.#error;\n    }\n    toTextStream(options = {}) {\n        const stream = this.#readableStream.pipeThrough(new _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.TransformStream({\n            transform(event, controller) {\n                if (event.type === 'raw_model_stream_event' &&\n                    event.data.type === 'output_text_delta') {\n                    const item = _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_3__.StreamEventTextStream.parse(event.data);\n                    controller.enqueue(item.delta);\n                }\n            },\n        }));\n        if (options.compatibleWithNodeStreams) {\n            return _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.Readable.fromWeb(stream);\n        }\n        return stream;\n    }\n    [Symbol.asyncIterator]() {\n        return this.#readableStream[Symbol.asyncIterator]();\n    }\n}\n//# sourceMappingURL=result.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/result.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/run.mjs":
/*!******************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/run.mjs ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Runner: () => (/* binding */ Runner),\n/* harmony export */   getTracing: () => (/* binding */ getTracing),\n/* harmony export */   getTurnInput: () => (/* binding */ getTurnInput),\n/* harmony export */   run: () => (/* binding */ run)\n/* harmony export */ });\n/* harmony import */ var _guardrail_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./guardrail.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/guardrail.mjs\");\n/* harmony import */ var _handoff_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handoff.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/handoff.mjs\");\n/* harmony import */ var _providers_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./providers.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/providers.mjs\");\n/* harmony import */ var _runContext_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./runContext.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runContext.mjs\");\n/* harmony import */ var _result_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./result.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/result.mjs\");\n/* harmony import */ var _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./lifecycle.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/lifecycle.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _utils_serialize_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/serialize.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/serialize.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./runImplementation.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runImplementation.mjs\");\n/* harmony import */ var _tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./tracing/context.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/context.mjs\");\n/* harmony import */ var _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tracing/index.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/index.mjs\");\n/* harmony import */ var _usage_mjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./usage.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/usage.mjs\");\n/* harmony import */ var _events_mjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./events.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/events.mjs\");\n/* harmony import */ var _runState_mjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./runState.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runState.mjs\");\n/* harmony import */ var _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./types/protocol.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/types/protocol.mjs\");\n/* harmony import */ var _utils_tools_mjs__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/tools.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/tools.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst DEFAULT_MAX_TURNS = 10;\n/**\n * @internal\n */\nfunction getTracing(tracingDisabled, traceIncludeSensitiveData) {\n    if (tracingDisabled) {\n        return false;\n    }\n    if (traceIncludeSensitiveData) {\n        return true;\n    }\n    return 'enabled_without_data';\n}\nfunction getTurnInput(originalInput, generatedItems) {\n    const rawItems = generatedItems.map((item) => item.rawItem);\n    if (typeof originalInput === 'string') {\n        originalInput = [{ type: 'message', role: 'user', content: originalInput }];\n    }\n    return [...originalInput, ...rawItems];\n}\n/**\n * A Runner is responsible for running an agent workflow.\n */\nclass Runner extends _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_5__.RunHooks {\n    config;\n    inputGuardrailDefs;\n    outputGuardrailDefs;\n    constructor(config = {}) {\n        super();\n        this.config = {\n            modelProvider: config.modelProvider ?? (0,_providers_mjs__WEBPACK_IMPORTED_MODULE_2__.getDefaultModelProvider)(),\n            model: config.model,\n            modelSettings: config.modelSettings,\n            handoffInputFilter: config.handoffInputFilter,\n            inputGuardrails: config.inputGuardrails,\n            outputGuardrails: config.outputGuardrails,\n            tracingDisabled: config.tracingDisabled ?? false,\n            traceIncludeSensitiveData: config.traceIncludeSensitiveData ?? true,\n            workflowName: config.workflowName ?? 'Agent workflow',\n            traceId: config.traceId,\n            groupId: config.groupId,\n            traceMetadata: config.traceMetadata,\n        };\n        this.inputGuardrailDefs = (config.inputGuardrails ?? []).map(_guardrail_mjs__WEBPACK_IMPORTED_MODULE_0__.defineInputGuardrail);\n        this.outputGuardrailDefs = (config.outputGuardrails ?? []).map(_guardrail_mjs__WEBPACK_IMPORTED_MODULE_0__.defineOutputGuardrail);\n    }\n    /**\n     * @internal\n     */\n    async #runIndividualNonStream(startingAgent, input, options) {\n        return (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.withNewSpanContext)(async () => {\n            // if we have a saved state we use that one, otherwise we create a new one\n            const state = input instanceof _runState_mjs__WEBPACK_IMPORTED_MODULE_14__.RunState\n                ? input\n                : new _runState_mjs__WEBPACK_IMPORTED_MODULE_14__.RunState(options.context instanceof _runContext_mjs__WEBPACK_IMPORTED_MODULE_3__.RunContext\n                    ? options.context\n                    : new _runContext_mjs__WEBPACK_IMPORTED_MODULE_3__.RunContext(options.context), input, startingAgent, options.maxTurns ?? DEFAULT_MAX_TURNS);\n            try {\n                while (true) {\n                    let model = state._currentAgent.model ?? this.config.model;\n                    if (typeof model === 'string') {\n                        model = await this.config.modelProvider.getModel(model);\n                    }\n                    // if we don't have a current step, we treat this as a new run\n                    state._currentStep = state._currentStep ?? {\n                        type: 'next_step_run_again',\n                    };\n                    if (state._currentStep.type === 'next_step_interruption') {\n                        _logger_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"].debug('Continuing from interruption');\n                        if (!state._lastTurnResponse || !state._lastProcessedResponse) {\n                            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.UserError('No model response found in previous state', state);\n                        }\n                        const turnResult = await (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.executeInterruptedToolsAndSideEffects)(state._currentAgent, state._originalInput, state._generatedItems, state._lastTurnResponse, state._lastProcessedResponse, this, state);\n                        state._toolUseTracker.addToolUse(state._currentAgent, state._lastProcessedResponse.toolsUsed);\n                        state._originalInput = turnResult.originalInput;\n                        state._generatedItems = turnResult.generatedItems;\n                        state._currentStep = turnResult.nextStep;\n                        continue;\n                    }\n                    if (state._currentStep.type === 'next_step_run_again') {\n                        const handoffs = state._currentAgent.handoffs.map(_handoff_mjs__WEBPACK_IMPORTED_MODULE_1__.getHandoff);\n                        if (!state._currentAgentSpan) {\n                            const handoffNames = handoffs.map((h) => h.agentName);\n                            state._currentAgentSpan = (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_11__.createAgentSpan)({\n                                data: {\n                                    name: state._currentAgent.name,\n                                    handoffs: handoffNames,\n                                    output_type: state._currentAgent.outputSchemaName,\n                                },\n                            });\n                            state._currentAgentSpan.start();\n                            (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.setCurrentSpan)(state._currentAgentSpan);\n                        }\n                        const tools = await state._currentAgent.getAllTools();\n                        const serializedTools = tools.map((t) => (0,_utils_serialize_mjs__WEBPACK_IMPORTED_MODULE_7__.serializeTool)(t));\n                        const serializedHandoffs = handoffs.map((h) => (0,_utils_serialize_mjs__WEBPACK_IMPORTED_MODULE_7__.serializeHandoff)(h));\n                        if (state._currentAgentSpan) {\n                            state._currentAgentSpan.spanData.tools = tools.map((t) => t.name);\n                        }\n                        state._currentTurn++;\n                        if (state._currentTurn > state._maxTurns) {\n                            state._currentAgentSpan?.setError({\n                                message: 'Max turns exceeded',\n                                data: { max_turns: state._maxTurns },\n                            });\n                            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.MaxTurnsExceededError(`Max turns (${state._maxTurns}) exceeded`, state);\n                        }\n                        _logger_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"].debug(`Running agent ${state._currentAgent.name} (turn ${state._currentTurn})`);\n                        if (state._currentTurn === 1) {\n                            await this.#runInputGuardrails(state);\n                        }\n                        const turnInput = getTurnInput(state._originalInput, state._generatedItems);\n                        if (state._noActiveAgentRun) {\n                            state._currentAgent.emit('agent_start', state._context, state._currentAgent);\n                            this.emit('agent_start', state._context, state._currentAgent);\n                        }\n                        let modelSettings = {\n                            ...this.config.modelSettings,\n                            ...state._currentAgent.modelSettings,\n                        };\n                        modelSettings = (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.maybeResetToolChoice)(state._currentAgent, state._toolUseTracker, modelSettings);\n                        state._lastTurnResponse = await model.getResponse({\n                            systemInstructions: await state._currentAgent.getSystemPrompt(state._context),\n                            input: turnInput,\n                            previousResponseId: options.previousResponseId,\n                            modelSettings,\n                            tools: serializedTools,\n                            outputType: (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_16__.convertAgentOutputTypeToSerializable)(state._currentAgent.outputType),\n                            handoffs: serializedHandoffs,\n                            tracing: getTracing(this.config.tracingDisabled, this.config.traceIncludeSensitiveData),\n                        });\n                        state._modelResponses.push(state._lastTurnResponse);\n                        state._context.usage.add(state._lastTurnResponse.usage);\n                        state._noActiveAgentRun = false;\n                        const processedResponse = (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.processModelResponse)(state._lastTurnResponse, state._currentAgent, tools, handoffs);\n                        state._lastProcessedResponse = processedResponse;\n                        const turnResult = await (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.executeToolsAndSideEffects)(state._currentAgent, state._originalInput, state._generatedItems, state._lastTurnResponse, state._lastProcessedResponse, this, state);\n                        state._toolUseTracker.addToolUse(state._currentAgent, state._lastProcessedResponse.toolsUsed);\n                        state._originalInput = turnResult.originalInput;\n                        state._generatedItems = turnResult.generatedItems;\n                        state._currentStep = turnResult.nextStep;\n                    }\n                    if (state._currentStep &&\n                        state._currentStep.type === 'next_step_final_output') {\n                        await this.#runOutputGuardrails(state, state._currentStep.output);\n                        this.emit('agent_end', state._context, state._currentAgent, state._currentStep.output);\n                        state._currentAgent.emit('agent_end', state._context, state._currentStep.output);\n                        return new _result_mjs__WEBPACK_IMPORTED_MODULE_4__.RunResult(state);\n                    }\n                    else if (state._currentStep &&\n                        state._currentStep.type === 'next_step_handoff') {\n                        state._currentAgent = state._currentStep.newAgent;\n                        if (state._currentAgentSpan) {\n                            state._currentAgentSpan.end();\n                            (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.resetCurrentSpan)();\n                            state._currentAgentSpan = undefined;\n                        }\n                        state._noActiveAgentRun = true;\n                        // we've processed the handoff, so we need to run the loop again\n                        state._currentStep = { type: 'next_step_run_again' };\n                    }\n                    else if (state._currentStep &&\n                        state._currentStep.type === 'next_step_interruption') {\n                        // interrupted. Don't run any guardrails\n                        return new _result_mjs__WEBPACK_IMPORTED_MODULE_4__.RunResult(state);\n                    }\n                    else {\n                        _logger_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"].debug('Running next loop');\n                    }\n                }\n            }\n            catch (err) {\n                if (state._currentAgentSpan) {\n                    state._currentAgentSpan.setError({\n                        message: 'Error in agent run',\n                        data: { error: String(err) },\n                    });\n                }\n                throw err;\n            }\n            finally {\n                if (state._currentAgentSpan) {\n                    if (state._currentStep?.type !== 'next_step_interruption') {\n                        // don't end the span if the run was interrupted\n                        state._currentAgentSpan.end();\n                    }\n                    (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.resetCurrentSpan)();\n                }\n            }\n        });\n    }\n    async #runInputGuardrails(state) {\n        const guardrails = this.inputGuardrailDefs.concat(state._currentAgent.inputGuardrails.map(_guardrail_mjs__WEBPACK_IMPORTED_MODULE_0__.defineInputGuardrail));\n        if (guardrails.length > 0) {\n            const guardrailArgs = {\n                agent: state._currentAgent,\n                input: state._originalInput,\n                context: state._context,\n            };\n            try {\n                const results = await Promise.all(guardrails.map(async (guardrail) => {\n                    return (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_11__.withGuardrailSpan)(async (span) => {\n                        const result = await guardrail.run(guardrailArgs);\n                        span.spanData.triggered = result.output.tripwireTriggered;\n                        return result;\n                    }, { data: { name: guardrail.name } }, state._currentAgentSpan);\n                }));\n                for (const result of results) {\n                    if (result.output.tripwireTriggered) {\n                        if (state._currentAgentSpan) {\n                            state._currentAgentSpan.setError({\n                                message: 'Guardrail tripwire triggered',\n                                data: { guardrail: result.guardrail.name },\n                            });\n                        }\n                        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.InputGuardrailTripwireTriggered(`Input guardrail triggered: ${JSON.stringify(result.output.outputInfo)}`, result, state);\n                    }\n                }\n            }\n            catch (e) {\n                if (e instanceof _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.InputGuardrailTripwireTriggered) {\n                    throw e;\n                }\n                // roll back the current turn to enable reruns\n                state._currentTurn--;\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.GuardrailExecutionError(`Input guardrail failed to complete: ${e}`, e, state);\n            }\n        }\n    }\n    async #runOutputGuardrails(state, output) {\n        const guardrails = this.outputGuardrailDefs.concat(state._currentAgent.outputGuardrails.map(_guardrail_mjs__WEBPACK_IMPORTED_MODULE_0__.defineOutputGuardrail));\n        if (guardrails.length > 0) {\n            const agentOutput = state._currentAgent.processFinalOutput(output);\n            const guardrailArgs = {\n                agent: state._currentAgent,\n                agentOutput,\n                context: state._context,\n            };\n            try {\n                const results = await Promise.all(guardrails.map(async (guardrail) => {\n                    return (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_11__.withGuardrailSpan)(async (span) => {\n                        const result = await guardrail.run(guardrailArgs);\n                        span.spanData.triggered = result.output.tripwireTriggered;\n                        return result;\n                    }, { data: { name: guardrail.name } }, state._currentAgentSpan);\n                }));\n                for (const result of results) {\n                    if (result.output.tripwireTriggered) {\n                        if (state._currentAgentSpan) {\n                            state._currentAgentSpan.setError({\n                                message: 'Guardrail tripwire triggered',\n                                data: { guardrail: result.guardrail.name },\n                            });\n                        }\n                        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.OutputGuardrailTripwireTriggered(`Output guardrail triggered: ${JSON.stringify(result.output.outputInfo)}`, result, state);\n                    }\n                }\n            }\n            catch (e) {\n                if (e instanceof _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.OutputGuardrailTripwireTriggered) {\n                    throw e;\n                }\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.GuardrailExecutionError(`Output guardrail failed to complete: ${e}`, e, state);\n            }\n        }\n    }\n    /**\n     * @internal\n     */\n    async #runStreamLoop(result, options) {\n        try {\n            while (true) {\n                const currentAgent = result.state._currentAgent;\n                const handoffs = currentAgent.handoffs.map(_handoff_mjs__WEBPACK_IMPORTED_MODULE_1__.getHandoff);\n                const tools = await currentAgent.getAllTools();\n                const serializedTools = tools.map((t) => (0,_utils_serialize_mjs__WEBPACK_IMPORTED_MODULE_7__.serializeTool)(t));\n                const serializedHandoffs = handoffs.map((h) => (0,_utils_serialize_mjs__WEBPACK_IMPORTED_MODULE_7__.serializeHandoff)(h));\n                result.state._currentStep = result.state._currentStep ?? {\n                    type: 'next_step_run_again',\n                };\n                if (result.state._currentStep.type === 'next_step_interruption') {\n                    _logger_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"].debug('Continuing from interruption');\n                    if (!result.state._lastTurnResponse ||\n                        !result.state._lastProcessedResponse) {\n                        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.UserError('No model response found in previous state', result.state);\n                    }\n                    const turnResult = await (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.executeInterruptedToolsAndSideEffects)(result.state._currentAgent, result.state._originalInput, result.state._generatedItems, result.state._lastTurnResponse, result.state._lastProcessedResponse, this, result.state);\n                    (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.addStepToRunResult)(result, turnResult);\n                    result.state._toolUseTracker.addToolUse(result.state._currentAgent, result.state._lastProcessedResponse.toolsUsed);\n                    result.state._originalInput = turnResult.originalInput;\n                    result.state._generatedItems = turnResult.generatedItems;\n                    result.state._currentStep = turnResult.nextStep;\n                    continue;\n                }\n                if (result.state._currentStep.type === 'next_step_run_again') {\n                    if (!result.state._currentAgentSpan) {\n                        const handoffNames = handoffs.map((h) => h.agentName);\n                        result.state._currentAgentSpan = (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_11__.createAgentSpan)({\n                            data: {\n                                name: currentAgent.name,\n                                handoffs: handoffNames,\n                                tools: tools.map((t) => t.name),\n                                output_type: currentAgent.outputSchemaName,\n                            },\n                        });\n                        result.state._currentAgentSpan.start();\n                        (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.setCurrentSpan)(result.state._currentAgentSpan);\n                    }\n                    result.state._currentTurn++;\n                    if (result.state._currentTurn > result.state._maxTurns) {\n                        result.state._currentAgentSpan?.setError({\n                            message: 'Max turns exceeded',\n                            data: { max_turns: result.state._maxTurns },\n                        });\n                        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.MaxTurnsExceededError(`Max turns (${result.state._maxTurns}) exceeded`, result.state);\n                    }\n                    _logger_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"].debug(`Running agent ${currentAgent.name} (turn ${result.state._currentTurn})`);\n                    let model = currentAgent.model ?? this.config.model;\n                    if (typeof model === 'string') {\n                        model = await this.config.modelProvider.getModel(model);\n                    }\n                    if (result.state._currentTurn === 1) {\n                        await this.#runInputGuardrails(result.state);\n                    }\n                    let modelSettings = {\n                        ...this.config.modelSettings,\n                        ...currentAgent.modelSettings,\n                    };\n                    modelSettings = (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.maybeResetToolChoice)(currentAgent, result.state._toolUseTracker, modelSettings);\n                    const turnInput = getTurnInput(result.input, result.newItems);\n                    if (result.state._noActiveAgentRun) {\n                        currentAgent.emit('agent_start', result.state._context, currentAgent);\n                        this.emit('agent_start', result.state._context, currentAgent);\n                    }\n                    let finalResponse = undefined;\n                    for await (const event of model.getStreamedResponse({\n                        systemInstructions: await currentAgent.getSystemPrompt(result.state._context),\n                        input: turnInput,\n                        previousResponseId: options.previousResponseId,\n                        modelSettings,\n                        tools: serializedTools,\n                        handoffs: serializedHandoffs,\n                        outputType: (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_16__.convertAgentOutputTypeToSerializable)(currentAgent.outputType),\n                        tracing: getTracing(this.config.tracingDisabled, this.config.traceIncludeSensitiveData),\n                    })) {\n                        if (event.type === 'response_done') {\n                            const parsed = _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_15__.StreamEventResponseCompleted.parse(event);\n                            finalResponse = {\n                                usage: new _usage_mjs__WEBPACK_IMPORTED_MODULE_12__.Usage(parsed.response.usage),\n                                output: parsed.response.output,\n                                responseId: parsed.response.id,\n                            };\n                        }\n                        if (result.cancelled) {\n                            // When the user's code exits a loop to consume the stream, we need to break\n                            // this loop to prevent internal false errors and unnecessary processing\n                            return;\n                        }\n                        result._addItem(new _events_mjs__WEBPACK_IMPORTED_MODULE_13__.RunRawModelStreamEvent(event));\n                    }\n                    result.state._noActiveAgentRun = false;\n                    if (!finalResponse) {\n                        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_8__.ModelBehaviorError('Model did not procude a final response!', result.state);\n                    }\n                    result.state._lastTurnResponse = finalResponse;\n                    result.state._modelResponses.push(result.state._lastTurnResponse);\n                    const processedResponse = (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.processModelResponse)(result.state._lastTurnResponse, currentAgent, tools, handoffs);\n                    result.state._lastProcessedResponse = processedResponse;\n                    const turnResult = await (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.executeToolsAndSideEffects)(currentAgent, result.state._originalInput, result.state._generatedItems, result.state._lastTurnResponse, result.state._lastProcessedResponse, this, result.state);\n                    (0,_runImplementation_mjs__WEBPACK_IMPORTED_MODULE_9__.addStepToRunResult)(result, turnResult);\n                    result.state._toolUseTracker.addToolUse(currentAgent, processedResponse.toolsUsed);\n                    result.state._originalInput = turnResult.originalInput;\n                    result.state._generatedItems = turnResult.generatedItems;\n                    result.state._currentStep = turnResult.nextStep;\n                }\n                if (result.state._currentStep.type === 'next_step_final_output') {\n                    await this.#runOutputGuardrails(result.state, result.state._currentStep.output);\n                    return;\n                }\n                else if (result.state._currentStep.type === 'next_step_interruption') {\n                    // we are done for now. Don't run any output guardrails\n                    return;\n                }\n                else if (result.state._currentStep.type === 'next_step_handoff') {\n                    result.state._currentAgent = result.state._currentStep\n                        ?.newAgent;\n                    if (result.state._currentAgentSpan) {\n                        result.state._currentAgentSpan.end();\n                        (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.resetCurrentSpan)();\n                    }\n                    result.state._currentAgentSpan = undefined;\n                    result._addItem(new _events_mjs__WEBPACK_IMPORTED_MODULE_13__.RunAgentUpdatedStreamEvent(currentAgent));\n                    result.state._noActiveAgentRun = true;\n                    // we've processed the handoff, so we need to run the loop again\n                    result.state._currentStep = {\n                        type: 'next_step_run_again',\n                    };\n                }\n                else {\n                    _logger_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"].debug('Running next loop');\n                }\n            }\n        }\n        catch (error) {\n            if (result.state._currentAgentSpan) {\n                result.state._currentAgentSpan.setError({\n                    message: 'Error in agent run',\n                    data: { error: String(error) },\n                });\n            }\n            throw error;\n        }\n        finally {\n            if (result.state._currentAgentSpan) {\n                if (result.state._currentStep?.type !== 'next_step_interruption') {\n                    result.state._currentAgentSpan.end();\n                }\n                (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.resetCurrentSpan)();\n            }\n        }\n    }\n    /**\n     * @internal\n     */\n    async #runIndividualStream(agent, input, options) {\n        options = options ?? {};\n        return (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.withNewSpanContext)(async () => {\n            // Initialize or reuse existing state\n            const state = input instanceof _runState_mjs__WEBPACK_IMPORTED_MODULE_14__.RunState\n                ? input\n                : new _runState_mjs__WEBPACK_IMPORTED_MODULE_14__.RunState(options.context instanceof _runContext_mjs__WEBPACK_IMPORTED_MODULE_3__.RunContext\n                    ? options.context\n                    : new _runContext_mjs__WEBPACK_IMPORTED_MODULE_3__.RunContext(options.context), input, agent, options.maxTurns ?? DEFAULT_MAX_TURNS);\n            // Initialize the streamed result with existing state\n            const result = new _result_mjs__WEBPACK_IMPORTED_MODULE_4__.StreamedRunResult({\n                signal: options.signal,\n                state,\n            });\n            // Setup defaults\n            result.maxTurns = options.maxTurns ?? state._maxTurns;\n            // Continue the stream loop without blocking\n            this.#runStreamLoop(result, options).then(() => {\n                result._done();\n            }, (err) => {\n                result._raiseError(err);\n            });\n            return result;\n        });\n    }\n    run(agent, input, options = {\n        stream: false,\n        context: undefined,\n    }) {\n        if (input instanceof _runState_mjs__WEBPACK_IMPORTED_MODULE_14__.RunState && input._trace) {\n            return (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.withTrace)(input._trace, async () => {\n                if (input._currentAgentSpan) {\n                    (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.setCurrentSpan)(input._currentAgentSpan);\n                }\n                if (options?.stream) {\n                    return this.#runIndividualStream(agent, input, options);\n                }\n                else {\n                    return this.#runIndividualNonStream(agent, input, options);\n                }\n            });\n        }\n        return (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_10__.getOrCreateTrace)(async () => {\n            if (options?.stream) {\n                return this.#runIndividualStream(agent, input, options);\n            }\n            else {\n                return this.#runIndividualNonStream(agent, input, options);\n            }\n        });\n    }\n}\nlet _defaultRunner = undefined;\nfunction getDefaultRunner() {\n    if (_defaultRunner) {\n        return _defaultRunner;\n    }\n    _defaultRunner = new Runner();\n    return _defaultRunner;\n}\nasync function run(agent, input, options) {\n    const runner = getDefaultRunner();\n    if (options?.stream) {\n        return await runner.run(agent, input, options);\n    }\n    else {\n        return await runner.run(agent, input, options);\n    }\n}\n//# sourceMappingURL=run.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/run.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runContext.mjs":
/*!*************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runContext.mjs ***!
  \*************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RunContext: () => (/* binding */ RunContext)\n/* harmony export */ });\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _usage_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./usage.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/usage.mjs\");\n\n\n/**\n * A context object that is passed to the `Runner.run()` method.\n */\nclass RunContext {\n    /**\n     * The context object passed by you to the `Runner.run()`\n     */\n    context;\n    /**\n     * The usage of the agent run so far. For streamed responses, the usage will be stale until the\n     * last chunk of the stream is processed.\n     */\n    usage;\n    /**\n     * A map of tool names to whether they have been approved.\n     */\n    #approvals;\n    constructor(context = {}) {\n        this.context = context;\n        this.usage = new _usage_mjs__WEBPACK_IMPORTED_MODULE_1__.Usage();\n        this.#approvals = new Map();\n    }\n    /**\n     * Rebuild the approvals map from a serialized state.\n     * @internal\n     *\n     * @param approvals - The approvals map to rebuild.\n     */\n    _rebuildApprovals(approvals) {\n        this.#approvals = new Map(Object.entries(approvals));\n    }\n    /**\n     * Check if a tool call has been approved.\n     *\n     * @param toolName - The name of the tool.\n     * @param callId - The call ID of the tool call.\n     * @returns `true` if the tool call has been approved, `false` if blocked and `undefined` if not yet approved or rejected.\n     */\n    isToolApproved({ toolName, callId }) {\n        const approvalEntry = this.#approvals.get(toolName);\n        if (approvalEntry?.approved === true && approvalEntry.rejected === true) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn('Tool is permanently approved and rejected at the same time. Approval takes precedence');\n            return true;\n        }\n        if (approvalEntry?.approved === true) {\n            return true;\n        }\n        if (approvalEntry?.rejected === true) {\n            return false;\n        }\n        const individualCallApproval = Array.isArray(approvalEntry?.approved)\n            ? approvalEntry.approved.includes(callId)\n            : false;\n        const individualCallRejection = Array.isArray(approvalEntry?.rejected)\n            ? approvalEntry.rejected.includes(callId)\n            : false;\n        if (individualCallApproval && individualCallRejection) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn(`Tool call ${callId} is both approved and rejected at the same time. Approval takes precedence`);\n            return true;\n        }\n        if (individualCallApproval) {\n            return true;\n        }\n        if (individualCallRejection) {\n            return false;\n        }\n        return undefined;\n    }\n    /**\n     * Approve a tool call.\n     *\n     * @param toolName - The name of the tool.\n     * @param callId - The call ID of the tool call.\n     */\n    approveTool(approvalItem, { alwaysApprove = false } = {}) {\n        const toolName = approvalItem.rawItem.name;\n        if (alwaysApprove) {\n            this.#approvals.set(toolName, {\n                approved: true,\n                rejected: [],\n            });\n            return;\n        }\n        const approvalEntry = this.#approvals.get(toolName) ?? {\n            approved: [],\n            rejected: [],\n        };\n        if (Array.isArray(approvalEntry.approved)) {\n            approvalEntry.approved.push(approvalItem.rawItem.callId);\n        }\n        this.#approvals.set(toolName, approvalEntry);\n    }\n    /**\n     * Reject a tool call.\n     *\n     * @param approvalItem - The tool approval item to reject.\n     */\n    rejectTool(approvalItem, { alwaysReject = false } = {}) {\n        const toolName = approvalItem.rawItem.name;\n        if (alwaysReject) {\n            this.#approvals.set(toolName, {\n                approved: false,\n                rejected: true,\n            });\n            return;\n        }\n        const approvalEntry = this.#approvals.get(toolName) ?? {\n            approved: [],\n            rejected: [],\n        };\n        if (Array.isArray(approvalEntry.rejected)) {\n            approvalEntry.rejected.push(approvalItem.rawItem.callId);\n        }\n        this.#approvals.set(toolName, approvalEntry);\n    }\n    toJSON() {\n        return {\n            context: this.context,\n            usage: this.usage,\n            approvals: Object.fromEntries(this.#approvals.entries()),\n        };\n    }\n}\n//# sourceMappingURL=runContext.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvcnVuQ29udGV4dC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtDO0FBQ0U7QUFDcEM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QjtBQUM1QjtBQUNBLHlCQUF5Qiw2Q0FBSztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsa0JBQWtCO0FBQ3ZDO0FBQ0E7QUFDQSxZQUFZLG1EQUFNO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbURBQU0sbUJBQW1CLFFBQVE7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0Msd0JBQXdCLElBQUk7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQix1QkFBdUIsSUFBSTtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXdhbmcvcHJvamVjdHMvb3BlbmFpLXJlYWx0aW1lLWFnZW50cy9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuNV93c0A4LjE4LjNfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC9ydW5Db250ZXh0Lm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbG9nZ2VyIGZyb20gXCIuL2xvZ2dlci5tanNcIjtcbmltcG9ydCB7IFVzYWdlIH0gZnJvbSBcIi4vdXNhZ2UubWpzXCI7XG4vKipcbiAqIEEgY29udGV4dCBvYmplY3QgdGhhdCBpcyBwYXNzZWQgdG8gdGhlIGBSdW5uZXIucnVuKClgIG1ldGhvZC5cbiAqL1xuZXhwb3J0IGNsYXNzIFJ1bkNvbnRleHQge1xuICAgIC8qKlxuICAgICAqIFRoZSBjb250ZXh0IG9iamVjdCBwYXNzZWQgYnkgeW91IHRvIHRoZSBgUnVubmVyLnJ1bigpYFxuICAgICAqL1xuICAgIGNvbnRleHQ7XG4gICAgLyoqXG4gICAgICogVGhlIHVzYWdlIG9mIHRoZSBhZ2VudCBydW4gc28gZmFyLiBGb3Igc3RyZWFtZWQgcmVzcG9uc2VzLCB0aGUgdXNhZ2Ugd2lsbCBiZSBzdGFsZSB1bnRpbCB0aGVcbiAgICAgKiBsYXN0IGNodW5rIG9mIHRoZSBzdHJlYW0gaXMgcHJvY2Vzc2VkLlxuICAgICAqL1xuICAgIHVzYWdlO1xuICAgIC8qKlxuICAgICAqIEEgbWFwIG9mIHRvb2wgbmFtZXMgdG8gd2hldGhlciB0aGV5IGhhdmUgYmVlbiBhcHByb3ZlZC5cbiAgICAgKi9cbiAgICAjYXBwcm92YWxzO1xuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQgPSB7fSkge1xuICAgICAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0O1xuICAgICAgICB0aGlzLnVzYWdlID0gbmV3IFVzYWdlKCk7XG4gICAgICAgIHRoaXMuI2FwcHJvdmFscyA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVidWlsZCB0aGUgYXBwcm92YWxzIG1hcCBmcm9tIGEgc2VyaWFsaXplZCBzdGF0ZS5cbiAgICAgKiBAaW50ZXJuYWxcbiAgICAgKlxuICAgICAqIEBwYXJhbSBhcHByb3ZhbHMgLSBUaGUgYXBwcm92YWxzIG1hcCB0byByZWJ1aWxkLlxuICAgICAqL1xuICAgIF9yZWJ1aWxkQXBwcm92YWxzKGFwcHJvdmFscykge1xuICAgICAgICB0aGlzLiNhcHByb3ZhbHMgPSBuZXcgTWFwKE9iamVjdC5lbnRyaWVzKGFwcHJvdmFscykpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiBhIHRvb2wgY2FsbCBoYXMgYmVlbiBhcHByb3ZlZC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0b29sTmFtZSAtIFRoZSBuYW1lIG9mIHRoZSB0b29sLlxuICAgICAqIEBwYXJhbSBjYWxsSWQgLSBUaGUgY2FsbCBJRCBvZiB0aGUgdG9vbCBjYWxsLlxuICAgICAqIEByZXR1cm5zIGB0cnVlYCBpZiB0aGUgdG9vbCBjYWxsIGhhcyBiZWVuIGFwcHJvdmVkLCBgZmFsc2VgIGlmIGJsb2NrZWQgYW5kIGB1bmRlZmluZWRgIGlmIG5vdCB5ZXQgYXBwcm92ZWQgb3IgcmVqZWN0ZWQuXG4gICAgICovXG4gICAgaXNUb29sQXBwcm92ZWQoeyB0b29sTmFtZSwgY2FsbElkIH0pIHtcbiAgICAgICAgY29uc3QgYXBwcm92YWxFbnRyeSA9IHRoaXMuI2FwcHJvdmFscy5nZXQodG9vbE5hbWUpO1xuICAgICAgICBpZiAoYXBwcm92YWxFbnRyeT8uYXBwcm92ZWQgPT09IHRydWUgJiYgYXBwcm92YWxFbnRyeS5yZWplY3RlZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgbG9nZ2VyLndhcm4oJ1Rvb2wgaXMgcGVybWFuZW50bHkgYXBwcm92ZWQgYW5kIHJlamVjdGVkIGF0IHRoZSBzYW1lIHRpbWUuIEFwcHJvdmFsIHRha2VzIHByZWNlZGVuY2UnKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhcHByb3ZhbEVudHJ5Py5hcHByb3ZlZCA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFwcHJvdmFsRW50cnk/LnJlamVjdGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaW5kaXZpZHVhbENhbGxBcHByb3ZhbCA9IEFycmF5LmlzQXJyYXkoYXBwcm92YWxFbnRyeT8uYXBwcm92ZWQpXG4gICAgICAgICAgICA/IGFwcHJvdmFsRW50cnkuYXBwcm92ZWQuaW5jbHVkZXMoY2FsbElkKVxuICAgICAgICAgICAgOiBmYWxzZTtcbiAgICAgICAgY29uc3QgaW5kaXZpZHVhbENhbGxSZWplY3Rpb24gPSBBcnJheS5pc0FycmF5KGFwcHJvdmFsRW50cnk/LnJlamVjdGVkKVxuICAgICAgICAgICAgPyBhcHByb3ZhbEVudHJ5LnJlamVjdGVkLmluY2x1ZGVzKGNhbGxJZClcbiAgICAgICAgICAgIDogZmFsc2U7XG4gICAgICAgIGlmIChpbmRpdmlkdWFsQ2FsbEFwcHJvdmFsICYmIGluZGl2aWR1YWxDYWxsUmVqZWN0aW9uKSB7XG4gICAgICAgICAgICBsb2dnZXIud2FybihgVG9vbCBjYWxsICR7Y2FsbElkfSBpcyBib3RoIGFwcHJvdmVkIGFuZCByZWplY3RlZCBhdCB0aGUgc2FtZSB0aW1lLiBBcHByb3ZhbCB0YWtlcyBwcmVjZWRlbmNlYCk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaW5kaXZpZHVhbENhbGxBcHByb3ZhbCkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGluZGl2aWR1YWxDYWxsUmVqZWN0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQXBwcm92ZSBhIHRvb2wgY2FsbC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSB0b29sTmFtZSAtIFRoZSBuYW1lIG9mIHRoZSB0b29sLlxuICAgICAqIEBwYXJhbSBjYWxsSWQgLSBUaGUgY2FsbCBJRCBvZiB0aGUgdG9vbCBjYWxsLlxuICAgICAqL1xuICAgIGFwcHJvdmVUb29sKGFwcHJvdmFsSXRlbSwgeyBhbHdheXNBcHByb3ZlID0gZmFsc2UgfSA9IHt9KSB7XG4gICAgICAgIGNvbnN0IHRvb2xOYW1lID0gYXBwcm92YWxJdGVtLnJhd0l0ZW0ubmFtZTtcbiAgICAgICAgaWYgKGFsd2F5c0FwcHJvdmUpIHtcbiAgICAgICAgICAgIHRoaXMuI2FwcHJvdmFscy5zZXQodG9vbE5hbWUsIHtcbiAgICAgICAgICAgICAgICBhcHByb3ZlZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICByZWplY3RlZDogW10sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBhcHByb3ZhbEVudHJ5ID0gdGhpcy4jYXBwcm92YWxzLmdldCh0b29sTmFtZSkgPz8ge1xuICAgICAgICAgICAgYXBwcm92ZWQ6IFtdLFxuICAgICAgICAgICAgcmVqZWN0ZWQ6IFtdLFxuICAgICAgICB9O1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShhcHByb3ZhbEVudHJ5LmFwcHJvdmVkKSkge1xuICAgICAgICAgICAgYXBwcm92YWxFbnRyeS5hcHByb3ZlZC5wdXNoKGFwcHJvdmFsSXRlbS5yYXdJdGVtLmNhbGxJZCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy4jYXBwcm92YWxzLnNldCh0b29sTmFtZSwgYXBwcm92YWxFbnRyeSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlamVjdCBhIHRvb2wgY2FsbC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBhcHByb3ZhbEl0ZW0gLSBUaGUgdG9vbCBhcHByb3ZhbCBpdGVtIHRvIHJlamVjdC5cbiAgICAgKi9cbiAgICByZWplY3RUb29sKGFwcHJvdmFsSXRlbSwgeyBhbHdheXNSZWplY3QgPSBmYWxzZSB9ID0ge30pIHtcbiAgICAgICAgY29uc3QgdG9vbE5hbWUgPSBhcHByb3ZhbEl0ZW0ucmF3SXRlbS5uYW1lO1xuICAgICAgICBpZiAoYWx3YXlzUmVqZWN0KSB7XG4gICAgICAgICAgICB0aGlzLiNhcHByb3ZhbHMuc2V0KHRvb2xOYW1lLCB7XG4gICAgICAgICAgICAgICAgYXBwcm92ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIHJlamVjdGVkOiB0cnVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgYXBwcm92YWxFbnRyeSA9IHRoaXMuI2FwcHJvdmFscy5nZXQodG9vbE5hbWUpID8/IHtcbiAgICAgICAgICAgIGFwcHJvdmVkOiBbXSxcbiAgICAgICAgICAgIHJlamVjdGVkOiBbXSxcbiAgICAgICAgfTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoYXBwcm92YWxFbnRyeS5yZWplY3RlZCkpIHtcbiAgICAgICAgICAgIGFwcHJvdmFsRW50cnkucmVqZWN0ZWQucHVzaChhcHByb3ZhbEl0ZW0ucmF3SXRlbS5jYWxsSWQpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuI2FwcHJvdmFscy5zZXQodG9vbE5hbWUsIGFwcHJvdmFsRW50cnkpO1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb250ZXh0OiB0aGlzLmNvbnRleHQsXG4gICAgICAgICAgICB1c2FnZTogdGhpcy51c2FnZSxcbiAgICAgICAgICAgIGFwcHJvdmFsczogT2JqZWN0LmZyb21FbnRyaWVzKHRoaXMuI2FwcHJvdmFscy5lbnRyaWVzKCkpLFxuICAgICAgICB9O1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXJ1bkNvbnRleHQubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runContext.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runImplementation.mjs":
/*!********************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runImplementation.mjs ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AgentToolUseTracker: () => (/* binding */ AgentToolUseTracker),\n/* harmony export */   addStepToRunResult: () => (/* binding */ addStepToRunResult),\n/* harmony export */   checkForFinalOutputFromTools: () => (/* binding */ checkForFinalOutputFromTools),\n/* harmony export */   executeComputerActions: () => (/* binding */ executeComputerActions),\n/* harmony export */   executeFunctionToolCalls: () => (/* binding */ executeFunctionToolCalls),\n/* harmony export */   executeHandoffCalls: () => (/* binding */ executeHandoffCalls),\n/* harmony export */   executeInterruptedToolsAndSideEffects: () => (/* binding */ executeInterruptedToolsAndSideEffects),\n/* harmony export */   executeToolsAndSideEffects: () => (/* binding */ executeToolsAndSideEffects),\n/* harmony export */   getToolCallOutputItem: () => (/* binding */ getToolCallOutputItem),\n/* harmony export */   maybeResetToolChoice: () => (/* binding */ maybeResetToolChoice),\n/* harmony export */   nextStepSchema: () => (/* binding */ nextStepSchema),\n/* harmony export */   processModelResponse: () => (/* binding */ processModelResponse)\n/* harmony export */ });\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _handoff_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handoff.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/handoff.mjs\");\n/* harmony import */ var _items_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./items.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/items.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _utils_messages_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils/messages.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/messages.mjs\");\n/* harmony import */ var _tracing_createSpans_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tracing/createSpans.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/createSpans.mjs\");\n/* harmony import */ var _utils_tools_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/tools.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/tools.mjs\");\n/* harmony import */ var _utils_safeExecute_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/safeExecute.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/safeExecute.mjs\");\n/* harmony import */ var _tracing_context_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./tracing/context.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/context.mjs\");\n/* harmony import */ var _events_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./events.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/events.mjs\");\n/* harmony import */ var _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @openai/zod/v3 */ \"(ssr)/../../node_modules/.pnpm/zod@3.25.76/node_modules/zod/v3/types.js\");\n/* harmony import */ var _utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/smartString.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/smartString.mjs\");\n/* harmony import */ var _utils_index_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/index.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/index.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * @internal\n */\nfunction processModelResponse(modelResponse, agent, tools, handoffs) {\n    const items = [];\n    const runHandoffs = [];\n    const runFunctions = [];\n    const runComputerActions = [];\n    const toolsUsed = [];\n    const handoffMap = new Map(handoffs.map((h) => [h.toolName, h]));\n    const functionMap = new Map(tools.filter((t) => t.type === 'function').map((t) => [t.name, t]));\n    const computerTool = tools.find((t) => t.type === 'computer');\n    for (const output of modelResponse.output) {\n        if (output.type === 'message') {\n            if (output.role === 'assistant') {\n                items.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunMessageOutputItem(output, agent));\n            }\n        }\n        else if (output.type === 'hosted_tool_call') {\n            items.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallItem(output, agent));\n            toolsUsed.push(output.name);\n        }\n        else if (output.type === 'reasoning') {\n            items.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunReasoningItem(output, agent));\n        }\n        else if (output.type === 'computer_call') {\n            items.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallItem(output, agent));\n            toolsUsed.push('computer_use');\n            if (!computerTool) {\n                (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_8__.addErrorToCurrentSpan)({\n                    message: 'Model produced computer action without a computer tool.',\n                    data: {\n                        agent_name: agent.name,\n                    },\n                });\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.ModelBehaviorError('Model produced computer action without a computer tool.');\n            }\n            runComputerActions.push({\n                toolCall: output,\n                computer: computerTool,\n            });\n        }\n        if (output.type !== 'function_call') {\n            continue;\n        }\n        toolsUsed.push(output.name);\n        const handoff = handoffMap.get(output.name);\n        if (handoff) {\n            items.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunHandoffCallItem(output, agent));\n            runHandoffs.push({\n                toolCall: output,\n                handoff: handoff,\n            });\n        }\n        else {\n            const functionTool = functionMap.get(output.name);\n            if (!functionTool) {\n                (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_8__.addErrorToCurrentSpan)({\n                    message: `Tool ${output.name} not found in agent ${agent.name}.`,\n                    data: {\n                        tool_name: output.name,\n                        agent_name: agent.name,\n                    },\n                });\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.ModelBehaviorError(`Tool ${output.name} not found in agent ${agent.name}.`);\n            }\n            items.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallItem(output, agent));\n            runFunctions.push({\n                toolCall: output,\n                tool: functionTool,\n            });\n        }\n    }\n    return {\n        newItems: items,\n        handoffs: runHandoffs,\n        functions: runFunctions,\n        computerActions: runComputerActions,\n        toolsUsed: toolsUsed,\n        hasToolsOrApprovalsToRun() {\n            return (runHandoffs.length > 0 ||\n                runFunctions.length > 0 ||\n                runComputerActions.length > 0);\n        },\n    };\n}\nconst nextStepSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.discriminatedUnion('type', [\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('next_step_handoff'),\n        newAgent: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('next_step_final_output'),\n        output: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('next_step_run_again'),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('next_step_interruption'),\n        data: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any()),\n    }),\n]);\nclass SingleStepResult {\n    originalInput;\n    modelResponse;\n    preStepItems;\n    newStepItems;\n    nextStep;\n    constructor(\n    /**\n     * The input items i.e. the items before run() was called. May be muted by handoff input filters\n     */\n    originalInput, \n    /**\n     * The model response for the current step\n     */\n    modelResponse, \n    /**\n     * The items before the current step was executed\n     */\n    preStepItems, \n    /**\n     * The items after the current step was executed\n     */\n    newStepItems, \n    /**\n     * The next step to execute\n     */\n    nextStep) {\n        this.originalInput = originalInput;\n        this.modelResponse = modelResponse;\n        this.preStepItems = preStepItems;\n        this.newStepItems = newStepItems;\n        this.nextStep = nextStep;\n    }\n    /**\n     * The items generated during the agent run (i.e. everything generated after originalInput)\n     */\n    get generatedItems() {\n        return this.preStepItems.concat(this.newStepItems);\n    }\n}\n/**\n * @internal\n */\nfunction maybeResetToolChoice(agent, toolUseTracker, modelSettings) {\n    if (agent.resetToolChoice && toolUseTracker.hasUsedTools(agent)) {\n        return { ...modelSettings, toolChoice: undefined };\n    }\n    return modelSettings;\n}\n/**\n * @internal\n */\nasync function executeInterruptedToolsAndSideEffects(agent, originalInput, originalPreStepItems, newResponse, processedResponse, runner, state) {\n    const preStepItems = originalPreStepItems.filter((item) => {\n        return !(item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolApprovalItem);\n    });\n    const approvalRequests = originalPreStepItems\n        .filter((item) => {\n        return item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolApprovalItem;\n    })\n        .map((item) => {\n        return item.rawItem.callId;\n    });\n    const functionToolRuns = processedResponse.functions.filter((run) => {\n        return approvalRequests.includes(run.toolCall.callId);\n    });\n    const functionResults = await executeFunctionToolCalls(agent, functionToolRuns, runner, state);\n    const newItems = functionResults.map((r) => r.runItem);\n    const checkToolOutput = await checkForFinalOutputFromTools(agent, functionResults, state);\n    if (checkToolOutput.isFinalOutput) {\n        runner.emit('agent_end', state._context, agent, checkToolOutput.finalOutput);\n        agent.emit('agent_end', state._context, checkToolOutput.finalOutput);\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_final_output',\n            output: checkToolOutput.finalOutput,\n        });\n    }\n    else if (checkToolOutput.isInterrupted) {\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_interruption',\n            data: {\n                interruptions: checkToolOutput.interruptions,\n            },\n        });\n    }\n    // we only ran new tools and side effects. We need to run the rest of the agent\n    return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, { type: 'next_step_run_again' });\n}\n/**\n * @internal\n */\nasync function executeToolsAndSideEffects(agent, originalInput, originalPreStepItems, newResponse, processedResponse, runner, state) {\n    const preStepItems = originalPreStepItems;\n    let newItems = processedResponse.newItems;\n    const [functionResults, computerResults] = await Promise.all([\n        executeFunctionToolCalls(agent, processedResponse.functions, runner, state),\n        executeComputerActions(agent, processedResponse.computerActions, runner, state._context),\n    ]);\n    newItems = newItems.concat(functionResults.map((r) => r.runItem));\n    newItems = newItems.concat(computerResults);\n    // process handoffs\n    if (processedResponse.handoffs.length > 0) {\n        return await executeHandoffCalls(agent, originalInput, preStepItems, newItems, newResponse, processedResponse.handoffs, runner, state._context);\n    }\n    const checkToolOutput = await checkForFinalOutputFromTools(agent, functionResults, state);\n    if (checkToolOutput.isFinalOutput) {\n        runner.emit('agent_end', state._context, agent, checkToolOutput.finalOutput);\n        agent.emit('agent_end', state._context, checkToolOutput.finalOutput);\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_final_output',\n            output: checkToolOutput.finalOutput,\n        });\n    }\n    else if (checkToolOutput.isInterrupted) {\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_interruption',\n            data: {\n                interruptions: checkToolOutput.interruptions,\n            },\n        });\n    }\n    // check if the agent produced any messages\n    const messageItems = newItems.filter((item) => item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunMessageOutputItem);\n    // we will use the last content output as the final output\n    const potentialFinalOutput = messageItems.length > 0\n        ? (0,_utils_messages_mjs__WEBPACK_IMPORTED_MODULE_4__.getLastTextFromOutputMessage)(messageItems[messageItems.length - 1].rawItem)\n        : undefined;\n    // if there is no output we just run again\n    if (!potentialFinalOutput) {\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, { type: 'next_step_run_again' });\n    }\n    if (agent.outputType === 'text' &&\n        !processedResponse.hasToolsOrApprovalsToRun()) {\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, {\n            type: 'next_step_final_output',\n            output: potentialFinalOutput,\n        });\n    }\n    else if (agent.outputType !== 'text' && potentialFinalOutput) {\n        // Structured output schema => always leads to a final output if we have text\n        const { parser } = (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_6__.getSchemaAndParserFromInputType)(agent.outputType, 'final_output');\n        const [error] = await (0,_utils_safeExecute_mjs__WEBPACK_IMPORTED_MODULE_7__.safeExecute)(() => parser(potentialFinalOutput));\n        if (error) {\n            (0,_tracing_context_mjs__WEBPACK_IMPORTED_MODULE_8__.addErrorToCurrentSpan)({\n                message: 'Invalid output type',\n                data: {\n                    error: String(error),\n                },\n            });\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.ModelBehaviorError('Invalid output type');\n        }\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, { type: 'next_step_final_output', output: potentialFinalOutput });\n    }\n    return new SingleStepResult(originalInput, newResponse, preStepItems, newItems, { type: 'next_step_run_again' });\n}\n/**\n * @internal\n */\nfunction getToolCallOutputItem(toolCall, output) {\n    return {\n        type: 'function_call_result',\n        name: toolCall.name,\n        callId: toolCall.callId,\n        status: 'completed',\n        output: {\n            type: 'text',\n            text: (0,_utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_10__.toSmartString)(output),\n        },\n    };\n}\n/**\n * @internal\n */\nasync function executeFunctionToolCalls(agent, toolRuns, runner, state) {\n    async function runSingleTool(toolRun) {\n        let parsedArgs = toolRun.toolCall.arguments;\n        if (toolRun.tool.parameters) {\n            if ((0,_utils_index_mjs__WEBPACK_IMPORTED_MODULE_11__.isZodObject)(toolRun.tool.parameters)) {\n                parsedArgs = toolRun.tool.parameters.parse(parsedArgs);\n            }\n            else {\n                parsedArgs = JSON.parse(parsedArgs);\n            }\n        }\n        const needsApproval = await toolRun.tool.needsApproval(state._context, parsedArgs, toolRun.toolCall.callId);\n        if (needsApproval) {\n            const approval = state._context.isToolApproved({\n                toolName: toolRun.tool.name,\n                callId: toolRun.toolCall.callId,\n            });\n            if (approval === false) {\n                return (0,_tracing_createSpans_mjs__WEBPACK_IMPORTED_MODULE_5__.withFunctionSpan)(async (span) => {\n                    const response = 'Tool execution was not approved.';\n                    span.setError({\n                        message: response,\n                        data: {\n                            tool_name: toolRun.tool.name,\n                            error: `Tool execution for ${toolRun.toolCall.callId} was manually rejected by user.`,\n                        },\n                    });\n                    span.spanData.output = response;\n                    return {\n                        type: 'function_output',\n                        tool: toolRun.tool,\n                        output: response,\n                        runItem: new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallOutputItem(getToolCallOutputItem(toolRun.toolCall, response), agent, response),\n                    };\n                }, {\n                    data: {\n                        name: toolRun.tool.name,\n                    },\n                });\n            }\n            if (approval !== true) {\n                return {\n                    type: 'function_approval',\n                    tool: toolRun.tool,\n                    runItem: new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolApprovalItem(toolRun.toolCall, agent),\n                };\n            }\n        }\n        return (0,_tracing_createSpans_mjs__WEBPACK_IMPORTED_MODULE_5__.withFunctionSpan)(async (span) => {\n            if (runner.config.traceIncludeSensitiveData) {\n                span.spanData.input = toolRun.toolCall.arguments;\n            }\n            try {\n                runner.emit('agent_tool_start', state._context, agent, toolRun.tool);\n                agent.emit('agent_tool_start', state._context, toolRun.tool);\n                const result = await toolRun.tool.invoke(state._context, toolRun.toolCall.arguments);\n                // Use string data for tracing and event emitter\n                const stringResult = (0,_utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_10__.toSmartString)(result);\n                runner.emit('agent_tool_end', state._context, agent, toolRun.tool, stringResult);\n                agent.emit('agent_tool_end', state._context, toolRun.tool, stringResult);\n                if (runner.config.traceIncludeSensitiveData) {\n                    span.spanData.output = stringResult;\n                }\n                return {\n                    type: 'function_output',\n                    tool: toolRun.tool,\n                    output: result,\n                    runItem: new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallOutputItem(getToolCallOutputItem(toolRun.toolCall, result), agent, result),\n                };\n            }\n            catch (error) {\n                span.setError({\n                    message: 'Error running tool',\n                    data: {\n                        tool_name: toolRun.tool.name,\n                        error: String(error),\n                    },\n                });\n                throw error;\n            }\n        }, {\n            data: {\n                name: toolRun.tool.name,\n            },\n        });\n    }\n    try {\n        const results = await Promise.all(toolRuns.map(runSingleTool));\n        return results;\n    }\n    catch (e) {\n        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.ToolCallError(`Failed to run function tools: ${e}`, e, state);\n    }\n}\n/**\n * @internal\n */\n// Internal helper: dispatch a computer action and return a screenshot (sync/async)\nasync function _runComputerActionAndScreenshot(computer, toolCall) {\n    const action = toolCall.action;\n    let screenshot;\n    // Dispatch based on action type string (assume action.type exists)\n    switch (action.type) {\n        case 'click':\n            await computer.click(action.x, action.y, action.button);\n            break;\n        case 'double_click':\n            await computer.doubleClick(action.x, action.y);\n            break;\n        case 'drag':\n            await computer.drag(action.path.map((p) => [p.x, p.y]));\n            break;\n        case 'keypress':\n            await computer.keypress(action.keys);\n            break;\n        case 'move':\n            await computer.move(action.x, action.y);\n            break;\n        case 'screenshot':\n            screenshot = await computer.screenshot();\n            break;\n        case 'scroll':\n            await computer.scroll(action.x, action.y, action.scroll_x, action.scroll_y);\n            break;\n        case 'type':\n            await computer.type(action.text);\n            break;\n        case 'wait':\n            await computer.wait();\n            break;\n        default:\n            action; // ensures that we handle every action we know of\n            // Unknown action, just take screenshot\n            break;\n    }\n    if (typeof screenshot !== 'undefined') {\n        return screenshot;\n    }\n    // Always return screenshot as base64 string\n    if (typeof computer.screenshot === 'function') {\n        screenshot = await computer.screenshot();\n        if (typeof screenshot !== 'undefined') {\n            return screenshot;\n        }\n    }\n    throw new Error('Computer does not implement screenshot()');\n}\n/**\n * @internal\n */\nasync function executeComputerActions(agent, actions, runner, runContext, customLogger = undefined) {\n    const _logger = customLogger ?? _logger_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"];\n    const results = [];\n    for (const action of actions) {\n        const computer = action.computer.computer;\n        const toolCall = action.toolCall;\n        // Hooks: on_tool_start (global + agent)\n        runner.emit('agent_tool_start', runContext, agent, action.computer);\n        if (typeof agent.emit === 'function') {\n            agent.emit('agent_tool_start', runContext, action.computer);\n        }\n        // Run the action and get screenshot\n        let output;\n        try {\n            output = await _runComputerActionAndScreenshot(computer, toolCall);\n        }\n        catch (err) {\n            _logger.error('Failed to execute computer action:', err);\n            output = '';\n        }\n        // Hooks: on_tool_end (global + agent)\n        runner.emit('agent_tool_end', runContext, agent, action.computer, output);\n        if (typeof agent.emit === 'function') {\n            agent.emit('agent_tool_end', runContext, action.computer, output);\n        }\n        // Always return a screenshot as a base64 data URL\n        const imageUrl = output ? `data:image/png;base64,${output}` : '';\n        const rawItem = {\n            type: 'computer_call_result',\n            callId: toolCall.callId,\n            output: { type: 'computer_screenshot', data: imageUrl },\n        };\n        results.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallOutputItem(rawItem, agent, imageUrl));\n    }\n    return results;\n}\n/**\n * @internal\n */\nasync function executeHandoffCalls(agent, originalInput, preStepItems, newStepItems, newResponse, runHandoffs, runner, runContext) {\n    newStepItems = [...newStepItems];\n    if (runHandoffs.length === 0) {\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].warn('Incorrectly called executeHandoffCalls with no handoffs. This should not happen. Moving on.');\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newStepItems, { type: 'next_step_run_again' });\n    }\n    if (runHandoffs.length > 1) {\n        // multiple handoffs. Ignoring all but the first one by adding reject responses for those\n        const outputMessage = 'Multiple handoffs detected, ignorning this one.';\n        for (let i = 1; i < runHandoffs.length; i++) {\n            newStepItems.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallOutputItem(getToolCallOutputItem(runHandoffs[i].toolCall, outputMessage), agent, outputMessage));\n        }\n    }\n    const actualHandoff = runHandoffs[0];\n    return (0,_tracing_createSpans_mjs__WEBPACK_IMPORTED_MODULE_5__.withHandoffSpan)(async (handoffSpan) => {\n        const handoff = actualHandoff.handoff;\n        const newAgent = await handoff.onInvokeHandoff(runContext, actualHandoff.toolCall.arguments);\n        handoffSpan.spanData.to_agent = newAgent.name;\n        if (runHandoffs.length > 1) {\n            const requestedAgents = runHandoffs.map((h) => h.handoff.agentName);\n            handoffSpan.setError({\n                message: 'Multiple handoffs requested',\n                data: {\n                    requested_agents: requestedAgents,\n                },\n            });\n        }\n        newStepItems.push(new _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunHandoffOutputItem(getToolCallOutputItem(actualHandoff.toolCall, (0,_handoff_mjs__WEBPACK_IMPORTED_MODULE_1__.getTransferMessage)(newAgent)), agent, newAgent));\n        runner.emit('agent_handoff', runContext, agent, newAgent);\n        agent.emit('agent_handoff', runContext, newAgent);\n        const inputFilter = handoff.inputFilter ?? runner.config.handoffInputFilter;\n        if (inputFilter) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].debug('Filtering inputs for handoff');\n            if (typeof inputFilter !== 'function') {\n                handoffSpan.setError({\n                    message: 'Invalid input filter',\n                    data: {\n                        details: 'not callable',\n                    },\n                });\n            }\n            const handoffInputData = {\n                inputHistory: Array.isArray(originalInput)\n                    ? [...originalInput]\n                    : originalInput,\n                preHandoffItems: [...preStepItems],\n                newItems: [...newStepItems],\n            };\n            const filtered = inputFilter(handoffInputData);\n            originalInput = filtered.inputHistory;\n            preStepItems = filtered.preHandoffItems;\n            newStepItems = filtered.newItems;\n        }\n        return new SingleStepResult(originalInput, newResponse, preStepItems, newStepItems, { type: 'next_step_handoff', newAgent });\n    }, {\n        data: {\n            from_agent: agent.name,\n        },\n    });\n}\nconst NOT_FINAL_OUTPUT = {\n    isFinalOutput: false,\n    isInterrupted: undefined,\n};\n/**\n * @internal\n */\nasync function checkForFinalOutputFromTools(agent, toolResults, state) {\n    if (toolResults.length === 0) {\n        return NOT_FINAL_OUTPUT;\n    }\n    const interruptions = toolResults\n        .filter((r) => r.runItem instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolApprovalItem)\n        .map((r) => r.runItem);\n    if (interruptions.length > 0) {\n        return {\n            isFinalOutput: false,\n            isInterrupted: true,\n            interruptions,\n        };\n    }\n    if (agent.toolUseBehavior === 'run_llm_again') {\n        return NOT_FINAL_OUTPUT;\n    }\n    const firstToolResult = toolResults[0];\n    if (agent.toolUseBehavior === 'stop_on_first_tool') {\n        if (firstToolResult?.type === 'function_output') {\n            const stringOutput = (0,_utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_10__.toSmartString)(firstToolResult.output);\n            return {\n                isFinalOutput: true,\n                isInterrupted: undefined,\n                finalOutput: stringOutput,\n            };\n        }\n        return NOT_FINAL_OUTPUT;\n    }\n    const toolUseBehavior = agent.toolUseBehavior;\n    if (typeof toolUseBehavior === 'object') {\n        const stoppingTool = toolResults.find((r) => toolUseBehavior.stopAtToolNames.includes(r.tool.name));\n        if (stoppingTool?.type === 'function_output') {\n            const stringOutput = (0,_utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_10__.toSmartString)(stoppingTool.output);\n            return {\n                isFinalOutput: true,\n                isInterrupted: undefined,\n                finalOutput: stringOutput,\n            };\n        }\n        return NOT_FINAL_OUTPUT;\n    }\n    if (typeof toolUseBehavior === 'function') {\n        return toolUseBehavior(state._context, toolResults);\n    }\n    throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_0__.UserError(`Invalid toolUseBehavior: ${toolUseBehavior}`, state);\n}\nfunction addStepToRunResult(result, step) {\n    for (const item of step.newStepItems) {\n        let itemName;\n        if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunMessageOutputItem) {\n            itemName = 'message_output_created';\n        }\n        else if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunHandoffCallItem) {\n            itemName = 'handoff_requested';\n        }\n        else if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunHandoffOutputItem) {\n            itemName = 'handoff_occurred';\n        }\n        else if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallItem) {\n            itemName = 'tool_called';\n        }\n        else if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolCallOutputItem) {\n            itemName = 'tool_output';\n        }\n        else if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunReasoningItem) {\n            itemName = 'reasoning_item_created';\n        }\n        else if (item instanceof _items_mjs__WEBPACK_IMPORTED_MODULE_2__.RunToolApprovalItem) {\n            itemName = 'tool_approval_requested';\n        }\n        else {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"].warn('Unknown item type: ', item);\n            continue;\n        }\n        result._addItem(new _events_mjs__WEBPACK_IMPORTED_MODULE_9__.RunItemStreamEvent(itemName, item));\n    }\n}\nclass AgentToolUseTracker {\n    #agentToTools = new Map();\n    addToolUse(agent, toolNames) {\n        this.#agentToTools.set(agent, toolNames);\n    }\n    hasUsedTools(agent) {\n        return this.#agentToTools.has(agent);\n    }\n    toJSON() {\n        return Object.fromEntries(Array.from(this.#agentToTools.entries()).map(([agent, toolNames]) => {\n            return [agent.name, toolNames];\n        }));\n    }\n}\n//# sourceMappingURL=runImplementation.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runImplementation.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runState.mjs":
/*!***********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runState.mjs ***!
  \***********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CURRENT_SCHEMA_VERSION: () => (/* binding */ CURRENT_SCHEMA_VERSION),\n/* harmony export */   RunState: () => (/* binding */ RunState),\n/* harmony export */   SerializedRunState: () => (/* binding */ SerializedRunState),\n/* harmony export */   buildAgentMap: () => (/* binding */ buildAgentMap),\n/* harmony export */   deserializeItem: () => (/* binding */ deserializeItem),\n/* harmony export */   deserializeModelResponse: () => (/* binding */ deserializeModelResponse),\n/* harmony export */   deserializeSpan: () => (/* binding */ deserializeSpan)\n/* harmony export */ });\n/* harmony import */ var _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @openai/zod/v3 */ \"(ssr)/../../node_modules/.pnpm/zod@3.25.76/node_modules/zod/v3/types.js\");\n/* harmony import */ var _agent_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./agent.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/agent.mjs\");\n/* harmony import */ var _items_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./items.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/items.mjs\");\n/* harmony import */ var _runContext_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./runContext.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runContext.mjs\");\n/* harmony import */ var _runImplementation_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./runImplementation.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runImplementation.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _tracing_provider_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tracing/provider.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/provider.mjs\");\n/* harmony import */ var _usage_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./usage.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/usage.mjs\");\n/* harmony import */ var _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tracing/index.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/index.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _handoff_mjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./handoff.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/handoff.mjs\");\n/* harmony import */ var _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./types/protocol.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/types/protocol.mjs\");\n/* harmony import */ var _utils_safeExecute_mjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/safeExecute.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/safeExecute.mjs\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * The schema version of the serialized run state. This is used to ensure that the serialized\n * run state is compatible with the current version of the SDK.\n * If anything in this schema changes, the version will have to be incremented.\n */\nconst CURRENT_SCHEMA_VERSION = '1.0';\nconst $schemaVersion = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal(CURRENT_SCHEMA_VERSION);\nconst serializedAgentSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n    name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(),\n});\nconst serializedSpanBase = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n    object: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('trace.span'),\n    id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(),\n    trace_id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(),\n    parent_id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string().nullable(),\n    started_at: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string().nullable(),\n    ended_at: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string().nullable(),\n    error: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        message: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(),\n        data: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any()).optional(),\n    })\n        .nullable(),\n    span_data: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any()),\n});\nconst SerializedSpan = serializedSpanBase.extend({\n    previous_span: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.lazy(() => SerializedSpan).optional(),\n});\nconst usageSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n    requests: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.number(),\n    inputTokens: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.number(),\n    outputTokens: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.number(),\n    totalTokens: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.number(),\n});\nconst modelResponseSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n    usage: usageSchema,\n    output: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(_types_protocol_mjs__WEBPACK_IMPORTED_MODULE_10__.OutputModelItem),\n    responseId: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string().optional(),\n});\nconst itemSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.discriminatedUnion('type', [\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('message_output_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_10__.AssistantMessageItem,\n        agent: serializedAgentSchema,\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('tool_call_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_10__.ToolCallItem.or(_types_protocol_mjs__WEBPACK_IMPORTED_MODULE_10__.HostedToolCallItem),\n        agent: serializedAgentSchema,\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('tool_call_output_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_10__.FunctionCallResultItem,\n        agent: serializedAgentSchema,\n        output: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('reasoning_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_10__.ReasoningItem,\n        agent: serializedAgentSchema,\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('handoff_call_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_10__.FunctionCallItem,\n        agent: serializedAgentSchema,\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('handoff_output_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_10__.FunctionCallResultItem,\n        sourceAgent: serializedAgentSchema,\n        targetAgent: serializedAgentSchema,\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('tool_approval_item'),\n        rawItem: _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_10__.FunctionCallItem,\n        agent: serializedAgentSchema,\n    }),\n]);\nconst serializedTraceSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n    object: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('trace'),\n    id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(),\n    workflow_name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(),\n    group_id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string().nullable(),\n    metadata: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any()),\n});\nconst serializedProcessedResponseSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n    newItems: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(itemSchema),\n    toolsUsed: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string()),\n    handoffs: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        toolCall: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any(),\n        handoff: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any(),\n    })),\n    functions: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        toolCall: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any(),\n        tool: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any(),\n    })),\n    computerActions: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        toolCall: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any(),\n        computer: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any(),\n    })),\n});\nconst guardrailFunctionOutputSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n    tripwireTriggered: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.boolean(),\n    outputInfo: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any(),\n});\nconst inputGuardrailResultSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n    guardrail: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('input'),\n        name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(),\n    }),\n    output: guardrailFunctionOutputSchema,\n});\nconst outputGuardrailResultSchema = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n    guardrail: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.literal('output'),\n        name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(),\n    }),\n    agentOutput: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any(),\n    agent: serializedAgentSchema,\n    output: guardrailFunctionOutputSchema,\n});\nconst SerializedRunState = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n    $schemaVersion,\n    currentTurn: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.number(),\n    currentAgent: serializedAgentSchema,\n    originalInput: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string().or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(_types_protocol_mjs__WEBPACK_IMPORTED_MODULE_10__.ModelItem)),\n    modelResponses: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(modelResponseSchema),\n    context: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n        usage: usageSchema,\n        approvals: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.object({\n            approved: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string()).or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.boolean()),\n            rejected: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string()).or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.boolean()),\n        })),\n        context: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.any()),\n    }),\n    toolUseTracker: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.string())),\n    maxTurns: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.number(),\n    currentAgentSpan: SerializedSpan.nullable().optional(),\n    noActiveAgentRun: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.boolean(),\n    inputGuardrailResults: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(inputGuardrailResultSchema),\n    outputGuardrailResults: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(outputGuardrailResultSchema),\n    currentStep: _runImplementation_mjs__WEBPACK_IMPORTED_MODULE_3__.nextStepSchema.optional(),\n    lastModelResponse: modelResponseSchema.optional(),\n    generatedItems: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_12__.array(itemSchema),\n    lastProcessedResponse: serializedProcessedResponseSchema.optional(),\n    trace: serializedTraceSchema.nullable(),\n});\n/**\n * Serializable snapshot of an agent's run, including context, usage and trace.\n * While this class has publicly writable properties (prefixed with `_`), they are not meant to be\n * used directly. To read these properties, use the `RunResult` instead.\n *\n * Manipulation of the state directly can lead to unexpected behavior and should be avoided.\n * Instead, use the `approve` and `reject` methods to interact with the state.\n */\nclass RunState {\n    /**\n     * Current turn number in the conversation.\n     */\n    _currentTurn = 0;\n    /**\n     * The agent currently handling the conversation.\n     */\n    _currentAgent;\n    /**\n     * Original user input prior to any processing.\n     */\n    _originalInput;\n    /**\n     * Responses from the model so far.\n     */\n    _modelResponses;\n    /**\n     * Active tracing span for the current agent if tracing is enabled.\n     */\n    _currentAgentSpan;\n    /**\n     * Run context tracking approvals, usage, and other metadata.\n     */\n    _context;\n    /**\n     * Tracks what tools each agent has used.\n     */\n    _toolUseTracker;\n    /**\n     * Items generated by the agent during the run.\n     */\n    _generatedItems;\n    /**\n     * Maximum allowed turns before forcing termination.\n     */\n    _maxTurns;\n    /**\n     * Whether the run has an active agent step in progress.\n     */\n    _noActiveAgentRun = true;\n    /**\n     * Last model response for the previous turn.\n     */\n    _lastTurnResponse;\n    /**\n     * Results from input guardrails applied to the run.\n     */\n    _inputGuardrailResults;\n    /**\n     * Results from output guardrails applied to the run.\n     */\n    _outputGuardrailResults;\n    /**\n     * Next step computed for the agent to take.\n     */\n    _currentStep = undefined;\n    /**\n     * Parsed model response after applying guardrails and tools.\n     */\n    _lastProcessedResponse = undefined;\n    /**\n     * Trace associated with this run if tracing is enabled.\n     */\n    _trace = null;\n    constructor(context, originalInput, startingAgent, maxTurns) {\n        this._context = context;\n        this._originalInput = structuredClone(originalInput);\n        this._modelResponses = [];\n        this._currentAgentSpan = undefined;\n        this._currentAgent = startingAgent;\n        this._toolUseTracker = new _runImplementation_mjs__WEBPACK_IMPORTED_MODULE_3__.AgentToolUseTracker();\n        this._generatedItems = [];\n        this._maxTurns = maxTurns;\n        this._inputGuardrailResults = [];\n        this._outputGuardrailResults = [];\n        this._trace = (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_7__.getCurrentTrace)();\n    }\n    /**\n     * Approves a tool call requested by the agent through an interruption and approval item request.\n     *\n     * To approve the request use this method and then run the agent again with the same state object\n     * to continue the execution.\n     *\n     * By default it will only approve the current tool call. To allow the tool to be used multiple\n     * times throughout the run, set the `alwaysApprove` option to `true`.\n     *\n     * @param approvalItem - The tool call approval item to approve.\n     * @param options - Options for the approval.\n     */\n    approve(approvalItem, options = { alwaysApprove: false }) {\n        this._context.approveTool(approvalItem, options);\n    }\n    /**\n     * Rejects a tool call requested by the agent through an interruption and approval item request.\n     *\n     * To reject the request use this method and then run the agent again with the same state object\n     * to continue the execution.\n     *\n     * By default it will only reject the current tool call. To allow the tool to be used multiple\n     * times throughout the run, set the `alwaysReject` option to `true`.\n     *\n     * @param approvalItem - The tool call approval item to reject.\n     * @param options - Options for the rejection.\n     */\n    reject(approvalItem, options = { alwaysReject: false }) {\n        this._context.rejectTool(approvalItem, options);\n    }\n    /**\n     * Serializes the run state to a JSON object.\n     *\n     * This method is used to serialize the run state to a JSON object that can be used to\n     * resume the run later.\n     *\n     * @returns The serialized run state.\n     */\n    toJSON() {\n        const output = {\n            $schemaVersion: CURRENT_SCHEMA_VERSION,\n            currentTurn: this._currentTurn,\n            currentAgent: {\n                name: this._currentAgent.name,\n            },\n            originalInput: this._originalInput,\n            modelResponses: this._modelResponses.map((response) => {\n                return {\n                    usage: {\n                        requests: response.usage.requests,\n                        inputTokens: response.usage.inputTokens,\n                        outputTokens: response.usage.outputTokens,\n                        totalTokens: response.usage.totalTokens,\n                    },\n                    output: response.output,\n                    responseId: response.responseId,\n                };\n            }),\n            context: this._context.toJSON(),\n            toolUseTracker: this._toolUseTracker.toJSON(),\n            maxTurns: this._maxTurns,\n            currentAgentSpan: this._currentAgentSpan?.toJSON(),\n            noActiveAgentRun: this._noActiveAgentRun,\n            inputGuardrailResults: this._inputGuardrailResults,\n            outputGuardrailResults: this._outputGuardrailResults.map((r) => ({\n                ...r,\n                agent: r.agent.toJSON(),\n            })),\n            currentStep: this._currentStep,\n            lastModelResponse: this._lastTurnResponse,\n            generatedItems: this._generatedItems.map((item) => item.toJSON()),\n            lastProcessedResponse: this._lastProcessedResponse,\n            trace: this._trace ? this._trace.toJSON() : null,\n        };\n        // parsing the schema to ensure the output is valid for reparsing\n        const parsed = SerializedRunState.safeParse(output);\n        if (!parsed.success) {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.SystemError(`Failed to serialize run state. ${parsed.error.message}`);\n        }\n        return parsed.data;\n    }\n    /**\n     * Serializes the run state to a string.\n     *\n     * This method is used to serialize the run state to a string that can be used to\n     * resume the run later.\n     *\n     * @returns The serialized run state.\n     */\n    toString() {\n        return JSON.stringify(this.toJSON());\n    }\n    /**\n     * Deserializes a run state from a string.\n     *\n     * This method is used to deserialize a run state from a string that was serialized using the\n     * `toString` method.\n     */\n    static async fromString(initialAgent, str) {\n        const [parsingError, jsonResult] = await (0,_utils_safeExecute_mjs__WEBPACK_IMPORTED_MODULE_11__.safeExecute)(() => JSON.parse(str));\n        if (parsingError) {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.UserError(`Failed to parse run state. ${parsingError instanceof Error ? parsingError.message : String(parsingError)}`);\n        }\n        const currentSchemaVersion = jsonResult.$schemaVersion;\n        if (!currentSchemaVersion) {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.UserError('Run state is missing schema version');\n        }\n        if (currentSchemaVersion !== CURRENT_SCHEMA_VERSION) {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.UserError(`Run state schema version ${currentSchemaVersion} is not supported. Please use version ${CURRENT_SCHEMA_VERSION}`);\n        }\n        const stateJson = SerializedRunState.parse(JSON.parse(str));\n        const agentMap = buildAgentMap(initialAgent);\n        //\n        // Rebuild the context\n        //\n        const context = new _runContext_mjs__WEBPACK_IMPORTED_MODULE_2__.RunContext(stateJson.context.context);\n        context._rebuildApprovals(stateJson.context.approvals);\n        //\n        // Find the current agent from the initial agent\n        //\n        const currentAgent = agentMap.get(stateJson.currentAgent.name);\n        if (!currentAgent) {\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.UserError(`Agent ${stateJson.currentAgent.name} not found`);\n        }\n        const state = new RunState(context, '', currentAgent, stateJson.maxTurns);\n        state._currentTurn = stateJson.currentTurn;\n        // rebuild tool use tracker\n        state._toolUseTracker = new _runImplementation_mjs__WEBPACK_IMPORTED_MODULE_3__.AgentToolUseTracker();\n        for (const [agentName, toolNames] of Object.entries(stateJson.toolUseTracker)) {\n            state._toolUseTracker.addToolUse(agentMap.get(agentName), toolNames);\n        }\n        // rebuild current agent span\n        if (stateJson.currentAgentSpan) {\n            if (!stateJson.trace) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_8__[\"default\"].warn('Trace is not set, skipping tracing setup');\n            }\n            const trace = (0,_tracing_provider_mjs__WEBPACK_IMPORTED_MODULE_5__.getGlobalTraceProvider)().createTrace({\n                traceId: stateJson.trace?.id,\n                name: stateJson.trace?.workflow_name,\n                groupId: stateJson.trace?.group_id ?? undefined,\n                metadata: stateJson.trace?.metadata,\n            });\n            state._currentAgentSpan = deserializeSpan(trace, stateJson.currentAgentSpan);\n            state._trace = trace;\n        }\n        state._noActiveAgentRun = stateJson.noActiveAgentRun;\n        state._inputGuardrailResults =\n            stateJson.inputGuardrailResults;\n        state._outputGuardrailResults = stateJson.outputGuardrailResults.map((r) => ({\n            ...r,\n            agent: agentMap.get(r.agent.name),\n        }));\n        state._currentStep = stateJson.currentStep;\n        state._originalInput = stateJson.originalInput;\n        state._modelResponses = stateJson.modelResponses.map(deserializeModelResponse);\n        state._lastTurnResponse = stateJson.lastModelResponse\n            ? deserializeModelResponse(stateJson.lastModelResponse)\n            : undefined;\n        state._generatedItems = stateJson.generatedItems.map((item) => deserializeItem(item, agentMap));\n        state._lastProcessedResponse = stateJson.lastProcessedResponse\n            ? await deserializeProcessedResponse(agentMap, state._currentAgent, stateJson.lastProcessedResponse)\n            : undefined;\n        if (stateJson.currentStep?.type === 'next_step_handoff') {\n            state._currentStep = {\n                type: 'next_step_handoff',\n                newAgent: agentMap.get(stateJson.currentStep.newAgent.name),\n            };\n        }\n        return state;\n    }\n}\n/**\n * @internal\n */\nfunction buildAgentMap(initialAgent) {\n    const map = new Map();\n    const queue = [initialAgent];\n    while (queue.length > 0) {\n        const currentAgent = queue.shift();\n        if (map.has(currentAgent.name)) {\n            continue;\n        }\n        map.set(currentAgent.name, currentAgent);\n        for (const handoff of currentAgent.handoffs) {\n            if (handoff instanceof _agent_mjs__WEBPACK_IMPORTED_MODULE_0__.Agent) {\n                if (!map.has(handoff.name)) {\n                    queue.push(handoff);\n                }\n            }\n            else if (handoff.agent) {\n                if (!map.has(handoff.agent.name)) {\n                    queue.push(handoff.agent);\n                }\n            }\n        }\n    }\n    return map;\n}\n/**\n * @internal\n */\nfunction deserializeSpan(trace, serializedSpan) {\n    const spanData = serializedSpan.span_data;\n    const previousSpan = serializedSpan.previous_span\n        ? deserializeSpan(trace, serializedSpan.previous_span)\n        : undefined;\n    const span = (0,_tracing_provider_mjs__WEBPACK_IMPORTED_MODULE_5__.getGlobalTraceProvider)().createSpan({\n        spanId: serializedSpan.id,\n        traceId: serializedSpan.trace_id,\n        parentId: serializedSpan.parent_id ?? undefined,\n        startedAt: serializedSpan.started_at ?? undefined,\n        endedAt: serializedSpan.ended_at ?? undefined,\n        data: spanData,\n    }, trace);\n    span.previousSpan = previousSpan;\n    return span;\n}\n/**\n * @internal\n */\nfunction deserializeModelResponse(serializedModelResponse) {\n    const usage = new _usage_mjs__WEBPACK_IMPORTED_MODULE_6__.Usage();\n    usage.requests = serializedModelResponse.usage.requests;\n    usage.inputTokens = serializedModelResponse.usage.inputTokens;\n    usage.outputTokens = serializedModelResponse.usage.outputTokens;\n    usage.totalTokens = serializedModelResponse.usage.totalTokens;\n    return {\n        usage,\n        output: serializedModelResponse.output.map((item) => _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_10__.OutputModelItem.parse(item)),\n        responseId: serializedModelResponse.responseId,\n    };\n}\n/**\n * @internal\n */\nfunction deserializeItem(serializedItem, agentMap) {\n    switch (serializedItem.type) {\n        case 'message_output_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_1__.RunMessageOutputItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n        case 'tool_call_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_1__.RunToolCallItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n        case 'tool_call_output_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_1__.RunToolCallOutputItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name), serializedItem.output);\n        case 'reasoning_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_1__.RunReasoningItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n        case 'handoff_call_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_1__.RunHandoffCallItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n        case 'handoff_output_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_1__.RunHandoffOutputItem(serializedItem.rawItem, agentMap.get(serializedItem.sourceAgent.name), agentMap.get(serializedItem.targetAgent.name));\n        case 'tool_approval_item':\n            return new _items_mjs__WEBPACK_IMPORTED_MODULE_1__.RunToolApprovalItem(serializedItem.rawItem, agentMap.get(serializedItem.agent.name));\n    }\n}\n/**\n * @internal\n */\nasync function deserializeProcessedResponse(agentMap, currentAgent, serializedProcessedResponse) {\n    const allTools = await currentAgent.getAllTools();\n    const tools = new Map(allTools\n        .filter((tool) => tool.type === 'function')\n        .map((tool) => [tool.name, tool]));\n    const computerTools = new Map(allTools\n        .filter((tool) => tool.type === 'computer')\n        .map((tool) => [tool.name, tool]));\n    const handoffs = new Map(currentAgent.handoffs.map((entry) => {\n        if (entry instanceof _agent_mjs__WEBPACK_IMPORTED_MODULE_0__.Agent) {\n            return [entry.name, (0,_handoff_mjs__WEBPACK_IMPORTED_MODULE_9__.handoff)(entry)];\n        }\n        return [entry.toolName, entry];\n    }));\n    const result = {\n        newItems: serializedProcessedResponse.newItems.map((item) => deserializeItem(item, agentMap)),\n        toolsUsed: serializedProcessedResponse.toolsUsed,\n        handoffs: serializedProcessedResponse.handoffs.map((handoff) => {\n            if (!handoffs.has(handoff.handoff.toolName)) {\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.UserError(`Handoff ${handoff.handoff.toolName} not found`);\n            }\n            return {\n                toolCall: handoff.toolCall,\n                handoff: handoffs.get(handoff.handoff.toolName),\n            };\n        }),\n        functions: await Promise.all(serializedProcessedResponse.functions.map(async (functionCall) => {\n            if (!tools.has(functionCall.tool.name)) {\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.UserError(`Tool ${functionCall.tool.name} not found`);\n            }\n            return {\n                toolCall: functionCall.toolCall,\n                tool: tools.get(functionCall.tool.name),\n            };\n        })),\n        computerActions: serializedProcessedResponse.computerActions.map((computerAction) => {\n            const toolName = computerAction.computer.name;\n            if (!computerTools.has(toolName)) {\n                throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_4__.UserError(`Computer tool ${toolName} not found`);\n            }\n            return {\n                toolCall: computerAction.toolCall,\n                computer: computerTools.get(toolName),\n            };\n        }),\n    };\n    return {\n        ...result,\n        hasToolsOrApprovalsToRun() {\n            return (result.handoffs.length > 0 ||\n                result.functions.length > 0 ||\n                result.computerActions.length > 0);\n        },\n    };\n}\n//# sourceMappingURL=runState.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/runState.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/mcp-stdio/node.mjs":
/*!***********************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/mcp-stdio/node.mjs ***!
  \***********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NodeMCPServerStdio: () => (/* binding */ NodeMCPServerStdio)\n/* harmony export */ });\n/* harmony import */ var _mcp_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../mcp.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/mcp.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n\n\nfunction failedToImport(error) {\n    _logger_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].error(`\nFailed to load the MCP SDK. Please install the @modelcontextprotocol/sdk package.\n\nnpm install @modelcontextprotocol/sdk\n    `.trim());\n    throw error;\n}\nclass NodeMCPServerStdio extends _mcp_mjs__WEBPACK_IMPORTED_MODULE_0__.BaseMCPServerStdio {\n    session = null;\n    _cacheDirty = true;\n    _toolsList = [];\n    serverInitializeResult = null;\n    clientSessionTimeoutSeconds;\n    params;\n    _name;\n    transport = null;\n    constructor(params) {\n        super(params);\n        this.clientSessionTimeoutSeconds = params.clientSessionTimeoutSeconds ?? 5;\n        if ('fullCommand' in params) {\n            const elements = params.fullCommand.split(' ');\n            const command = elements.shift();\n            if (!command) {\n                throw new Error('Invalid fullCommand: ' + params.fullCommand);\n            }\n            this.params = {\n                ...params,\n                command: command,\n                args: elements,\n                encoding: params.encoding || 'utf-8',\n                encodingErrorHandler: params.encodingErrorHandler || 'strict',\n            };\n        }\n        else {\n            this.params = params;\n        }\n        this._name = params.name || `stdio: ${this.params.command}`;\n    }\n    async connect() {\n        try {\n            const { StdioClientTransport } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@modelcontextprotocol+sdk@1.20.2\"), __webpack_require__.e(\"vendor-chunks/cross-spawn@7.0.6\"), __webpack_require__.e(\"vendor-chunks/isexe@2.0.0\"), __webpack_require__.e(\"vendor-chunks/which@2.0.2\"), __webpack_require__.e(\"vendor-chunks/shebang-regex@3.0.0\"), __webpack_require__.e(\"vendor-chunks/shebang-command@2.0.0\"), __webpack_require__.e(\"vendor-chunks/path-key@3.1.1\")]).then(__webpack_require__.bind(__webpack_require__, /*! @modelcontextprotocol/sdk/client/stdio.js */ \"(ssr)/../../node_modules/.pnpm/@modelcontextprotocol+sdk@1.20.2/node_modules/@modelcontextprotocol/sdk/dist/esm/client/stdio.js\")).catch(failedToImport);\n            const { Client } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendor-chunks/@modelcontextprotocol+sdk@1.20.2\"), __webpack_require__.e(\"vendor-chunks/ajv@6.12.6\"), __webpack_require__.e(\"vendor-chunks/uri-js@4.4.1\"), __webpack_require__.e(\"vendor-chunks/json-schema-traverse@0.4.1\"), __webpack_require__.e(\"vendor-chunks/fast-json-stable-stringify@2.1.0\"), __webpack_require__.e(\"vendor-chunks/fast-deep-equal@3.1.3\")]).then(__webpack_require__.bind(__webpack_require__, /*! @modelcontextprotocol/sdk/client/index.js */ \"(ssr)/../../node_modules/.pnpm/@modelcontextprotocol+sdk@1.20.2/node_modules/@modelcontextprotocol/sdk/dist/esm/client/index.js\")).catch(failedToImport);\n            this.transport = new StdioClientTransport({\n                command: this.params.command,\n                args: this.params.args,\n                env: this.params.env,\n                cwd: this.params.cwd,\n            });\n            this.session = new Client({\n                name: this._name,\n                version: '1.0.0', // You may want to make this configurable\n            });\n            await this.session.connect(this.transport);\n            this.serverInitializeResult = {\n                serverInfo: { name: this._name, version: '1.0.0' },\n            };\n        }\n        catch (e) {\n            this.logger.error('Error initializing MCP server:', e);\n            await this.close();\n            throw e;\n        }\n        this.debugLog(() => `Connected to MCP server: ${this._name}`);\n    }\n    invalidateToolsCache() {\n        (0,_mcp_mjs__WEBPACK_IMPORTED_MODULE_0__.invalidateServerToolsCache)(this.name);\n        this._cacheDirty = true;\n    }\n    // The response element type is intentionally left as `any` to avoid explosing MCP SDK type dependencies.\n    async listTools() {\n        const { ListToolsResultSchema } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/@modelcontextprotocol+sdk@1.20.2\").then(__webpack_require__.bind(__webpack_require__, /*! @modelcontextprotocol/sdk/types.js */ \"(ssr)/../../node_modules/.pnpm/@modelcontextprotocol+sdk@1.20.2/node_modules/@modelcontextprotocol/sdk/dist/esm/types.js\")).catch(failedToImport);\n        if (!this.session) {\n            throw new Error('Server not initialized. Make sure you call connect() first.');\n        }\n        if (this.cacheToolsList && !this._cacheDirty && this._toolsList) {\n            return this._toolsList;\n        }\n        this._cacheDirty = false;\n        const response = await this.session.listTools();\n        this.debugLog(() => `Listed tools: ${JSON.stringify(response)}`);\n        this._toolsList = ListToolsResultSchema.parse(response).tools;\n        return this._toolsList;\n    }\n    async callTool(toolName, args) {\n        const { CallToolResultSchema } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/@modelcontextprotocol+sdk@1.20.2\").then(__webpack_require__.bind(__webpack_require__, /*! @modelcontextprotocol/sdk/types.js */ \"(ssr)/../../node_modules/.pnpm/@modelcontextprotocol+sdk@1.20.2/node_modules/@modelcontextprotocol/sdk/dist/esm/types.js\")).catch(failedToImport);\n        if (!this.session) {\n            throw new Error('Server not initialized. Make sure you call connect() first.');\n        }\n        const response = await this.session.callTool({\n            name: toolName,\n            arguments: args ?? {},\n        });\n        const parsed = CallToolResultSchema.parse(response);\n        const result = parsed.content;\n        this.debugLog(() => `Called tool ${toolName} (args: ${JSON.stringify(args)}, result: ${JSON.stringify(result)})`);\n        return result;\n    }\n    get name() {\n        return this._name;\n    }\n    async close() {\n        if (this.transport) {\n            await this.transport.close();\n            this.transport = null;\n        }\n        if (this.session) {\n            await this.session.close();\n            this.session = null;\n        }\n    }\n}\n//# sourceMappingURL=node.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3Qvc2hpbXMvbWNwLXN0ZGlvL25vZGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnRjtBQUMxQztBQUN0QztBQUNBLElBQUksbURBQU07QUFDVjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGlDQUFpQyx3REFBa0I7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsb0JBQW9CO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix1QkFBdUIsUUFBUSxncUJBQW1EO0FBQ3RHLG9CQUFvQixTQUFTLFFBQVEsK25CQUFtRDtBQUN4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsOEJBQThCLG9DQUFvQztBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxXQUFXO0FBQ25FO0FBQ0E7QUFDQSxRQUFRLG9FQUEwQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix3QkFBd0IsUUFBUSxpVEFBNEM7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qyx5QkFBeUI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsdUJBQXVCLFFBQVEsaVRBQTRDO0FBQzNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakMsU0FBUztBQUNUO0FBQ0E7QUFDQSwyQ0FBMkMsVUFBVSxTQUFTLHFCQUFxQixZQUFZLHVCQUF1QjtBQUN0SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMveXV3YW5nL3Byb2plY3RzL29wZW5haS1yZWFsdGltZS1hZ2VudHMvbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3Qvc2hpbXMvbWNwLXN0ZGlvL25vZGUubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VNQ1BTZXJ2ZXJTdGRpbywgaW52YWxpZGF0ZVNlcnZlclRvb2xzQ2FjaGUsIH0gZnJvbSBcIi4uLy4uL21jcC5tanNcIjtcbmltcG9ydCBsb2dnZXIgZnJvbSBcIi4uLy4uL2xvZ2dlci5tanNcIjtcbmZ1bmN0aW9uIGZhaWxlZFRvSW1wb3J0KGVycm9yKSB7XG4gICAgbG9nZ2VyLmVycm9yKGBcbkZhaWxlZCB0byBsb2FkIHRoZSBNQ1AgU0RLLiBQbGVhc2UgaW5zdGFsbCB0aGUgQG1vZGVsY29udGV4dHByb3RvY29sL3NkayBwYWNrYWdlLlxuXG5ucG0gaW5zdGFsbCBAbW9kZWxjb250ZXh0cHJvdG9jb2wvc2RrXG4gICAgYC50cmltKCkpO1xuICAgIHRocm93IGVycm9yO1xufVxuZXhwb3J0IGNsYXNzIE5vZGVNQ1BTZXJ2ZXJTdGRpbyBleHRlbmRzIEJhc2VNQ1BTZXJ2ZXJTdGRpbyB7XG4gICAgc2Vzc2lvbiA9IG51bGw7XG4gICAgX2NhY2hlRGlydHkgPSB0cnVlO1xuICAgIF90b29sc0xpc3QgPSBbXTtcbiAgICBzZXJ2ZXJJbml0aWFsaXplUmVzdWx0ID0gbnVsbDtcbiAgICBjbGllbnRTZXNzaW9uVGltZW91dFNlY29uZHM7XG4gICAgcGFyYW1zO1xuICAgIF9uYW1lO1xuICAgIHRyYW5zcG9ydCA9IG51bGw7XG4gICAgY29uc3RydWN0b3IocGFyYW1zKSB7XG4gICAgICAgIHN1cGVyKHBhcmFtcyk7XG4gICAgICAgIHRoaXMuY2xpZW50U2Vzc2lvblRpbWVvdXRTZWNvbmRzID0gcGFyYW1zLmNsaWVudFNlc3Npb25UaW1lb3V0U2Vjb25kcyA/PyA1O1xuICAgICAgICBpZiAoJ2Z1bGxDb21tYW5kJyBpbiBwYXJhbXMpIHtcbiAgICAgICAgICAgIGNvbnN0IGVsZW1lbnRzID0gcGFyYW1zLmZ1bGxDb21tYW5kLnNwbGl0KCcgJyk7XG4gICAgICAgICAgICBjb25zdCBjb21tYW5kID0gZWxlbWVudHMuc2hpZnQoKTtcbiAgICAgICAgICAgIGlmICghY29tbWFuZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBmdWxsQ29tbWFuZDogJyArIHBhcmFtcy5mdWxsQ29tbWFuZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnBhcmFtcyA9IHtcbiAgICAgICAgICAgICAgICAuLi5wYXJhbXMsXG4gICAgICAgICAgICAgICAgY29tbWFuZDogY29tbWFuZCxcbiAgICAgICAgICAgICAgICBhcmdzOiBlbGVtZW50cyxcbiAgICAgICAgICAgICAgICBlbmNvZGluZzogcGFyYW1zLmVuY29kaW5nIHx8ICd1dGYtOCcsXG4gICAgICAgICAgICAgICAgZW5jb2RpbmdFcnJvckhhbmRsZXI6IHBhcmFtcy5lbmNvZGluZ0Vycm9ySGFuZGxlciB8fCAnc3RyaWN0JyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnBhcmFtcyA9IHBhcmFtcztcbiAgICAgICAgfVxuICAgICAgICB0aGlzLl9uYW1lID0gcGFyYW1zLm5hbWUgfHwgYHN0ZGlvOiAke3RoaXMucGFyYW1zLmNvbW1hbmR9YDtcbiAgICB9XG4gICAgYXN5bmMgY29ubmVjdCgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGNvbnN0IHsgU3RkaW9DbGllbnRUcmFuc3BvcnQgfSA9IGF3YWl0IGltcG9ydCgnQG1vZGVsY29udGV4dHByb3RvY29sL3Nkay9jbGllbnQvc3RkaW8uanMnKS5jYXRjaChmYWlsZWRUb0ltcG9ydCk7XG4gICAgICAgICAgICBjb25zdCB7IENsaWVudCB9ID0gYXdhaXQgaW1wb3J0KCdAbW9kZWxjb250ZXh0cHJvdG9jb2wvc2RrL2NsaWVudC9pbmRleC5qcycpLmNhdGNoKGZhaWxlZFRvSW1wb3J0KTtcbiAgICAgICAgICAgIHRoaXMudHJhbnNwb3J0ID0gbmV3IFN0ZGlvQ2xpZW50VHJhbnNwb3J0KHtcbiAgICAgICAgICAgICAgICBjb21tYW5kOiB0aGlzLnBhcmFtcy5jb21tYW5kLFxuICAgICAgICAgICAgICAgIGFyZ3M6IHRoaXMucGFyYW1zLmFyZ3MsXG4gICAgICAgICAgICAgICAgZW52OiB0aGlzLnBhcmFtcy5lbnYsXG4gICAgICAgICAgICAgICAgY3dkOiB0aGlzLnBhcmFtcy5jd2QsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuc2Vzc2lvbiA9IG5ldyBDbGllbnQoe1xuICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMuX25hbWUsXG4gICAgICAgICAgICAgICAgdmVyc2lvbjogJzEuMC4wJywgLy8gWW91IG1heSB3YW50IHRvIG1ha2UgdGhpcyBjb25maWd1cmFibGVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5zZXNzaW9uLmNvbm5lY3QodGhpcy50cmFuc3BvcnQpO1xuICAgICAgICAgICAgdGhpcy5zZXJ2ZXJJbml0aWFsaXplUmVzdWx0ID0ge1xuICAgICAgICAgICAgICAgIHNlcnZlckluZm86IHsgbmFtZTogdGhpcy5fbmFtZSwgdmVyc2lvbjogJzEuMC4wJyB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdGhpcy5sb2dnZXIuZXJyb3IoJ0Vycm9yIGluaXRpYWxpemluZyBNQ1Agc2VydmVyOicsIGUpO1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5jbG9zZSgpO1xuICAgICAgICAgICAgdGhyb3cgZTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmRlYnVnTG9nKCgpID0+IGBDb25uZWN0ZWQgdG8gTUNQIHNlcnZlcjogJHt0aGlzLl9uYW1lfWApO1xuICAgIH1cbiAgICBpbnZhbGlkYXRlVG9vbHNDYWNoZSgpIHtcbiAgICAgICAgaW52YWxpZGF0ZVNlcnZlclRvb2xzQ2FjaGUodGhpcy5uYW1lKTtcbiAgICAgICAgdGhpcy5fY2FjaGVEaXJ0eSA9IHRydWU7XG4gICAgfVxuICAgIC8vIFRoZSByZXNwb25zZSBlbGVtZW50IHR5cGUgaXMgaW50ZW50aW9uYWxseSBsZWZ0IGFzIGBhbnlgIHRvIGF2b2lkIGV4cGxvc2luZyBNQ1AgU0RLIHR5cGUgZGVwZW5kZW5jaWVzLlxuICAgIGFzeW5jIGxpc3RUb29scygpIHtcbiAgICAgICAgY29uc3QgeyBMaXN0VG9vbHNSZXN1bHRTY2hlbWEgfSA9IGF3YWl0IGltcG9ydCgnQG1vZGVsY29udGV4dHByb3RvY29sL3Nkay90eXBlcy5qcycpLmNhdGNoKGZhaWxlZFRvSW1wb3J0KTtcbiAgICAgICAgaWYgKCF0aGlzLnNlc3Npb24pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU2VydmVyIG5vdCBpbml0aWFsaXplZC4gTWFrZSBzdXJlIHlvdSBjYWxsIGNvbm5lY3QoKSBmaXJzdC4nKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5jYWNoZVRvb2xzTGlzdCAmJiAhdGhpcy5fY2FjaGVEaXJ0eSAmJiB0aGlzLl90b29sc0xpc3QpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl90b29sc0xpc3Q7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5fY2FjaGVEaXJ0eSA9IGZhbHNlO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IHRoaXMuc2Vzc2lvbi5saXN0VG9vbHMoKTtcbiAgICAgICAgdGhpcy5kZWJ1Z0xvZygoKSA9PiBgTGlzdGVkIHRvb2xzOiAke0pTT04uc3RyaW5naWZ5KHJlc3BvbnNlKX1gKTtcbiAgICAgICAgdGhpcy5fdG9vbHNMaXN0ID0gTGlzdFRvb2xzUmVzdWx0U2NoZW1hLnBhcnNlKHJlc3BvbnNlKS50b29scztcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Rvb2xzTGlzdDtcbiAgICB9XG4gICAgYXN5bmMgY2FsbFRvb2wodG9vbE5hbWUsIGFyZ3MpIHtcbiAgICAgICAgY29uc3QgeyBDYWxsVG9vbFJlc3VsdFNjaGVtYSB9ID0gYXdhaXQgaW1wb3J0KCdAbW9kZWxjb250ZXh0cHJvdG9jb2wvc2RrL3R5cGVzLmpzJykuY2F0Y2goZmFpbGVkVG9JbXBvcnQpO1xuICAgICAgICBpZiAoIXRoaXMuc2Vzc2lvbikge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdTZXJ2ZXIgbm90IGluaXRpYWxpemVkLiBNYWtlIHN1cmUgeW91IGNhbGwgY29ubmVjdCgpIGZpcnN0LicpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgdGhpcy5zZXNzaW9uLmNhbGxUb29sKHtcbiAgICAgICAgICAgIG5hbWU6IHRvb2xOYW1lLFxuICAgICAgICAgICAgYXJndW1lbnRzOiBhcmdzID8/IHt9LFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgcGFyc2VkID0gQ2FsbFRvb2xSZXN1bHRTY2hlbWEucGFyc2UocmVzcG9uc2UpO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBwYXJzZWQuY29udGVudDtcbiAgICAgICAgdGhpcy5kZWJ1Z0xvZygoKSA9PiBgQ2FsbGVkIHRvb2wgJHt0b29sTmFtZX0gKGFyZ3M6ICR7SlNPTi5zdHJpbmdpZnkoYXJncyl9LCByZXN1bHQ6ICR7SlNPTi5zdHJpbmdpZnkocmVzdWx0KX0pYCk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGdldCBuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbmFtZTtcbiAgICB9XG4gICAgYXN5bmMgY2xvc2UoKSB7XG4gICAgICAgIGlmICh0aGlzLnRyYW5zcG9ydCkge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy50cmFuc3BvcnQuY2xvc2UoKTtcbiAgICAgICAgICAgIHRoaXMudHJhbnNwb3J0ID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zZXNzaW9uKSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLnNlc3Npb24uY2xvc2UoKTtcbiAgICAgICAgICAgIHRoaXMuc2Vzc2lvbiA9IG51bGw7XG4gICAgICAgIH1cbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ub2RlLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/mcp-stdio/node.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/shims-node.mjs":
/*!*******************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/shims-node.mjs ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("var node_process__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncLocalStorage: () => (/* reexport safe */ node_async_hooks__WEBPACK_IMPORTED_MODULE_5__.AsyncLocalStorage),\n/* harmony export */   MCPServerStdio: () => (/* reexport safe */ _mcp_stdio_node_mjs__WEBPACK_IMPORTED_MODULE_6__.NodeMCPServerStdio),\n/* harmony export */   Readable: () => (/* reexport safe */ node_stream__WEBPACK_IMPORTED_MODULE_3__.Readable),\n/* harmony export */   ReadableStream: () => (/* reexport safe */ node_stream_web__WEBPACK_IMPORTED_MODULE_4__.ReadableStream),\n/* harmony export */   RuntimeEventEmitter: () => (/* reexport safe */ node_events__WEBPACK_IMPORTED_MODULE_1__.EventEmitter),\n/* harmony export */   TransformStream: () => (/* reexport safe */ node_stream_web__WEBPACK_IMPORTED_MODULE_4__.TransformStream),\n/* harmony export */   clearTimeout: () => (/* reexport safe */ node_timers__WEBPACK_IMPORTED_MODULE_7__.clearTimeout),\n/* harmony export */   isBrowserEnvironment: () => (/* binding */ isBrowserEnvironment),\n/* harmony export */   loadEnv: () => (/* binding */ loadEnv),\n/* harmony export */   randomUUID: () => (/* reexport safe */ node_crypto__WEBPACK_IMPORTED_MODULE_2__.randomUUID),\n/* harmony export */   timer: () => (/* binding */ timer)\n/* harmony export */ });\n/* harmony import */ var node_process__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:process */ \"node:process\");\n/* harmony import */ var node_events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:events */ \"node:events\");\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony import */ var node_stream__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! node:stream */ \"node:stream\");\n/* harmony import */ var node_stream_web__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! node:stream/web */ \"node:stream/web\");\n/* harmony import */ var node_async_hooks__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! node:async_hooks */ \"node:async_hooks\");\n/* harmony import */ var _mcp_stdio_node_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./mcp-stdio/node.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/mcp-stdio/node.mjs\");\n/* harmony import */ var node_timers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! node:timers */ \"node:timers\");\n\n\n// Use function instead of exporting the value to prevent\n// circular dependency resolution issues caused by other exports in '@openai/agents-core/_shims'\nfunction loadEnv() {\n    if (typeof /*#__PURE__*/ (node_process__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (node_process__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(node_process__WEBPACK_IMPORTED_MODULE_0__, 2))) === 'undefined' || typeof node_process__WEBPACK_IMPORTED_MODULE_0__.env === 'undefined') {\n        if (false) {}\n        return {};\n    }\n    return node_process__WEBPACK_IMPORTED_MODULE_0__.env;\n}\n\n\n\n\nfunction isBrowserEnvironment() {\n    return false;\n}\n\n\nclass NodeTimer {\n    constructor() { }\n    setTimeout(callback, ms) {\n        return setTimeout(callback, ms);\n    }\n    clearTimeout(timeoutId) {\n        clearTimeout(timeoutId);\n    }\n}\nconst timer = new NodeTimer();\n\n//# sourceMappingURL=shims-node.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3Qvc2hpbXMvc2hpbXMtbm9kZS5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd0M7QUFDMEI7QUFDbEU7QUFDQTtBQUNPO0FBQ1AsZUFBZSw4TUFBTywyQkFBMkIsNkNBQVc7QUFDNUQsWUFBWSxLQUNtQyxFQUFFLEVBRXhDO0FBQ1Q7QUFDQTtBQUNBLFdBQVcsNkNBQVc7QUFDdEI7QUFDeUM7QUFDRjtBQUM0QjtBQUNkO0FBQzlDO0FBQ1A7QUFDQTtBQUM0RTtBQUNqQztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNpQjtBQUNqQiIsInNvdXJjZXMiOlsiL1VzZXJzL3l1d2FuZy9wcm9qZWN0cy9vcGVuYWktcmVhbHRpbWUtYWdlbnRzL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC41X3dzQDguMTguM196b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L3NoaW1zL3NoaW1zLW5vZGUubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHByb2Nlc3MgZnJvbSAnbm9kZTpwcm9jZXNzJztcbmV4cG9ydCB7IEV2ZW50RW1pdHRlciBhcyBSdW50aW1lRXZlbnRFbWl0dGVyIH0gZnJvbSAnbm9kZTpldmVudHMnO1xuLy8gVXNlIGZ1bmN0aW9uIGluc3RlYWQgb2YgZXhwb3J0aW5nIHRoZSB2YWx1ZSB0byBwcmV2ZW50XG4vLyBjaXJjdWxhciBkZXBlbmRlbmN5IHJlc29sdXRpb24gaXNzdWVzIGNhdXNlZCBieSBvdGhlciBleHBvcnRzIGluICdAb3BlbmFpL2FnZW50cy1jb3JlL19zaGltcydcbmV4cG9ydCBmdW5jdGlvbiBsb2FkRW52KCkge1xuICAgIGlmICh0eXBlb2YgcHJvY2VzcyA9PT0gJ3VuZGVmaW5lZCcgfHwgdHlwZW9mIHByb2Nlc3MuZW52ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBpZiAodHlwZW9mIGltcG9ydC5tZXRhID09PSAnb2JqZWN0JyAmJlxuICAgICAgICAgICAgdHlwZW9mIGltcG9ydC5tZXRhLmVudiA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIHJldHVybiBpbXBvcnQubWV0YS5lbnY7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICByZXR1cm4gcHJvY2Vzcy5lbnY7XG59XG5leHBvcnQgeyByYW5kb21VVUlEIH0gZnJvbSAnbm9kZTpjcnlwdG8nO1xuZXhwb3J0IHsgUmVhZGFibGUgfSBmcm9tICdub2RlOnN0cmVhbSc7XG5leHBvcnQgeyBSZWFkYWJsZVN0cmVhbSwgVHJhbnNmb3JtU3RyZWFtLCB9IGZyb20gJ25vZGU6c3RyZWFtL3dlYic7XG5leHBvcnQgeyBBc3luY0xvY2FsU3RvcmFnZSB9IGZyb20gJ25vZGU6YXN5bmNfaG9va3MnO1xuZXhwb3J0IGZ1bmN0aW9uIGlzQnJvd3NlckVudmlyb25tZW50KCkge1xuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydCB7IE5vZGVNQ1BTZXJ2ZXJTdGRpbyBhcyBNQ1BTZXJ2ZXJTdGRpbyB9IGZyb20gXCIuL21jcC1zdGRpby9ub2RlLm1qc1wiO1xuZXhwb3J0IHsgY2xlYXJUaW1lb3V0IH0gZnJvbSAnbm9kZTp0aW1lcnMnO1xuY2xhc3MgTm9kZVRpbWVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxuICAgIHNldFRpbWVvdXQoY2FsbGJhY2ssIG1zKSB7XG4gICAgICAgIHJldHVybiBzZXRUaW1lb3V0KGNhbGxiYWNrLCBtcyk7XG4gICAgfVxuICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgfVxufVxuY29uc3QgdGltZXIgPSBuZXcgTm9kZVRpbWVyKCk7XG5leHBvcnQgeyB0aW1lciB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2hpbXMtbm9kZS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tool.mjs":
/*!*******************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tool.mjs ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computerTool: () => (/* binding */ computerTool),\n/* harmony export */   tool: () => (/* binding */ tool)\n/* harmony export */ });\n/* harmony import */ var _utils_safeExecute_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/safeExecute.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/safeExecute.mjs\");\n/* harmony import */ var _utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/tools.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/tools.mjs\");\n/* harmony import */ var _utils_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/typeGuards.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _tracing_index_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./tracing/index.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/index.mjs\");\n/* harmony import */ var _utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/smartString.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/smartString.mjs\");\n\n\n\n\n\n\n\n\n/**\n * Exposes a computer to the agent as a tool to be called\n *\n * @param options Additional configuration for the computer tool like specifying the location of your agent\n * @returns a computer tool definition\n */\nfunction computerTool(options) {\n    return {\n        type: 'computer',\n        name: options.name ?? 'computer_use_preview',\n        computer: options.computer,\n    };\n}\n/**\n * The default function to invoke when an error occurs while running the tool.\n *\n * Always returns `An error occurred while running the tool. Please try again. Error: <error details>`\n *\n * @param context An instance of the current RunContext\n * @param error The error that occurred\n */\nfunction defaultToolErrorFunction(context, error) {\n    const details = error instanceof Error ? error.toString() : String(error);\n    return `An error occurred while running the tool. Please try again. Error: ${details}`;\n}\n/**\n * Exposes a function to the agent as a tool to be called\n *\n * @param options The options for the tool\n * @returns A new tool\n */\nfunction tool(options) {\n    const name = options.name\n        ? (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__.toFunctionToolName)(options.name)\n        : (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__.toFunctionToolName)(options.execute.name);\n    const toolErrorFunction = typeof options.errorFunction === 'undefined'\n        ? defaultToolErrorFunction\n        : options.errorFunction;\n    if (!name) {\n        throw new Error('Tool name cannot be empty. Either name your function or provide a name in the options.');\n    }\n    const strictMode = options.strict ?? true;\n    if (!strictMode && (0,_utils_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_2__.isZodObject)(options.parameters)) {\n        throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_3__.UserError('Strict mode is required for Zod parameters');\n    }\n    const { parser, schema: parameters } = (0,_utils_tools_mjs__WEBPACK_IMPORTED_MODULE_1__.getSchemaAndParserFromInputType)(options.parameters, name);\n    async function _invoke(runContext, input) {\n        const [error, parsed] = await (0,_utils_safeExecute_mjs__WEBPACK_IMPORTED_MODULE_0__.safeExecute)(() => parser(input));\n        if (error !== null) {\n            if (_logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].dontLogToolData) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].debug(`Invalid JSON input for tool ${name}`);\n            }\n            else {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].debug(`Invalid JSON input for tool ${name}: ${input}`);\n            }\n            throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_3__.ModelBehaviorError('Invalid JSON input for tool');\n        }\n        if (_logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].dontLogToolData) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].debug(`Invoking tool ${name}`);\n        }\n        else {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].debug(`Invoking tool ${name} with input ${input}`);\n        }\n        const result = await options.execute(parsed, runContext);\n        const stringResult = (0,_utils_smartString_mjs__WEBPACK_IMPORTED_MODULE_6__.toSmartString)(result);\n        if (_logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].dontLogToolData) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].debug(`Tool ${name} completed`);\n        }\n        else {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"].debug(`Tool ${name} returned: ${stringResult}`);\n        }\n        return result;\n    }\n    async function invoke(runContext, input) {\n        return _invoke(runContext, input).catch((error) => {\n            if (toolErrorFunction) {\n                const currentSpan = (0,_tracing_index_mjs__WEBPACK_IMPORTED_MODULE_5__.getCurrentSpan)();\n                currentSpan?.setError({\n                    message: 'Error running tool (non-fatal)',\n                    data: {\n                        tool_name: name,\n                        error: error.toString(),\n                    },\n                });\n                return toolErrorFunction(runContext, error);\n            }\n            throw error;\n        });\n    }\n    const needsApproval = typeof options.needsApproval === 'function'\n        ? options.needsApproval\n        : async () => typeof options.needsApproval === 'boolean'\n            ? options.needsApproval\n            : false;\n    return {\n        type: 'function',\n        name,\n        description: options.description,\n        parameters,\n        strict: strictMode,\n        invoke,\n        needsApproval,\n    };\n}\n//# sourceMappingURL=tool.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdG9vbC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQXNEO0FBQ0M7QUFDYTtBQUNmO0FBQ1E7QUFDM0I7QUFDbUI7QUFDRztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUZBQWlGLFFBQVE7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsVUFBVSxvRUFBa0I7QUFDNUIsVUFBVSxvRUFBa0I7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsa0VBQVc7QUFDbEMsa0JBQWtCLGtEQUFTO0FBQzNCO0FBQ0EsWUFBWSw2QkFBNkIsRUFBRSxpRkFBK0I7QUFDMUU7QUFDQSxzQ0FBc0MsbUVBQVc7QUFDakQ7QUFDQSxnQkFBZ0IsbURBQU07QUFDdEIsZ0JBQWdCLG1EQUFNLHNDQUFzQyxLQUFLO0FBQ2pFO0FBQ0E7QUFDQSxnQkFBZ0IsbURBQU0sc0NBQXNDLEtBQUssSUFBSSxNQUFNO0FBQzNFO0FBQ0Esc0JBQXNCLDJEQUFrQjtBQUN4QztBQUNBLFlBQVksbURBQU07QUFDbEIsWUFBWSxtREFBTSx3QkFBd0IsS0FBSztBQUMvQztBQUNBO0FBQ0EsWUFBWSxtREFBTSx3QkFBd0IsTUFBTSxhQUFhLE1BQU07QUFDbkU7QUFDQTtBQUNBLDZCQUE2QixxRUFBYTtBQUMxQyxZQUFZLG1EQUFNO0FBQ2xCLFlBQVksbURBQU0sZUFBZSxNQUFNO0FBQ3ZDO0FBQ0E7QUFDQSxZQUFZLG1EQUFNLGVBQWUsTUFBTSxZQUFZLGFBQWE7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGtFQUFjO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMveXV3YW5nL3Byb2plY3RzL29wZW5haS1yZWFsdGltZS1hZ2VudHMvbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdG9vbC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2FmZUV4ZWN1dGUgfSBmcm9tIFwiLi91dGlscy9zYWZlRXhlY3V0ZS5tanNcIjtcbmltcG9ydCB7IHRvRnVuY3Rpb25Ub29sTmFtZSB9IGZyb20gXCIuL3V0aWxzL3Rvb2xzLm1qc1wiO1xuaW1wb3J0IHsgZ2V0U2NoZW1hQW5kUGFyc2VyRnJvbUlucHV0VHlwZSB9IGZyb20gXCIuL3V0aWxzL3Rvb2xzLm1qc1wiO1xuaW1wb3J0IHsgaXNab2RPYmplY3QgfSBmcm9tIFwiLi91dGlscy90eXBlR3VhcmRzLm1qc1wiO1xuaW1wb3J0IHsgTW9kZWxCZWhhdmlvckVycm9yLCBVc2VyRXJyb3IgfSBmcm9tIFwiLi9lcnJvcnMubWpzXCI7XG5pbXBvcnQgbG9nZ2VyIGZyb20gXCIuL2xvZ2dlci5tanNcIjtcbmltcG9ydCB7IGdldEN1cnJlbnRTcGFuIH0gZnJvbSBcIi4vdHJhY2luZy9pbmRleC5tanNcIjtcbmltcG9ydCB7IHRvU21hcnRTdHJpbmcgfSBmcm9tIFwiLi91dGlscy9zbWFydFN0cmluZy5tanNcIjtcbi8qKlxuICogRXhwb3NlcyBhIGNvbXB1dGVyIHRvIHRoZSBhZ2VudCBhcyBhIHRvb2wgdG8gYmUgY2FsbGVkXG4gKlxuICogQHBhcmFtIG9wdGlvbnMgQWRkaXRpb25hbCBjb25maWd1cmF0aW9uIGZvciB0aGUgY29tcHV0ZXIgdG9vbCBsaWtlIHNwZWNpZnlpbmcgdGhlIGxvY2F0aW9uIG9mIHlvdXIgYWdlbnRcbiAqIEByZXR1cm5zIGEgY29tcHV0ZXIgdG9vbCBkZWZpbml0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wdXRlclRvb2wob3B0aW9ucykge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdjb21wdXRlcicsXG4gICAgICAgIG5hbWU6IG9wdGlvbnMubmFtZSA/PyAnY29tcHV0ZXJfdXNlX3ByZXZpZXcnLFxuICAgICAgICBjb21wdXRlcjogb3B0aW9ucy5jb21wdXRlcixcbiAgICB9O1xufVxuLyoqXG4gKiBUaGUgZGVmYXVsdCBmdW5jdGlvbiB0byBpbnZva2Ugd2hlbiBhbiBlcnJvciBvY2N1cnMgd2hpbGUgcnVubmluZyB0aGUgdG9vbC5cbiAqXG4gKiBBbHdheXMgcmV0dXJucyBgQW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgcnVubmluZyB0aGUgdG9vbC4gUGxlYXNlIHRyeSBhZ2Fpbi4gRXJyb3I6IDxlcnJvciBkZXRhaWxzPmBcbiAqXG4gKiBAcGFyYW0gY29udGV4dCBBbiBpbnN0YW5jZSBvZiB0aGUgY3VycmVudCBSdW5Db250ZXh0XG4gKiBAcGFyYW0gZXJyb3IgVGhlIGVycm9yIHRoYXQgb2NjdXJyZWRcbiAqL1xuZnVuY3Rpb24gZGVmYXVsdFRvb2xFcnJvckZ1bmN0aW9uKGNvbnRleHQsIGVycm9yKSB7XG4gICAgY29uc3QgZGV0YWlscyA9IGVycm9yIGluc3RhbmNlb2YgRXJyb3IgPyBlcnJvci50b1N0cmluZygpIDogU3RyaW5nKGVycm9yKTtcbiAgICByZXR1cm4gYEFuIGVycm9yIG9jY3VycmVkIHdoaWxlIHJ1bm5pbmcgdGhlIHRvb2wuIFBsZWFzZSB0cnkgYWdhaW4uIEVycm9yOiAke2RldGFpbHN9YDtcbn1cbi8qKlxuICogRXhwb3NlcyBhIGZ1bmN0aW9uIHRvIHRoZSBhZ2VudCBhcyBhIHRvb2wgdG8gYmUgY2FsbGVkXG4gKlxuICogQHBhcmFtIG9wdGlvbnMgVGhlIG9wdGlvbnMgZm9yIHRoZSB0b29sXG4gKiBAcmV0dXJucyBBIG5ldyB0b29sXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b29sKG9wdGlvbnMpIHtcbiAgICBjb25zdCBuYW1lID0gb3B0aW9ucy5uYW1lXG4gICAgICAgID8gdG9GdW5jdGlvblRvb2xOYW1lKG9wdGlvbnMubmFtZSlcbiAgICAgICAgOiB0b0Z1bmN0aW9uVG9vbE5hbWUob3B0aW9ucy5leGVjdXRlLm5hbWUpO1xuICAgIGNvbnN0IHRvb2xFcnJvckZ1bmN0aW9uID0gdHlwZW9mIG9wdGlvbnMuZXJyb3JGdW5jdGlvbiA9PT0gJ3VuZGVmaW5lZCdcbiAgICAgICAgPyBkZWZhdWx0VG9vbEVycm9yRnVuY3Rpb25cbiAgICAgICAgOiBvcHRpb25zLmVycm9yRnVuY3Rpb247XG4gICAgaWYgKCFuYW1lKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVG9vbCBuYW1lIGNhbm5vdCBiZSBlbXB0eS4gRWl0aGVyIG5hbWUgeW91ciBmdW5jdGlvbiBvciBwcm92aWRlIGEgbmFtZSBpbiB0aGUgb3B0aW9ucy4nKTtcbiAgICB9XG4gICAgY29uc3Qgc3RyaWN0TW9kZSA9IG9wdGlvbnMuc3RyaWN0ID8/IHRydWU7XG4gICAgaWYgKCFzdHJpY3RNb2RlICYmIGlzWm9kT2JqZWN0KG9wdGlvbnMucGFyYW1ldGVycykpIHtcbiAgICAgICAgdGhyb3cgbmV3IFVzZXJFcnJvcignU3RyaWN0IG1vZGUgaXMgcmVxdWlyZWQgZm9yIFpvZCBwYXJhbWV0ZXJzJyk7XG4gICAgfVxuICAgIGNvbnN0IHsgcGFyc2VyLCBzY2hlbWE6IHBhcmFtZXRlcnMgfSA9IGdldFNjaGVtYUFuZFBhcnNlckZyb21JbnB1dFR5cGUob3B0aW9ucy5wYXJhbWV0ZXJzLCBuYW1lKTtcbiAgICBhc3luYyBmdW5jdGlvbiBfaW52b2tlKHJ1bkNvbnRleHQsIGlucHV0KSB7XG4gICAgICAgIGNvbnN0IFtlcnJvciwgcGFyc2VkXSA9IGF3YWl0IHNhZmVFeGVjdXRlKCgpID0+IHBhcnNlcihpbnB1dCkpO1xuICAgICAgICBpZiAoZXJyb3IgIT09IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChsb2dnZXIuZG9udExvZ1Rvb2xEYXRhKSB7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLmRlYnVnKGBJbnZhbGlkIEpTT04gaW5wdXQgZm9yIHRvb2wgJHtuYW1lfWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbG9nZ2VyLmRlYnVnKGBJbnZhbGlkIEpTT04gaW5wdXQgZm9yIHRvb2wgJHtuYW1lfTogJHtpbnB1dH1gKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRocm93IG5ldyBNb2RlbEJlaGF2aW9yRXJyb3IoJ0ludmFsaWQgSlNPTiBpbnB1dCBmb3IgdG9vbCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChsb2dnZXIuZG9udExvZ1Rvb2xEYXRhKSB7XG4gICAgICAgICAgICBsb2dnZXIuZGVidWcoYEludm9raW5nIHRvb2wgJHtuYW1lfWApO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbG9nZ2VyLmRlYnVnKGBJbnZva2luZyB0b29sICR7bmFtZX0gd2l0aCBpbnB1dCAke2lucHV0fWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG9wdGlvbnMuZXhlY3V0ZShwYXJzZWQsIHJ1bkNvbnRleHQpO1xuICAgICAgICBjb25zdCBzdHJpbmdSZXN1bHQgPSB0b1NtYXJ0U3RyaW5nKHJlc3VsdCk7XG4gICAgICAgIGlmIChsb2dnZXIuZG9udExvZ1Rvb2xEYXRhKSB7XG4gICAgICAgICAgICBsb2dnZXIuZGVidWcoYFRvb2wgJHtuYW1lfSBjb21wbGV0ZWRgKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGxvZ2dlci5kZWJ1ZyhgVG9vbCAke25hbWV9IHJldHVybmVkOiAke3N0cmluZ1Jlc3VsdH1gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbiAgICBhc3luYyBmdW5jdGlvbiBpbnZva2UocnVuQ29udGV4dCwgaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIF9pbnZva2UocnVuQ29udGV4dCwgaW5wdXQpLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgICAgaWYgKHRvb2xFcnJvckZ1bmN0aW9uKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY3VycmVudFNwYW4gPSBnZXRDdXJyZW50U3BhbigpO1xuICAgICAgICAgICAgICAgIGN1cnJlbnRTcGFuPy5zZXRFcnJvcih7XG4gICAgICAgICAgICAgICAgICAgIG1lc3NhZ2U6ICdFcnJvciBydW5uaW5nIHRvb2wgKG5vbi1mYXRhbCknLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0b29sX25hbWU6IG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IudG9TdHJpbmcoKSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdG9vbEVycm9yRnVuY3Rpb24ocnVuQ29udGV4dCwgZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjb25zdCBuZWVkc0FwcHJvdmFsID0gdHlwZW9mIG9wdGlvbnMubmVlZHNBcHByb3ZhbCA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICA/IG9wdGlvbnMubmVlZHNBcHByb3ZhbFxuICAgICAgICA6IGFzeW5jICgpID0+IHR5cGVvZiBvcHRpb25zLm5lZWRzQXBwcm92YWwgPT09ICdib29sZWFuJ1xuICAgICAgICAgICAgPyBvcHRpb25zLm5lZWRzQXBwcm92YWxcbiAgICAgICAgICAgIDogZmFsc2U7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ2Z1bmN0aW9uJyxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgZGVzY3JpcHRpb246IG9wdGlvbnMuZGVzY3JpcHRpb24sXG4gICAgICAgIHBhcmFtZXRlcnMsXG4gICAgICAgIHN0cmljdDogc3RyaWN0TW9kZSxcbiAgICAgICAgaW52b2tlLFxuICAgICAgICBuZWVkc0FwcHJvdmFsLFxuICAgIH07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10b29sLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tool.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/context.mjs":
/*!******************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/context.mjs ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addErrorToCurrentSpan: () => (/* binding */ addErrorToCurrentSpan),\n/* harmony export */   cloneCurrentContext: () => (/* binding */ cloneCurrentContext),\n/* harmony export */   getCurrentSpan: () => (/* binding */ getCurrentSpan),\n/* harmony export */   getCurrentTrace: () => (/* binding */ getCurrentTrace),\n/* harmony export */   getOrCreateTrace: () => (/* binding */ getOrCreateTrace),\n/* harmony export */   resetCurrentSpan: () => (/* binding */ resetCurrentSpan),\n/* harmony export */   setCurrentSpan: () => (/* binding */ setCurrentSpan),\n/* harmony export */   withNewSpanContext: () => (/* binding */ withNewSpanContext),\n/* harmony export */   withTrace: () => (/* binding */ withTrace)\n/* harmony export */ });\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n/* harmony import */ var _provider_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/provider.mjs\");\n\n\nlet _contextAsyncLocalStorage;\nfunction getContextAsyncLocalStorage() {\n    _contextAsyncLocalStorage ??= new _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorage();\n    return _contextAsyncLocalStorage;\n}\n/**\n * This function will get the current trace from the execution context.\n *\n * @returns The current trace or null if there is no trace.\n */\nfunction getCurrentTrace() {\n    const currentTrace = getContextAsyncLocalStorage().getStore();\n    if (currentTrace?.trace) {\n        return currentTrace.trace;\n    }\n    return null;\n}\n/**\n * This function will get the current span from the execution context.\n *\n * @returns The current span or null if there is no span.\n */\nfunction getCurrentSpan() {\n    const currentSpan = getContextAsyncLocalStorage().getStore();\n    if (currentSpan?.span) {\n        return currentSpan.span;\n    }\n    return null;\n}\n/**\n * This is an AsyncLocalStorage instance that stores the current trace.\n * It will automatically handle the execution context of different event loop executions.\n *\n * The functions below should be the only way that this context gets interfaced with.\n */\nfunction _wrapFunctionWithTraceLifecycle(fn) {\n    return async () => {\n        const trace = getCurrentTrace();\n        if (!trace) {\n            throw new Error('No trace found');\n        }\n        await trace.start();\n        const result = await fn(trace);\n        await trace.end();\n        return result;\n    };\n}\n/**\n * This function will create a new trace and assign it to the execution context of the function\n * passed to it.\n *\n * @param fn - The function to run and assign the trace context to.\n * @param options - Options for the creation of the trace\n */\nasync function withTrace(trace, fn, options = {}) {\n    const newTrace = typeof trace === 'string'\n        ? (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createTrace({\n            ...options,\n            name: trace,\n        })\n        : trace;\n    return getContextAsyncLocalStorage().run({ trace: newTrace }, _wrapFunctionWithTraceLifecycle(fn));\n}\n/**\n * This function will check if there is an existing active trace in the execution context. If there\n * is, it will run the given function with the existing trace. If there is no trace, it will create\n * a new one and assign it to the execution context of the function.\n *\n * @param fn - The fzunction to run and assign the trace context to.\n * @param options - Options for the creation of the trace\n */\nasync function getOrCreateTrace(fn, options = {}) {\n    const currentTrace = getCurrentTrace();\n    if (currentTrace) {\n        // if this execution context already has a trace instance in it we just continue\n        return await fn();\n    }\n    const newTrace = (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createTrace(options);\n    return getContextAsyncLocalStorage().run({ trace: newTrace }, _wrapFunctionWithTraceLifecycle(fn));\n}\n/**\n * This function will set the current span in the execution context.\n *\n * @param span - The span to set as the current span.\n */\nfunction setCurrentSpan(span) {\n    const context = getContextAsyncLocalStorage().getStore();\n    if (!context) {\n        throw new Error('No existing trace found');\n    }\n    if (context.span) {\n        context.span.previousSpan = context.previousSpan;\n        context.previousSpan = context.span;\n    }\n    context.span = span;\n    getContextAsyncLocalStorage().enterWith(context);\n}\nfunction resetCurrentSpan() {\n    const context = getContextAsyncLocalStorage().getStore();\n    if (context) {\n        context.span = context.previousSpan;\n        context.previousSpan = context.previousSpan?.previousSpan;\n        getContextAsyncLocalStorage().enterWith(context);\n    }\n}\n/**\n * This function will add an error to the current span.\n *\n * @param spanError - The error to add to the current span.\n */\nfunction addErrorToCurrentSpan(spanError) {\n    const currentSpan = getCurrentSpan();\n    if (currentSpan) {\n        currentSpan.setError(spanError);\n    }\n}\n/**\n * This function will clone the current context by creating new instances of the trace, span, and\n * previous span.\n *\n * @param context - The context to clone.\n * @returns A clone of the context.\n */\nfunction cloneCurrentContext(context) {\n    return {\n        trace: context.trace?.clone(),\n        span: context.span?.clone(),\n        previousSpan: context.previousSpan?.clone(),\n    };\n}\n/**\n * This function will run the given function with a new span context.\n *\n * @param fn - The function to run with the new span context.\n */\nfunction withNewSpanContext(fn) {\n    const currentContext = getContextAsyncLocalStorage().getStore();\n    if (!currentContext) {\n        throw new Error('No existing trace found');\n    }\n    const copyOfContext = cloneCurrentContext(currentContext);\n    return getContextAsyncLocalStorage().run(copyOfContext, fn);\n}\n//# sourceMappingURL=context.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/context.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/createSpans.mjs":
/*!**********************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/createSpans.mjs ***!
  \**********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAgentSpan: () => (/* binding */ createAgentSpan),\n/* harmony export */   createCustomSpan: () => (/* binding */ createCustomSpan),\n/* harmony export */   createFunctionSpan: () => (/* binding */ createFunctionSpan),\n/* harmony export */   createGenerationSpan: () => (/* binding */ createGenerationSpan),\n/* harmony export */   createGuardrailSpan: () => (/* binding */ createGuardrailSpan),\n/* harmony export */   createHandoffSpan: () => (/* binding */ createHandoffSpan),\n/* harmony export */   createMCPListToolsSpan: () => (/* binding */ createMCPListToolsSpan),\n/* harmony export */   createResponseSpan: () => (/* binding */ createResponseSpan),\n/* harmony export */   createSpeechGroupSpan: () => (/* binding */ createSpeechGroupSpan),\n/* harmony export */   createSpeechSpan: () => (/* binding */ createSpeechSpan),\n/* harmony export */   createTranscriptionSpan: () => (/* binding */ createTranscriptionSpan),\n/* harmony export */   withAgentSpan: () => (/* binding */ withAgentSpan),\n/* harmony export */   withCustomSpan: () => (/* binding */ withCustomSpan),\n/* harmony export */   withFunctionSpan: () => (/* binding */ withFunctionSpan),\n/* harmony export */   withGenerationSpan: () => (/* binding */ withGenerationSpan),\n/* harmony export */   withGuardrailSpan: () => (/* binding */ withGuardrailSpan),\n/* harmony export */   withHandoffSpan: () => (/* binding */ withHandoffSpan),\n/* harmony export */   withMCPListToolsSpan: () => (/* binding */ withMCPListToolsSpan),\n/* harmony export */   withResponseSpan: () => (/* binding */ withResponseSpan),\n/* harmony export */   withSpeechGroupSpan: () => (/* binding */ withSpeechGroupSpan),\n/* harmony export */   withSpeechSpan: () => (/* binding */ withSpeechSpan),\n/* harmony export */   withTranscriptionSpan: () => (/* binding */ withTranscriptionSpan)\n/* harmony export */ });\n/* harmony import */ var _context_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./context.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/context.mjs\");\n/* harmony import */ var _provider_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./provider.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/provider.mjs\");\n\n\nfunction _withSpanFactory(createSpan) {\n    return async (fn, ...args) => {\n        // Creating a new span context to make sure that the previous span is correctly reset\n        return (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.withNewSpanContext)(async () => {\n            const span = createSpan(...args);\n            (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.setCurrentSpan)(span);\n            try {\n                span.start();\n                return await fn(span);\n            }\n            catch (error) {\n                span.setError({\n                    message: error.message,\n                    data: error.data,\n                });\n                throw error;\n            }\n            finally {\n                span.end();\n                (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.resetCurrentSpan)();\n            }\n        });\n    };\n}\n/**\n * Create a new response span. The span will not be started automatically, you should either\n * use `withResponseSpan()` or call `span.start()` and `span.end()` manually.\n *\n * This span captures the details of a model response, primarily the response identifier.\n * If you need to capture detailed generation information such as input/output messages,\n * model configuration, or usage data, use `createGenerationSpan()` instead.\n *\n * @param options - Optional span creation options, including span data and identifiers.\n * @param parent - The parent span or trace. If not provided, the current trace/span will be used\n * automatically.\n *\n * @returns The newly created response span.\n */\nfunction createResponseSpan(options, parent) {\n    options = {};\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'response',\n            ...options.data,\n        },\n    }, parent);\n}\n/**\n * Create a new response span and automatically start and end it.\n *\n * This span captures the details of a model response, primarily the response identifier.\n * If you need to capture detailed generation information such as input/output messages,\n * model configuration, or usage data, use `generationSpan()` instead.\n */\nconst withResponseSpan = _withSpanFactory(createResponseSpan);\n/**\n * Create a new agent span. The span will not be started automatically, you should either\n * use `withAgentSpan()` or call `span.start()` and `span.end()` manually.\n *\n * @param options - Optional span creation options, including span data and identifiers.\n * @param parent - The parent span or trace. If not provided, the current trace/span will be used\n * automatically.\n *\n * @returns The newly created agent span.\n */\nfunction createAgentSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'agent',\n            name: options?.data?.name ?? 'Agent',\n            ...options?.data,\n        },\n    }, parent);\n}\n/**\n * Create a new agent span and automatically start and end it.\n */\nconst withAgentSpan = _withSpanFactory(createAgentSpan);\n/**\n * Create a new function span. The span will not be started automatically, you should either\n * use `withFunctionSpan()` or call `span.start()` and `span.end()` manually.\n *\n * @param options - Optional span creation options, including span data and identifiers.\n * @param parent - The parent span or trace. If not provided, the current trace/span will be used\n * automatically.\n *\n * @returns The newly created function span.\n */\nfunction createFunctionSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'function',\n            input: options?.data?.input ?? '',\n            output: options?.data?.output ?? '',\n            ...options?.data,\n        },\n    }, parent);\n}\n/**\n * Create a new function span and automatically start and end it.\n */\nconst withFunctionSpan = _withSpanFactory(createFunctionSpan);\n/**\n * Create a new handoff span. The span will not be started automatically, you should either\n * use `withHandoffSpan()` or call `span.start()` and `span.end()` manually.\n *\n * @param options - Optional span creation options, including span data and identifiers.\n * @param parent - The parent span or trace. If not provided, the current trace/span will be used\n * automatically.\n *\n * @returns The newly created handoff span.\n */\nfunction createHandoffSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: { type: 'handoff', ...options?.data },\n    }, parent);\n}\n/**\n * Create a new handoff span and automatically start and end it.\n */\nconst withHandoffSpan = _withSpanFactory(createHandoffSpan);\n/**\n * Create a new generation span. The span will not be started automatically, you should either\n * use `withGenerationSpan()` or call `span.start()` and `span.end()` manually.\n *\n * This span captures the details of a model generation, including input/output message\n * sequences, model information, and usage data. If you only need to capture a model response\n * identifier, consider using `createResponseSpan()` instead.\n */\nfunction createGenerationSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'generation',\n            ...options?.data,\n        },\n    }, parent);\n}\n/** Automatically create a generation span, run fn and close the span */\nconst withGenerationSpan = _withSpanFactory(createGenerationSpan);\n/**\n * Create a new custom span. The span will not be started automatically, you should either use\n * `withCustomSpan()` or call `span.start()` and `span.end()` manually.\n */\nfunction createCustomSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'custom',\n            data: {},\n            ...options?.data,\n        },\n    }, parent);\n}\nconst withCustomSpan = _withSpanFactory(createCustomSpan);\n/**\n * Create a new guardrail span. The span will not be started automatically, you should either use\n * `withGuardrailSpan()` or call `span.start()` and `span.end()` manually.\n */\nfunction createGuardrailSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'guardrail',\n            triggered: false,\n            ...options?.data,\n        },\n    }, parent);\n}\nconst withGuardrailSpan = _withSpanFactory(createGuardrailSpan);\n/**\n * Create a new transcription span. The span will not be started automatically.\n */\nfunction createTranscriptionSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'transcription',\n            ...options.data,\n        },\n    }, parent);\n}\nconst withTranscriptionSpan = _withSpanFactory(createTranscriptionSpan);\n/**\n * Create a new speech span. The span will not be started automatically.\n */\nfunction createSpeechSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'speech',\n            ...options.data,\n        },\n    }, parent);\n}\nconst withSpeechSpan = _withSpanFactory(createSpeechSpan);\n/**\n * Create a new speech group span. The span will not be started automatically.\n */\nfunction createSpeechGroupSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'speech_group',\n            ...options?.data,\n        },\n    }, parent);\n}\nconst withSpeechGroupSpan = _withSpanFactory(createSpeechGroupSpan);\n/**\n * Create a new MCP list tools span. The span will not be started automatically.\n */\nfunction createMCPListToolsSpan(options, parent) {\n    return (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_1__.getGlobalTraceProvider)().createSpan({\n        ...options,\n        data: {\n            type: 'mcp_tools',\n            ...options?.data,\n        },\n    }, parent);\n}\nconst withMCPListToolsSpan = _withSpanFactory(createMCPListToolsSpan);\n//# sourceMappingURL=createSpans.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/createSpans.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/index.mjs":
/*!****************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/index.mjs ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BatchTraceProcessor: () => (/* reexport safe */ _processor_mjs__WEBPACK_IMPORTED_MODULE_3__.BatchTraceProcessor),\n/* harmony export */   ConsoleSpanExporter: () => (/* reexport safe */ _processor_mjs__WEBPACK_IMPORTED_MODULE_3__.ConsoleSpanExporter),\n/* harmony export */   NoopSpan: () => (/* reexport safe */ _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan),\n/* harmony export */   NoopTrace: () => (/* reexport safe */ _traces_mjs__WEBPACK_IMPORTED_MODULE_5__.NoopTrace),\n/* harmony export */   Span: () => (/* reexport safe */ _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.Span),\n/* harmony export */   Trace: () => (/* reexport safe */ _traces_mjs__WEBPACK_IMPORTED_MODULE_5__.Trace),\n/* harmony export */   addTraceProcessor: () => (/* binding */ addTraceProcessor),\n/* harmony export */   createAgentSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.createAgentSpan),\n/* harmony export */   createCustomSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.createCustomSpan),\n/* harmony export */   createFunctionSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.createFunctionSpan),\n/* harmony export */   createGenerationSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.createGenerationSpan),\n/* harmony export */   createGuardrailSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.createGuardrailSpan),\n/* harmony export */   createHandoffSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.createHandoffSpan),\n/* harmony export */   createMCPListToolsSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.createMCPListToolsSpan),\n/* harmony export */   createResponseSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.createResponseSpan),\n/* harmony export */   createSpeechGroupSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.createSpeechGroupSpan),\n/* harmony export */   createSpeechSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.createSpeechSpan),\n/* harmony export */   createTranscriptionSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.createTranscriptionSpan),\n/* harmony export */   generateGroupId: () => (/* reexport safe */ _utils_mjs__WEBPACK_IMPORTED_MODULE_6__.generateGroupId),\n/* harmony export */   generateSpanId: () => (/* reexport safe */ _utils_mjs__WEBPACK_IMPORTED_MODULE_6__.generateSpanId),\n/* harmony export */   generateTraceId: () => (/* reexport safe */ _utils_mjs__WEBPACK_IMPORTED_MODULE_6__.generateTraceId),\n/* harmony export */   getCurrentSpan: () => (/* reexport safe */ _context_mjs__WEBPACK_IMPORTED_MODULE_1__.getCurrentSpan),\n/* harmony export */   getCurrentTrace: () => (/* reexport safe */ _context_mjs__WEBPACK_IMPORTED_MODULE_1__.getCurrentTrace),\n/* harmony export */   getOrCreateTrace: () => (/* reexport safe */ _context_mjs__WEBPACK_IMPORTED_MODULE_1__.getOrCreateTrace),\n/* harmony export */   resetCurrentSpan: () => (/* reexport safe */ _context_mjs__WEBPACK_IMPORTED_MODULE_1__.resetCurrentSpan),\n/* harmony export */   setCurrentSpan: () => (/* reexport safe */ _context_mjs__WEBPACK_IMPORTED_MODULE_1__.setCurrentSpan),\n/* harmony export */   setTraceProcessors: () => (/* binding */ setTraceProcessors),\n/* harmony export */   setTracingDisabled: () => (/* binding */ setTracingDisabled),\n/* harmony export */   withAgentSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.withAgentSpan),\n/* harmony export */   withCustomSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.withCustomSpan),\n/* harmony export */   withFunctionSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.withFunctionSpan),\n/* harmony export */   withGenerationSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.withGenerationSpan),\n/* harmony export */   withGuardrailSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.withGuardrailSpan),\n/* harmony export */   withHandoffSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.withHandoffSpan),\n/* harmony export */   withMCPListToolsSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.withMCPListToolsSpan),\n/* harmony export */   withResponseSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.withResponseSpan),\n/* harmony export */   withSpeechGroupSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.withSpeechGroupSpan),\n/* harmony export */   withSpeechSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.withSpeechSpan),\n/* harmony export */   withTrace: () => (/* reexport safe */ _context_mjs__WEBPACK_IMPORTED_MODULE_1__.withTrace),\n/* harmony export */   withTranscriptionSpan: () => (/* reexport safe */ _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__.withTranscriptionSpan)\n/* harmony export */ });\n/* harmony import */ var _provider_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./provider.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/provider.mjs\");\n/* harmony import */ var _context_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./context.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/context.mjs\");\n/* harmony import */ var _createSpans_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./createSpans.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/createSpans.mjs\");\n/* harmony import */ var _processor_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./processor.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/processor.mjs\");\n/* harmony import */ var _spans_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spans.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/spans.mjs\");\n/* harmony import */ var _traces_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./traces.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/traces.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/utils.mjs\");\n\n\n\n\n\n\n\n/**\n * Add a processor to the list of processors. Each processor will receive all traces/spans.\n *\n * @param processor - The processor to add.\n */\nfunction addTraceProcessor(processor) {\n    (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_0__.getGlobalTraceProvider)().registerProcessor(processor);\n}\n/**\n * Set the list of processors. This will replace any existing processors.\n *\n * @param processors - The list of processors to set.\n */\nfunction setTraceProcessors(processors) {\n    (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_0__.getGlobalTraceProvider)().setProcessors(processors);\n}\n/**\n * Set the disabled state of the tracing provider.\n *\n * @param disabled - Whether to disable tracing.\n */\nfunction setTracingDisabled(disabled) {\n    (0,_provider_mjs__WEBPACK_IMPORTED_MODULE_0__.getGlobalTraceProvider)().setDisabled(disabled);\n}\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdHJhY2luZy9pbmRleC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd0Q7QUFDd0U7QUFDOUY7QUFDMEM7QUFDL0I7QUFDRztBQUMrQjtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxJQUFJLHFFQUFzQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLElBQUkscUVBQXNCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsSUFBSSxxRUFBc0I7QUFDMUI7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3l1d2FuZy9wcm9qZWN0cy9vcGVuYWktcmVhbHRpbWUtYWdlbnRzL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC41X3dzQDguMTguM196b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L3RyYWNpbmcvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEdsb2JhbFRyYWNlUHJvdmlkZXIgfSBmcm9tIFwiLi9wcm92aWRlci5tanNcIjtcbmV4cG9ydCB7IGdldEN1cnJlbnRTcGFuLCBnZXRDdXJyZW50VHJhY2UsIGdldE9yQ3JlYXRlVHJhY2UsIHJlc2V0Q3VycmVudFNwYW4sIHNldEN1cnJlbnRTcGFuLCB3aXRoVHJhY2UsIH0gZnJvbSBcIi4vY29udGV4dC5tanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NyZWF0ZVNwYW5zLm1qc1wiO1xuZXhwb3J0IHsgQmF0Y2hUcmFjZVByb2Nlc3NvciwgQ29uc29sZVNwYW5FeHBvcnRlciwgfSBmcm9tIFwiLi9wcm9jZXNzb3IubWpzXCI7XG5leHBvcnQgeyBOb29wU3BhbiwgU3BhbiB9IGZyb20gXCIuL3NwYW5zLm1qc1wiO1xuZXhwb3J0IHsgTm9vcFRyYWNlLCBUcmFjZSB9IGZyb20gXCIuL3RyYWNlcy5tanNcIjtcbmV4cG9ydCB7IGdlbmVyYXRlR3JvdXBJZCwgZ2VuZXJhdGVTcGFuSWQsIGdlbmVyYXRlVHJhY2VJZCB9IGZyb20gXCIuL3V0aWxzLm1qc1wiO1xuLyoqXG4gKiBBZGQgYSBwcm9jZXNzb3IgdG8gdGhlIGxpc3Qgb2YgcHJvY2Vzc29ycy4gRWFjaCBwcm9jZXNzb3Igd2lsbCByZWNlaXZlIGFsbCB0cmFjZXMvc3BhbnMuXG4gKlxuICogQHBhcmFtIHByb2Nlc3NvciAtIFRoZSBwcm9jZXNzb3IgdG8gYWRkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gYWRkVHJhY2VQcm9jZXNzb3IocHJvY2Vzc29yKSB7XG4gICAgZ2V0R2xvYmFsVHJhY2VQcm92aWRlcigpLnJlZ2lzdGVyUHJvY2Vzc29yKHByb2Nlc3Nvcik7XG59XG4vKipcbiAqIFNldCB0aGUgbGlzdCBvZiBwcm9jZXNzb3JzLiBUaGlzIHdpbGwgcmVwbGFjZSBhbnkgZXhpc3RpbmcgcHJvY2Vzc29ycy5cbiAqXG4gKiBAcGFyYW0gcHJvY2Vzc29ycyAtIFRoZSBsaXN0IG9mIHByb2Nlc3NvcnMgdG8gc2V0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gc2V0VHJhY2VQcm9jZXNzb3JzKHByb2Nlc3NvcnMpIHtcbiAgICBnZXRHbG9iYWxUcmFjZVByb3ZpZGVyKCkuc2V0UHJvY2Vzc29ycyhwcm9jZXNzb3JzKTtcbn1cbi8qKlxuICogU2V0IHRoZSBkaXNhYmxlZCBzdGF0ZSBvZiB0aGUgdHJhY2luZyBwcm92aWRlci5cbiAqXG4gKiBAcGFyYW0gZGlzYWJsZWQgLSBXaGV0aGVyIHRvIGRpc2FibGUgdHJhY2luZy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNldFRyYWNpbmdEaXNhYmxlZChkaXNhYmxlZCkge1xuICAgIGdldEdsb2JhbFRyYWNlUHJvdmlkZXIoKS5zZXREaXNhYmxlZChkaXNhYmxlZCk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/index.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/processor.mjs":
/*!********************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/processor.mjs ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BatchTraceProcessor: () => (/* binding */ BatchTraceProcessor),\n/* harmony export */   ConsoleSpanExporter: () => (/* binding */ ConsoleSpanExporter),\n/* harmony export */   MultiTracingProcessor: () => (/* binding */ MultiTracingProcessor),\n/* harmony export */   defaultExporter: () => (/* binding */ defaultExporter),\n/* harmony export */   defaultProcessor: () => (/* binding */ defaultProcessor)\n/* harmony export */ });\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n/* harmony import */ var _config_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../config.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/config.mjs\");\n\n\n\n/**\n * Prints the traces and spans to the console\n */\nclass ConsoleSpanExporter {\n    async export(items) {\n        if (_config_mjs__WEBPACK_IMPORTED_MODULE_2__.tracing.disabled) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug('Tracing is disabled. Skipping export');\n            return;\n        }\n        for (const item of items) {\n            if (item.type === 'trace') {\n                console.log(`[Exporter] Export trace traceId=${item.traceId} name=${item.name}`);\n            }\n            else {\n                console.log(`[Exporter] Export span: ${JSON.stringify(item)}`);\n            }\n        }\n    }\n}\nclass BatchTraceProcessor {\n    #maxQueueSize;\n    #maxBatchSize;\n    #scheduleDelay;\n    #exportTriggerSize;\n    #exporter;\n    #buffer = [];\n    #timer;\n    #timeout = null;\n    #exportInProgress = false;\n    #timeoutAbortController = new AbortController();\n    constructor(exporter, { maxQueueSize = 1000, maxBatchSize = 100, scheduleDelay = 5000, // 5 seconds\n    exportTriggerRatio = 0.8, } = {}) {\n        this.#maxQueueSize = maxQueueSize;\n        this.#maxBatchSize = maxBatchSize;\n        this.#scheduleDelay = scheduleDelay;\n        this.#exportTriggerSize = maxQueueSize * exportTriggerRatio;\n        this.#exporter = exporter;\n        this.#timer = _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_1__.timer;\n        if (!(0,_openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_1__.isBrowserEnvironment)()) {\n            this.#runExportLoop();\n        }\n        else {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn('BatchTraceProcessor is not supported in the browser. Traces will not be exported.');\n        }\n    }\n    async #safeAddItem(item) {\n        if (this.#buffer.length + 1 > this.#maxQueueSize) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].error('Dropping trace because buffer is full');\n            return;\n        }\n        // add the item to the buffer\n        this.#buffer.push(item);\n        if (this.#buffer.length > this.#exportTriggerSize) {\n            // start exporting immediately\n            await this.#exportBatches();\n        }\n    }\n    #runExportLoop() {\n        this.#timeout = this.#timer.setTimeout(async () => {\n            // scheduled export\n            await this.#exportBatches();\n            this.#runExportLoop();\n        }, this.#scheduleDelay);\n        // We set this so that Node no longer considers this part of the event loop and keeps the\n        // process alive until the timer is done.\n        if (typeof this.#timeout.unref === 'function') {\n            this.#timeout.unref();\n        }\n    }\n    async #exportBatches(force = false) {\n        if (this.#buffer.length === 0) {\n            return;\n        }\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug(`Exporting batches. Force: ${force}. Buffer size: ${this.#buffer.length}`);\n        if (force || this.#buffer.length < this.#maxBatchSize) {\n            const toExport = [...this.#buffer];\n            this.#buffer = [];\n            this.#exportInProgress = true;\n            await this.#exporter.export(toExport);\n            this.#exportInProgress = false;\n        }\n        else if (this.#buffer.length > 0) {\n            const batch = this.#buffer.splice(0, this.#maxBatchSize);\n            this.#exportInProgress = true;\n            await this.#exporter.export(batch);\n            this.#exportInProgress = false;\n        }\n    }\n    async onTraceStart(trace) {\n        await this.#safeAddItem(trace);\n    }\n    async onTraceEnd(_trace) {\n        // We don't send traces on end because we already send them on start\n    }\n    async onSpanStart(_span) {\n        // We don't send spans on start because we send them at the end\n    }\n    async onSpanEnd(span) {\n        await this.#safeAddItem(span);\n    }\n    async shutdown(timeout) {\n        if (timeout) {\n            this.#timer.setTimeout(() => {\n                // force shutdown the HTTP request\n                this.#timeoutAbortController.abort();\n            }, timeout);\n        }\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug('Shutting down gracefully');\n        while (this.#buffer.length > 0) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug(`Waiting for buffer to empty. Items left: ${this.#buffer.length}`);\n            if (!this.#exportInProgress) {\n                // no current export in progress. Forcing all items to be exported\n                await this.#exportBatches(true);\n            }\n            if (this.#timeoutAbortController.signal.aborted) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug('Timeout reached, force flushing');\n                await this.#exportBatches(true);\n                break;\n            }\n            // using setTimeout to add to the event loop and keep this alive until done\n            await new Promise((resolve) => this.#timer.setTimeout(resolve, 500));\n        }\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug('Buffer empty. Exiting');\n        if (this.#timer && this.#timeout) {\n            // making sure there are no more requests\n            this.#timer.clearTimeout(this.#timeout);\n        }\n    }\n    async forceFlush() {\n        if (this.#buffer.length > 0) {\n            await this.#exportBatches(true);\n        }\n    }\n}\nclass MultiTracingProcessor {\n    #processors = [];\n    addTraceProcessor(processor) {\n        this.#processors.push(processor);\n    }\n    setProcessors(processors) {\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug('Shutting down old processors');\n        for (const processor of this.#processors) {\n            processor.shutdown();\n        }\n        this.#processors = processors;\n    }\n    async onTraceStart(trace) {\n        for (const processor of this.#processors) {\n            await processor.onTraceStart(trace);\n        }\n    }\n    async onTraceEnd(trace) {\n        for (const processor of this.#processors) {\n            await processor.onTraceEnd(trace);\n        }\n    }\n    async onSpanStart(span) {\n        for (const processor of this.#processors) {\n            await processor.onSpanStart(span);\n        }\n    }\n    async onSpanEnd(span) {\n        for (const processor of this.#processors) {\n            await processor.onSpanEnd(span);\n        }\n    }\n    async shutdown(timeout) {\n        for (const processor of this.#processors) {\n            await processor.shutdown(timeout);\n        }\n    }\n    async forceFlush() {\n        for (const processor of this.#processors) {\n            await processor.forceFlush();\n        }\n    }\n}\nlet _defaultExporter = null;\nlet _defaultProcessor = null;\nfunction defaultExporter() {\n    if (!_defaultExporter) {\n        _defaultExporter = new ConsoleSpanExporter();\n    }\n    return _defaultExporter;\n}\nfunction defaultProcessor() {\n    if (!_defaultProcessor) {\n        _defaultProcessor = new BatchTraceProcessor(defaultExporter());\n    }\n    return _defaultProcessor;\n}\n//# sourceMappingURL=processor.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/processor.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/provider.mjs":
/*!*******************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/provider.mjs ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TraceProvider: () => (/* binding */ TraceProvider),\n/* harmony export */   getGlobalTraceProvider: () => (/* binding */ getGlobalTraceProvider)\n/* harmony export */ });\n/* harmony import */ var _context_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./context.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/context.mjs\");\n/* harmony import */ var _config_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../config.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/config.mjs\");\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _processor_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./processor.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/processor.mjs\");\n/* harmony import */ var _spans_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spans.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/spans.mjs\");\n/* harmony import */ var _traces_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./traces.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/traces.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/utils.mjs\");\n\n\n\n\n\n\n\nclass TraceProvider {\n    #multiProcessor;\n    #disabled;\n    constructor() {\n        this.#multiProcessor = new _processor_mjs__WEBPACK_IMPORTED_MODULE_3__.MultiTracingProcessor();\n        this.#disabled = _config_mjs__WEBPACK_IMPORTED_MODULE_1__.tracing.disabled;\n        if ((0,_config_mjs__WEBPACK_IMPORTED_MODULE_1__.loadEnv)().NODE_ENV === 'test') {\n            // disable tracing in tests by default\n            this.#disabled = true;\n        }\n        this.#addCleanupListeners();\n    }\n    /**\n     * Add a processor to the list of processors. Each processor will receive all traces/spans.\n     *\n     * @param processor - The processor to add.\n     */\n    registerProcessor(processor) {\n        this.#multiProcessor.addTraceProcessor(processor);\n    }\n    /**\n     * Set the list of processors. This will replace any existing processors.\n     *\n     * @param processors - The list of processors to set.\n     */\n    setProcessors(processors) {\n        this.#multiProcessor.setProcessors(processors);\n    }\n    /**\n     * Get the current trace.\n     *\n     * @returns The current trace.\n     */\n    getCurrentTrace() {\n        return (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.getCurrentTrace)();\n    }\n    getCurrentSpan() {\n        return (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.getCurrentSpan)();\n    }\n    setDisabled(disabled) {\n        this.#disabled = disabled;\n    }\n    createTrace(traceOptions) {\n        if (this.#disabled) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Tracing is disabled, Not creating trace %o', traceOptions);\n            return new _traces_mjs__WEBPACK_IMPORTED_MODULE_5__.NoopTrace();\n        }\n        const traceId = traceOptions.traceId ?? (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_6__.generateTraceId)();\n        const name = traceOptions.name ?? 'Agent workflow';\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Creating trace %s with name %s', traceId, name);\n        return new _traces_mjs__WEBPACK_IMPORTED_MODULE_5__.Trace({ ...traceOptions, name, traceId }, this.#multiProcessor);\n    }\n    createSpan(spanOptions, parent) {\n        if (this.#disabled || spanOptions.disabled) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Tracing is disabled, Not creating span %o', spanOptions);\n            return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan(spanOptions.data, this.#multiProcessor);\n        }\n        let parentId;\n        let traceId;\n        if (!parent) {\n            const currentTrace = (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.getCurrentTrace)();\n            const currentSpan = (0,_context_mjs__WEBPACK_IMPORTED_MODULE_0__.getCurrentSpan)();\n            if (!currentTrace) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error('No active trace. Make sure to start a trace with `withTrace()` first. Returning NoopSpan.');\n                return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan(spanOptions.data, this.#multiProcessor);\n            }\n            if (currentSpan instanceof _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan ||\n                currentTrace instanceof _traces_mjs__WEBPACK_IMPORTED_MODULE_5__.NoopTrace) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug(`Parent ${currentSpan} or ${currentTrace} is no-op, returning NoopSpan`);\n                return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan(spanOptions.data, this.#multiProcessor);\n            }\n            traceId = currentTrace.traceId;\n            if (currentSpan) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Using parent span %s', currentSpan.spanId);\n                parentId = currentSpan.spanId;\n            }\n            else {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('No parent span, using current trace %s', currentTrace.traceId);\n            }\n        }\n        else if (parent instanceof _traces_mjs__WEBPACK_IMPORTED_MODULE_5__.Trace) {\n            if (parent instanceof _traces_mjs__WEBPACK_IMPORTED_MODULE_5__.NoopTrace) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Parent trace is no-op, returning NoopSpan');\n                return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan(spanOptions.data, this.#multiProcessor);\n            }\n            traceId = parent.traceId;\n        }\n        else if (parent instanceof _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.Span) {\n            if (parent instanceof _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan) {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Parent span is no-op, returning NoopSpan');\n                return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan(spanOptions.data, this.#multiProcessor);\n            }\n            parentId = parent.spanId;\n            traceId = parent.traceId;\n        }\n        if (!traceId) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error('No traceId found. Make sure to start a trace with `withTrace()` first. Returning NoopSpan.');\n            return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.NoopSpan(spanOptions.data, this.#multiProcessor);\n        }\n        _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug(`Creating span ${JSON.stringify(spanOptions.data)} with id ${spanOptions.spanId ?? traceId}`);\n        return new _spans_mjs__WEBPACK_IMPORTED_MODULE_4__.Span({\n            ...spanOptions,\n            traceId,\n            parentId,\n        }, this.#multiProcessor);\n    }\n    async shutdown(timeout) {\n        try {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].debug('Shutting down tracing provider');\n            await this.#multiProcessor.shutdown(timeout);\n        }\n        catch (error) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error('Error shutting down tracing provider %o', error);\n        }\n    }\n    /** Adds listeners to `process` to ensure `shutdown` occurs before exit. */\n    #addCleanupListeners() {\n        if (typeof process !== 'undefined' && typeof process.on === 'function') {\n            // handling Node.js process termination\n            const cleanup = async () => {\n                const timeout = setTimeout(() => {\n                    console.warn('Cleanup timeout, forcing exit');\n                    process.exit(1);\n                }, 5000);\n                try {\n                    await this.shutdown();\n                }\n                finally {\n                    clearTimeout(timeout);\n                }\n            };\n            // Handle normal termination\n            process.on('beforeExit', cleanup);\n            // Handle CTRL+C (SIGINT)\n            process.on('SIGINT', async () => {\n                await cleanup();\n                process.exit(130);\n            });\n            // Handle termination (SIGTERM)\n            process.on('SIGTERM', async () => {\n                await cleanup();\n                process.exit(0);\n            });\n            process.on('unhandledRejection', async (reason, promise) => {\n                _logger_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"].error('Unhandled rejection', reason, promise);\n                await cleanup();\n                process.exit(1);\n            });\n        }\n    }\n}\nlet GLOBAL_TRACE_PROVIDER = undefined;\nfunction getGlobalTraceProvider() {\n    if (!GLOBAL_TRACE_PROVIDER) {\n        GLOBAL_TRACE_PROVIDER = new TraceProvider();\n    }\n    return GLOBAL_TRACE_PROVIDER;\n}\n//# sourceMappingURL=provider.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/provider.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/spans.mjs":
/*!****************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/spans.mjs ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoopSpan: () => (/* binding */ NoopSpan),\n/* harmony export */   Span: () => (/* binding */ Span)\n/* harmony export */ });\n/* harmony import */ var _logger_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../logger.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/logger.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/utils.mjs\");\n\n\nclass Span {\n    type = 'trace.span';\n    #data;\n    #traceId;\n    #spanId;\n    #parentId;\n    #processor;\n    #startedAt;\n    #endedAt;\n    #error;\n    #previousSpan;\n    constructor(options, processor) {\n        this.#traceId = options.traceId;\n        this.#spanId = options.spanId ?? (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.generateSpanId)();\n        this.#data = options.data;\n        this.#processor = processor;\n        this.#parentId = options.parentId ?? null;\n        this.#error = options.error ?? null;\n        this.#startedAt = options.startedAt ?? null;\n        this.#endedAt = options.endedAt ?? null;\n    }\n    get traceId() {\n        return this.#traceId;\n    }\n    get spanData() {\n        return this.#data;\n    }\n    get spanId() {\n        return this.#spanId;\n    }\n    get parentId() {\n        return this.#parentId;\n    }\n    get previousSpan() {\n        return this.#previousSpan;\n    }\n    set previousSpan(span) {\n        this.#previousSpan = span;\n    }\n    start() {\n        if (this.#startedAt) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].warn('Span already started');\n            return;\n        }\n        this.#startedAt = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.timeIso)();\n        this.#processor.onSpanStart(this);\n    }\n    end() {\n        if (this.#endedAt) {\n            _logger_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].debug('Span already finished', this.spanData);\n            return;\n        }\n        this.#endedAt = (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.timeIso)();\n        this.#processor.onSpanEnd(this);\n    }\n    setError(error) {\n        this.#error = error;\n    }\n    get error() {\n        return this.#error;\n    }\n    get startedAt() {\n        return this.#startedAt;\n    }\n    get endedAt() {\n        return this.#endedAt;\n    }\n    clone() {\n        const span = new Span({\n            traceId: this.traceId,\n            spanId: this.spanId,\n            parentId: this.parentId ?? undefined,\n            data: this.spanData,\n            startedAt: this.#startedAt ?? undefined,\n            endedAt: this.#endedAt ?? undefined,\n            error: this.#error ?? undefined,\n        }, this.#processor);\n        span.previousSpan = this.previousSpan?.clone();\n        return span;\n    }\n    toJSON() {\n        return {\n            object: this.type,\n            id: this.spanId,\n            trace_id: this.traceId,\n            parent_id: this.parentId,\n            started_at: this.startedAt,\n            ended_at: this.endedAt,\n            span_data: (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.removePrivateFields)(this.spanData),\n            error: this.error,\n        };\n    }\n}\nclass NoopSpan extends Span {\n    constructor(data, processor) {\n        super({ traceId: 'no-op', spanId: 'no-op', data }, processor);\n    }\n    start() {\n        return;\n    }\n    end() {\n        return;\n    }\n    setError() {\n        return;\n    }\n    toJSON() {\n        return null;\n    }\n}\n//# sourceMappingURL=spans.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdHJhY2luZy9zcGFucy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFtQztBQUN3QztBQUNwRTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QywwREFBYztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1EQUFNO0FBQ2xCO0FBQ0E7QUFDQSwwQkFBMEIsbURBQU87QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1EQUFNO0FBQ2xCO0FBQ0E7QUFDQSx3QkFBd0IsbURBQU87QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLCtEQUFtQjtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxnQkFBZ0IseUNBQXlDO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3l1d2FuZy9wcm9qZWN0cy9vcGVuYWktcmVhbHRpbWUtYWdlbnRzL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC41X3dzQDguMTguM196b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L3RyYWNpbmcvc3BhbnMubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBsb2dnZXIgZnJvbSBcIi4uL2xvZ2dlci5tanNcIjtcbmltcG9ydCB7IGdlbmVyYXRlU3BhbklkLCByZW1vdmVQcml2YXRlRmllbGRzLCB0aW1lSXNvIH0gZnJvbSBcIi4vdXRpbHMubWpzXCI7XG5leHBvcnQgY2xhc3MgU3BhbiB7XG4gICAgdHlwZSA9ICd0cmFjZS5zcGFuJztcbiAgICAjZGF0YTtcbiAgICAjdHJhY2VJZDtcbiAgICAjc3BhbklkO1xuICAgICNwYXJlbnRJZDtcbiAgICAjcHJvY2Vzc29yO1xuICAgICNzdGFydGVkQXQ7XG4gICAgI2VuZGVkQXQ7XG4gICAgI2Vycm9yO1xuICAgICNwcmV2aW91c1NwYW47XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucywgcHJvY2Vzc29yKSB7XG4gICAgICAgIHRoaXMuI3RyYWNlSWQgPSBvcHRpb25zLnRyYWNlSWQ7XG4gICAgICAgIHRoaXMuI3NwYW5JZCA9IG9wdGlvbnMuc3BhbklkID8/IGdlbmVyYXRlU3BhbklkKCk7XG4gICAgICAgIHRoaXMuI2RhdGEgPSBvcHRpb25zLmRhdGE7XG4gICAgICAgIHRoaXMuI3Byb2Nlc3NvciA9IHByb2Nlc3NvcjtcbiAgICAgICAgdGhpcy4jcGFyZW50SWQgPSBvcHRpb25zLnBhcmVudElkID8/IG51bGw7XG4gICAgICAgIHRoaXMuI2Vycm9yID0gb3B0aW9ucy5lcnJvciA/PyBudWxsO1xuICAgICAgICB0aGlzLiNzdGFydGVkQXQgPSBvcHRpb25zLnN0YXJ0ZWRBdCA/PyBudWxsO1xuICAgICAgICB0aGlzLiNlbmRlZEF0ID0gb3B0aW9ucy5lbmRlZEF0ID8/IG51bGw7XG4gICAgfVxuICAgIGdldCB0cmFjZUlkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jdHJhY2VJZDtcbiAgICB9XG4gICAgZ2V0IHNwYW5EYXRhKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jZGF0YTtcbiAgICB9XG4gICAgZ2V0IHNwYW5JZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuI3NwYW5JZDtcbiAgICB9XG4gICAgZ2V0IHBhcmVudElkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jcGFyZW50SWQ7XG4gICAgfVxuICAgIGdldCBwcmV2aW91c1NwYW4oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNwcmV2aW91c1NwYW47XG4gICAgfVxuICAgIHNldCBwcmV2aW91c1NwYW4oc3Bhbikge1xuICAgICAgICB0aGlzLiNwcmV2aW91c1NwYW4gPSBzcGFuO1xuICAgIH1cbiAgICBzdGFydCgpIHtcbiAgICAgICAgaWYgKHRoaXMuI3N0YXJ0ZWRBdCkge1xuICAgICAgICAgICAgbG9nZ2VyLndhcm4oJ1NwYW4gYWxyZWFkeSBzdGFydGVkJyk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy4jc3RhcnRlZEF0ID0gdGltZUlzbygpO1xuICAgICAgICB0aGlzLiNwcm9jZXNzb3Iub25TcGFuU3RhcnQodGhpcyk7XG4gICAgfVxuICAgIGVuZCgpIHtcbiAgICAgICAgaWYgKHRoaXMuI2VuZGVkQXQpIHtcbiAgICAgICAgICAgIGxvZ2dlci5kZWJ1ZygnU3BhbiBhbHJlYWR5IGZpbmlzaGVkJywgdGhpcy5zcGFuRGF0YSk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy4jZW5kZWRBdCA9IHRpbWVJc28oKTtcbiAgICAgICAgdGhpcy4jcHJvY2Vzc29yLm9uU3BhbkVuZCh0aGlzKTtcbiAgICB9XG4gICAgc2V0RXJyb3IoZXJyb3IpIHtcbiAgICAgICAgdGhpcy4jZXJyb3IgPSBlcnJvcjtcbiAgICB9XG4gICAgZ2V0IGVycm9yKCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jZXJyb3I7XG4gICAgfVxuICAgIGdldCBzdGFydGVkQXQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLiNzdGFydGVkQXQ7XG4gICAgfVxuICAgIGdldCBlbmRlZEF0KCkge1xuICAgICAgICByZXR1cm4gdGhpcy4jZW5kZWRBdDtcbiAgICB9XG4gICAgY2xvbmUoKSB7XG4gICAgICAgIGNvbnN0IHNwYW4gPSBuZXcgU3Bhbih7XG4gICAgICAgICAgICB0cmFjZUlkOiB0aGlzLnRyYWNlSWQsXG4gICAgICAgICAgICBzcGFuSWQ6IHRoaXMuc3BhbklkLFxuICAgICAgICAgICAgcGFyZW50SWQ6IHRoaXMucGFyZW50SWQgPz8gdW5kZWZpbmVkLFxuICAgICAgICAgICAgZGF0YTogdGhpcy5zcGFuRGF0YSxcbiAgICAgICAgICAgIHN0YXJ0ZWRBdDogdGhpcy4jc3RhcnRlZEF0ID8/IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIGVuZGVkQXQ6IHRoaXMuI2VuZGVkQXQgPz8gdW5kZWZpbmVkLFxuICAgICAgICAgICAgZXJyb3I6IHRoaXMuI2Vycm9yID8/IHVuZGVmaW5lZCxcbiAgICAgICAgfSwgdGhpcy4jcHJvY2Vzc29yKTtcbiAgICAgICAgc3Bhbi5wcmV2aW91c1NwYW4gPSB0aGlzLnByZXZpb3VzU3Bhbj8uY2xvbmUoKTtcbiAgICAgICAgcmV0dXJuIHNwYW47XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG9iamVjdDogdGhpcy50eXBlLFxuICAgICAgICAgICAgaWQ6IHRoaXMuc3BhbklkLFxuICAgICAgICAgICAgdHJhY2VfaWQ6IHRoaXMudHJhY2VJZCxcbiAgICAgICAgICAgIHBhcmVudF9pZDogdGhpcy5wYXJlbnRJZCxcbiAgICAgICAgICAgIHN0YXJ0ZWRfYXQ6IHRoaXMuc3RhcnRlZEF0LFxuICAgICAgICAgICAgZW5kZWRfYXQ6IHRoaXMuZW5kZWRBdCxcbiAgICAgICAgICAgIHNwYW5fZGF0YTogcmVtb3ZlUHJpdmF0ZUZpZWxkcyh0aGlzLnNwYW5EYXRhKSxcbiAgICAgICAgICAgIGVycm9yOiB0aGlzLmVycm9yLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBOb29wU3BhbiBleHRlbmRzIFNwYW4ge1xuICAgIGNvbnN0cnVjdG9yKGRhdGEsIHByb2Nlc3Nvcikge1xuICAgICAgICBzdXBlcih7IHRyYWNlSWQ6ICduby1vcCcsIHNwYW5JZDogJ25vLW9wJywgZGF0YSB9LCBwcm9jZXNzb3IpO1xuICAgIH1cbiAgICBzdGFydCgpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBlbmQoKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgc2V0RXJyb3IoKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zcGFucy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/spans.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/traces.mjs":
/*!*****************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/traces.mjs ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoopTrace: () => (/* binding */ NoopTrace),\n/* harmony export */   Trace: () => (/* binding */ Trace)\n/* harmony export */ });\n/* harmony import */ var _processor_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./processor.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/processor.mjs\");\n/* harmony import */ var _utils_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/utils.mjs\");\n\n\nclass Trace {\n    type = 'trace';\n    traceId;\n    name;\n    groupId = null;\n    metadata;\n    #processor;\n    #started;\n    constructor(options, processor) {\n        this.traceId = options.traceId ?? (0,_utils_mjs__WEBPACK_IMPORTED_MODULE_1__.generateTraceId)();\n        this.name = options.name ?? 'Agent workflow';\n        this.groupId = options.groupId ?? null;\n        this.metadata = options.metadata ?? {};\n        this.#processor = processor ?? (0,_processor_mjs__WEBPACK_IMPORTED_MODULE_0__.defaultProcessor)();\n        this.#started = options.started ?? false;\n    }\n    async start() {\n        if (this.#started) {\n            return;\n        }\n        this.#started = true;\n        await this.#processor.onTraceStart(this);\n    }\n    async end() {\n        if (!this.#started) {\n            return;\n        }\n        this.#started = false;\n        await this.#processor.onTraceEnd(this);\n    }\n    clone() {\n        return new Trace({\n            traceId: this.traceId,\n            name: this.name,\n            groupId: this.groupId ?? undefined,\n            metadata: this.metadata,\n            started: this.#started,\n        });\n    }\n    toJSON() {\n        return {\n            object: this.type,\n            id: this.traceId,\n            workflow_name: this.name,\n            group_id: this.groupId,\n            metadata: this.metadata,\n        };\n    }\n}\nclass NoopTrace extends Trace {\n    constructor() {\n        super({});\n    }\n    async start() {\n        return;\n    }\n    async end() {\n        return;\n    }\n    toJSON() {\n        return null;\n    }\n}\n//# sourceMappingURL=traces.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdHJhY2luZy90cmFjZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBbUQ7QUFDTDtBQUN2QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsMkRBQWU7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLGdFQUFnQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3l1d2FuZy9wcm9qZWN0cy9vcGVuYWktcmVhbHRpbWUtYWdlbnRzL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC41X3dzQDguMTguM196b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L3RyYWNpbmcvdHJhY2VzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZhdWx0UHJvY2Vzc29yIH0gZnJvbSBcIi4vcHJvY2Vzc29yLm1qc1wiO1xuaW1wb3J0IHsgZ2VuZXJhdGVUcmFjZUlkIH0gZnJvbSBcIi4vdXRpbHMubWpzXCI7XG5leHBvcnQgY2xhc3MgVHJhY2Uge1xuICAgIHR5cGUgPSAndHJhY2UnO1xuICAgIHRyYWNlSWQ7XG4gICAgbmFtZTtcbiAgICBncm91cElkID0gbnVsbDtcbiAgICBtZXRhZGF0YTtcbiAgICAjcHJvY2Vzc29yO1xuICAgICNzdGFydGVkO1xuICAgIGNvbnN0cnVjdG9yKG9wdGlvbnMsIHByb2Nlc3Nvcikge1xuICAgICAgICB0aGlzLnRyYWNlSWQgPSBvcHRpb25zLnRyYWNlSWQgPz8gZ2VuZXJhdGVUcmFjZUlkKCk7XG4gICAgICAgIHRoaXMubmFtZSA9IG9wdGlvbnMubmFtZSA/PyAnQWdlbnQgd29ya2Zsb3cnO1xuICAgICAgICB0aGlzLmdyb3VwSWQgPSBvcHRpb25zLmdyb3VwSWQgPz8gbnVsbDtcbiAgICAgICAgdGhpcy5tZXRhZGF0YSA9IG9wdGlvbnMubWV0YWRhdGEgPz8ge307XG4gICAgICAgIHRoaXMuI3Byb2Nlc3NvciA9IHByb2Nlc3NvciA/PyBkZWZhdWx0UHJvY2Vzc29yKCk7XG4gICAgICAgIHRoaXMuI3N0YXJ0ZWQgPSBvcHRpb25zLnN0YXJ0ZWQgPz8gZmFsc2U7XG4gICAgfVxuICAgIGFzeW5jIHN0YXJ0KCkge1xuICAgICAgICBpZiAodGhpcy4jc3RhcnRlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuI3N0YXJ0ZWQgPSB0cnVlO1xuICAgICAgICBhd2FpdCB0aGlzLiNwcm9jZXNzb3Iub25UcmFjZVN0YXJ0KHRoaXMpO1xuICAgIH1cbiAgICBhc3luYyBlbmQoKSB7XG4gICAgICAgIGlmICghdGhpcy4jc3RhcnRlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuI3N0YXJ0ZWQgPSBmYWxzZTtcbiAgICAgICAgYXdhaXQgdGhpcy4jcHJvY2Vzc29yLm9uVHJhY2VFbmQodGhpcyk7XG4gICAgfVxuICAgIGNsb25lKCkge1xuICAgICAgICByZXR1cm4gbmV3IFRyYWNlKHtcbiAgICAgICAgICAgIHRyYWNlSWQ6IHRoaXMudHJhY2VJZCxcbiAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSxcbiAgICAgICAgICAgIGdyb3VwSWQ6IHRoaXMuZ3JvdXBJZCA/PyB1bmRlZmluZWQsXG4gICAgICAgICAgICBtZXRhZGF0YTogdGhpcy5tZXRhZGF0YSxcbiAgICAgICAgICAgIHN0YXJ0ZWQ6IHRoaXMuI3N0YXJ0ZWQsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBvYmplY3Q6IHRoaXMudHlwZSxcbiAgICAgICAgICAgIGlkOiB0aGlzLnRyYWNlSWQsXG4gICAgICAgICAgICB3b3JrZmxvd19uYW1lOiB0aGlzLm5hbWUsXG4gICAgICAgICAgICBncm91cF9pZDogdGhpcy5ncm91cElkLFxuICAgICAgICAgICAgbWV0YWRhdGE6IHRoaXMubWV0YWRhdGEsXG4gICAgICAgIH07XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIE5vb3BUcmFjZSBleHRlbmRzIFRyYWNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoe30pO1xuICAgIH1cbiAgICBhc3luYyBzdGFydCgpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBhc3luYyBlbmQoKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdG9KU09OKCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10cmFjZXMubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/traces.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/utils.mjs":
/*!****************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/utils.mjs ***!
  \****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateGroupId: () => (/* binding */ generateGroupId),\n/* harmony export */   generateSpanId: () => (/* binding */ generateSpanId),\n/* harmony export */   generateTraceId: () => (/* binding */ generateTraceId),\n/* harmony export */   removePrivateFields: () => (/* binding */ removePrivateFields),\n/* harmony export */   timeIso: () => (/* binding */ timeIso)\n/* harmony export */ });\n/* harmony import */ var _openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openai/agents-core/_shims */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/shims/shims-node.mjs\");\n\n/**\n * Generate an ISO 8601 timestamp of the current time.\n * @returns An ISO 8601 timestamp.\n */\nfunction timeIso() {\n    return new Date().toISOString();\n}\n/**\n * Generate a trace ID by creating a random UUID v4 and removing the dashes. This is the equivalent\n * of `uuid4().hex` in Python and prefixing it with `trace_`.\n * @returns A trace ID.\n */\nfunction generateTraceId() {\n    return `trace_${(0,_openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.randomUUID)().replace(/-/g, '')}`;\n}\n/**\n * Generate a span ID by creating a random UUID v4 and removing the dashes. This is the equivalent\n * of `uuid4().hex` in Python and prefixing it with `span_`.\n * @returns A span ID.\n */\nfunction generateSpanId() {\n    return `span_${(0,_openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.randomUUID)().replace(/-/g, '').slice(0, 24)}`;\n}\n/**\n * Generate a group ID by creating a random UUID v4 and removing the dashes. This is the equivalent\n * of `uuid4().hex` in Python and prefixing it with `group_`.\n * @returns A group ID.\n */\nfunction generateGroupId() {\n    return `group_${(0,_openai_agents_core_shims__WEBPACK_IMPORTED_MODULE_0__.randomUUID)().replace(/-/g, '').slice(0, 24)}`;\n}\n/**\n * Remove fields that start with an underscore from an object.\n * @param obj - The object to remove private fields from.\n * @returns A new object with private fields removed.\n */\nfunction removePrivateFields(obj) {\n    return Object.fromEntries(Object.entries(obj).filter(([key]) => !key.startsWith('_')));\n}\n//# sourceMappingURL=utils.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdHJhY2luZy91dGlscy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXdEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asb0JBQW9CLHFFQUFVLHFCQUFxQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLG1CQUFtQixxRUFBVSxrQ0FBa0M7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxvQkFBb0IscUVBQVUsa0NBQWtDO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMveXV3YW5nL3Byb2plY3RzL29wZW5haS1yZWFsdGltZS1hZ2VudHMvbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdHJhY2luZy91dGlscy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmFuZG9tVVVJRCB9IGZyb20gJ0BvcGVuYWkvYWdlbnRzLWNvcmUvX3NoaW1zJztcbi8qKlxuICogR2VuZXJhdGUgYW4gSVNPIDg2MDEgdGltZXN0YW1wIG9mIHRoZSBjdXJyZW50IHRpbWUuXG4gKiBAcmV0dXJucyBBbiBJU08gODYwMSB0aW1lc3RhbXAuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aW1lSXNvKCkge1xuICAgIHJldHVybiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCk7XG59XG4vKipcbiAqIEdlbmVyYXRlIGEgdHJhY2UgSUQgYnkgY3JlYXRpbmcgYSByYW5kb20gVVVJRCB2NCBhbmQgcmVtb3ZpbmcgdGhlIGRhc2hlcy4gVGhpcyBpcyB0aGUgZXF1aXZhbGVudFxuICogb2YgYHV1aWQ0KCkuaGV4YCBpbiBQeXRob24gYW5kIHByZWZpeGluZyBpdCB3aXRoIGB0cmFjZV9gLlxuICogQHJldHVybnMgQSB0cmFjZSBJRC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlVHJhY2VJZCgpIHtcbiAgICByZXR1cm4gYHRyYWNlXyR7cmFuZG9tVVVJRCgpLnJlcGxhY2UoLy0vZywgJycpfWA7XG59XG4vKipcbiAqIEdlbmVyYXRlIGEgc3BhbiBJRCBieSBjcmVhdGluZyBhIHJhbmRvbSBVVUlEIHY0IGFuZCByZW1vdmluZyB0aGUgZGFzaGVzLiBUaGlzIGlzIHRoZSBlcXVpdmFsZW50XG4gKiBvZiBgdXVpZDQoKS5oZXhgIGluIFB5dGhvbiBhbmQgcHJlZml4aW5nIGl0IHdpdGggYHNwYW5fYC5cbiAqIEByZXR1cm5zIEEgc3BhbiBJRC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlU3BhbklkKCkge1xuICAgIHJldHVybiBgc3Bhbl8ke3JhbmRvbVVVSUQoKS5yZXBsYWNlKC8tL2csICcnKS5zbGljZSgwLCAyNCl9YDtcbn1cbi8qKlxuICogR2VuZXJhdGUgYSBncm91cCBJRCBieSBjcmVhdGluZyBhIHJhbmRvbSBVVUlEIHY0IGFuZCByZW1vdmluZyB0aGUgZGFzaGVzLiBUaGlzIGlzIHRoZSBlcXVpdmFsZW50XG4gKiBvZiBgdXVpZDQoKS5oZXhgIGluIFB5dGhvbiBhbmQgcHJlZml4aW5nIGl0IHdpdGggYGdyb3VwX2AuXG4gKiBAcmV0dXJucyBBIGdyb3VwIElELlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVHcm91cElkKCkge1xuICAgIHJldHVybiBgZ3JvdXBfJHtyYW5kb21VVUlEKCkucmVwbGFjZSgvLS9nLCAnJykuc2xpY2UoMCwgMjQpfWA7XG59XG4vKipcbiAqIFJlbW92ZSBmaWVsZHMgdGhhdCBzdGFydCB3aXRoIGFuIHVuZGVyc2NvcmUgZnJvbSBhbiBvYmplY3QuXG4gKiBAcGFyYW0gb2JqIC0gVGhlIG9iamVjdCB0byByZW1vdmUgcHJpdmF0ZSBmaWVsZHMgZnJvbS5cbiAqIEByZXR1cm5zIEEgbmV3IG9iamVjdCB3aXRoIHByaXZhdGUgZmllbGRzIHJlbW92ZWQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZW1vdmVQcml2YXRlRmllbGRzKG9iaikge1xuICAgIHJldHVybiBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMob2JqKS5maWx0ZXIoKFtrZXldKSA9PiAha2V5LnN0YXJ0c1dpdGgoJ18nKSkpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/tracing/utils.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/types/protocol.mjs":
/*!*****************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/types/protocol.mjs ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AssistantContent: () => (/* binding */ AssistantContent),\n/* harmony export */   AssistantMessageItem: () => (/* binding */ AssistantMessageItem),\n/* harmony export */   AudioContent: () => (/* binding */ AudioContent),\n/* harmony export */   ComputerCallResultItem: () => (/* binding */ ComputerCallResultItem),\n/* harmony export */   ComputerToolOutput: () => (/* binding */ ComputerToolOutput),\n/* harmony export */   ComputerUseCallItem: () => (/* binding */ ComputerUseCallItem),\n/* harmony export */   FunctionCallItem: () => (/* binding */ FunctionCallItem),\n/* harmony export */   FunctionCallResultItem: () => (/* binding */ FunctionCallResultItem),\n/* harmony export */   HostedToolCallItem: () => (/* binding */ HostedToolCallItem),\n/* harmony export */   ImageContent: () => (/* binding */ ImageContent),\n/* harmony export */   InputFile: () => (/* binding */ InputFile),\n/* harmony export */   InputImage: () => (/* binding */ InputImage),\n/* harmony export */   InputText: () => (/* binding */ InputText),\n/* harmony export */   ItemBase: () => (/* binding */ ItemBase),\n/* harmony export */   MessageItem: () => (/* binding */ MessageItem),\n/* harmony export */   ModelItem: () => (/* binding */ ModelItem),\n/* harmony export */   OutputModelItem: () => (/* binding */ OutputModelItem),\n/* harmony export */   OutputText: () => (/* binding */ OutputText),\n/* harmony export */   ReasoningItem: () => (/* binding */ ReasoningItem),\n/* harmony export */   Refusal: () => (/* binding */ Refusal),\n/* harmony export */   SharedBase: () => (/* binding */ SharedBase),\n/* harmony export */   StreamEvent: () => (/* binding */ StreamEvent),\n/* harmony export */   StreamEventGenericItem: () => (/* binding */ StreamEventGenericItem),\n/* harmony export */   StreamEventResponseCompleted: () => (/* binding */ StreamEventResponseCompleted),\n/* harmony export */   StreamEventResponseStarted: () => (/* binding */ StreamEventResponseStarted),\n/* harmony export */   StreamEventTextStream: () => (/* binding */ StreamEventTextStream),\n/* harmony export */   ToolCallItem: () => (/* binding */ ToolCallItem),\n/* harmony export */   ToolOutputImage: () => (/* binding */ ToolOutputImage),\n/* harmony export */   ToolOutputText: () => (/* binding */ ToolOutputText),\n/* harmony export */   UnknownItem: () => (/* binding */ UnknownItem),\n/* harmony export */   UsageData: () => (/* binding */ UsageData),\n/* harmony export */   UserContent: () => (/* binding */ UserContent),\n/* harmony export */   UserMessageItem: () => (/* binding */ UserMessageItem),\n/* harmony export */   computerActions: () => (/* binding */ computerActions)\n/* harmony export */ });\n/* harmony import */ var _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @openai/zod/v3 */ \"(ssr)/../../node_modules/.pnpm/zod@3.25.76/node_modules/zod/v3/types.js\");\n\n// ----------------------------\n// Shared base types\n// ----------------------------\n/**\n * Every item in the protocol provides a `providerData` field to accomodate custom functionality\n * or new fields\n */\nconst SharedBase = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({\n    /**\n     * Additional optional provider specific data. Used for custom functionality or model provider\n     * specific fields.\n     */\n    providerData: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.any()).optional(),\n});\n/**\n * Every item has a shared of shared item data including an optional ID.\n */\nconst ItemBase = SharedBase.extend({\n    /**\n     * An ID to identify the item. This is optional by default. If a model provider absolutely\n     * requires this field, it will be validated on the model level.\n     */\n    id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n});\n// ----------------------------\n// Content types\n// ----------------------------\nconst Refusal = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('refusal'),\n    /**\n     * The refusal explanation from the model.\n     */\n    refusal: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(),\n});\nconst OutputText = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('output_text'),\n    /**\n     * The text output from the model.\n     */\n    text: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(),\n});\nconst InputText = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('input_text'),\n    /**\n     * A text input for example a message from a user\n     */\n    text: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(),\n});\nconst InputImage = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('input_image'),\n    /**\n     * The image input to the model. Could be a URL, base64 or an object with a file ID.\n     */\n    image: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string()\n        .or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({\n        id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(),\n    }))\n        .describe('Could be a URL, base64 or an object with a file ID.'),\n});\nconst InputFile = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('input_file'),\n    /**\n     * The file input to the model. Could be a URL, base64 or an object with a file ID.\n     */\n    file: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string()\n        .or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({\n        id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(),\n    }))\n        .describe('Contents of the file or an object with a file ID.'),\n});\nconst AudioContent = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('audio'),\n    /**\n     * The audio input to the model. Could be base64 encoded audio data or an object with a file ID.\n     */\n    audio: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string()\n        .or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({\n        id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(),\n    }))\n        .describe('Base64 encoded audio data or file id'),\n    /**\n     * The format of the audio.\n     */\n    format: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().nullable().optional(),\n    /**\n     * The transcript of the audio.\n     */\n    transcript: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().nullable().optional(),\n});\nconst ImageContent = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('image'),\n    /**\n     * The image input to the model. Could be base64 encoded image data or an object with a file ID.\n     */\n    image: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().describe('Base64 encoded image data'),\n});\nconst ToolOutputText = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('text'),\n    /**\n     * The text output from the model.\n     */\n    text: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(),\n});\nconst ToolOutputImage = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('image'),\n    /**\n     * The image data. Could be base64 encoded image data or an object with a file ID.\n     */\n    data: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().describe('Base64 encoded image data'),\n    /**\n     * The media type of the image.\n     */\n    mediaType: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().describe('IANA media type of the image'),\n});\nconst ComputerToolOutput = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('computer_screenshot'),\n    /**\n     * A base64 encoded image data or a URL representing the screenshot.\n     */\n    data: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().describe('Base64 encoded image data or URL'),\n});\nconst computerActions = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.discriminatedUnion('type', [\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({ type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('screenshot') }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('click'),\n        x: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(),\n        y: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(),\n        button: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__[\"enum\"](['left', 'right', 'wheel', 'back', 'forward']),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('double_click'),\n        x: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(),\n        y: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('scroll'),\n        x: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(),\n        y: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(),\n        scroll_x: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(),\n        scroll_y: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('type'),\n        text: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({ type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('wait') }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('move'),\n        x: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(),\n        y: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('keypress'),\n        keys: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string()),\n    }),\n    _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({\n        type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('drag'),\n        path: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.array(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({ x: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(), y: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number() })),\n    }),\n]);\n// ----------------------------\n// Message types\n// ----------------------------\nconst AssistantContent = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.discriminatedUnion('type', [\n    OutputText,\n    Refusal,\n    InputText,\n    AudioContent,\n    ImageContent,\n]);\nconst MessageBase = ItemBase.extend({\n    /**\n     * Any item without a type is treated as a message\n     */\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('message').optional(),\n});\nconst AssistantMessageItem = MessageBase.extend({\n    /**\n     * Representing a message from the assistant (i.e. the model)\n     */\n    role: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('assistant'),\n    /**\n     * The status of the message.\n     */\n    status: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__[\"enum\"](['in_progress', 'completed', 'incomplete']),\n    /**\n     * The content of the message.\n     */\n    content: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.array(AssistantContent),\n});\nconst UserContent = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.discriminatedUnion('type', [\n    InputText,\n    InputImage,\n    InputFile,\n    AudioContent,\n]);\nconst UserMessageItem = MessageBase.extend({\n    // type: z.literal('message'),\n    /**\n     * Representing a message from the user\n     */\n    role: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('user'),\n    /**\n     * The content of the message.\n     */\n    content: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.array(UserContent).or(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string()),\n});\nconst SystemMessageItem = MessageBase.extend({\n    // type: z.literal('message'),\n    /**\n     * Representing a system message to the user\n     */\n    role: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('system'),\n    /**\n     * The content of the message.\n     */\n    content: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(),\n});\nconst MessageItem = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.discriminatedUnion('role', [\n    SystemMessageItem,\n    AssistantMessageItem,\n    UserMessageItem,\n]);\n// ----------------------------\n// Tool call types\n// ----------------------------\nconst HostedToolCallItem = ItemBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('hosted_tool_call'),\n    /**\n     * The name of the hosted tool. For example `web_search_call` or `file_search_call`\n     */\n    name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().describe('The name of the hosted tool'),\n    /**\n     * The status of the tool call.\n     */\n    status: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    /**\n     * The primary output of the tool call. Additional output might be in the `providerData` field.\n     */\n    output: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n});\nconst FunctionCallItem = ItemBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('function_call'),\n    /**\n     * The ID of the tool call. Required to match up the respective tool call result.\n     */\n    callId: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().describe('The ID of the tool call'),\n    /**\n     * The name of the function.\n     */\n    name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().describe('The name of the function'),\n    /**\n     * The status of the function call.\n     */\n    status: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__[\"enum\"](['in_progress', 'completed', 'incomplete']).optional(),\n    /**\n     * The arguments of the function call.\n     */\n    arguments: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(),\n});\nconst FunctionCallResultItem = ItemBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('function_call_result'),\n    /**\n     * The name of the tool that was called\n     */\n    name: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().describe('The name of the tool'),\n    /**\n     * The ID of the tool call. Required to match up the respective tool call result.\n     */\n    callId: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().describe('The ID of the tool call'),\n    /**\n     * The status of the tool call.\n     */\n    status: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__[\"enum\"](['in_progress', 'completed', 'incomplete']),\n    /**\n     * The output of the tool call.\n     */\n    output: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.discriminatedUnion('type', [ToolOutputText, ToolOutputImage]),\n});\nconst ComputerUseCallItem = ItemBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('computer_call'),\n    /**\n     * The ID of the computer call. Required to match up the respective computer call result.\n     */\n    callId: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().describe('The ID of the computer call'),\n    /**\n     * The status of the computer call.\n     */\n    status: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__[\"enum\"](['in_progress', 'completed', 'incomplete']),\n    /**\n     * The action to be performed by the computer.\n     */\n    action: computerActions,\n});\nconst ComputerCallResultItem = ItemBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('computer_call_result'),\n    /**\n     * The ID of the computer call. Required to match up the respective computer call result.\n     */\n    callId: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().describe('The ID of the computer call'),\n    /**\n     * The output of the computer call.\n     */\n    output: ComputerToolOutput,\n});\nconst ToolCallItem = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.discriminatedUnion('type', [\n    ComputerUseCallItem,\n    FunctionCallItem,\n    HostedToolCallItem,\n]);\n// ----------------------------\n// Special item types\n// ----------------------------\nconst ReasoningItem = SharedBase.extend({\n    id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string().optional(),\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('reasoning'),\n    /**\n     * The user facing representation of the reasoning. Additional information might be in the `providerData` field.\n     */\n    content: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.array(InputText),\n});\n/**\n * This is a catch all for items that are not part of the protocol.\n *\n * For example, a model might return an item that is not part of the protocol using this type.\n *\n * In that case everything returned from the model should be passed in the `providerData` field.\n *\n * This enables new features to be added to be added by a model provider without breaking the protocol.\n */\nconst UnknownItem = ItemBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('unknown'),\n});\n// ----------------------------\n// Joined item types\n// ----------------------------\nconst OutputModelItem = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.discriminatedUnion('type', [\n    AssistantMessageItem,\n    HostedToolCallItem,\n    FunctionCallItem,\n    ComputerUseCallItem,\n    ReasoningItem,\n    UnknownItem,\n]);\nconst ModelItem = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.union([\n    UserMessageItem,\n    AssistantMessageItem,\n    SystemMessageItem,\n    HostedToolCallItem,\n    FunctionCallItem,\n    ComputerUseCallItem,\n    FunctionCallResultItem,\n    ComputerCallResultItem,\n    ReasoningItem,\n    UnknownItem,\n]);\n// ----------------------------\n// Meta data types\n// ----------------------------\nconst UsageData = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.object({\n    requests: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number().optional(),\n    inputTokens: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(),\n    outputTokens: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(),\n    totalTokens: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number(),\n    inputTokensDetails: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number()).optional(),\n    outputTokensDetails: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.record(_openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(), _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.number()).optional(),\n});\n// ----------------------------\n// Stream event types\n// ----------------------------\n/**\n * Event returned by the model when new output text is available to stream to the user.\n */\nconst StreamEventTextStream = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('output_text_delta'),\n    /**\n     * The delta text that was streamed by the modelto the user.\n     */\n    delta: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(),\n});\n/**\n * Event returned by the model when a new response is started.\n */\nconst StreamEventResponseStarted = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('response_started'),\n});\n/**\n * Event returned by the model when a response is completed.\n */\nconst StreamEventResponseCompleted = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('response_done'),\n    /**\n     * The response from the model.\n     */\n    response: SharedBase.extend({\n        /**\n         * The ID of the response.\n         */\n        id: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.string(),\n        /**\n         * The usage data for the response.\n         */\n        usage: UsageData,\n        /**\n         * The output from the model.\n         */\n        output: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.array(OutputModelItem),\n    }),\n});\n/**\n * Event returned for every item that gets streamed to the model. Used to expose the raw events\n * from the model.\n */\nconst StreamEventGenericItem = SharedBase.extend({\n    type: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.literal('model'),\n    event: _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.any().describe('The event from the model'),\n});\nconst StreamEvent = _openai_zod_v3__WEBPACK_IMPORTED_MODULE_0__.discriminatedUnion('type', [\n    StreamEventTextStream,\n    StreamEventResponseCompleted,\n    StreamEventResponseStarted,\n    StreamEventGenericItem,\n]);\n//# sourceMappingURL=protocol.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/types/protocol.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/usage.mjs":
/*!********************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/usage.mjs ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Usage: () => (/* binding */ Usage),\n/* harmony export */   UsageData: () => (/* reexport safe */ _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_0__.UsageData)\n/* harmony export */ });\n/* harmony import */ var _types_protocol_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types/protocol.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/types/protocol.mjs\");\n\n/**\n * Tracks token usage and request counts for an agent run.\n */\nclass Usage {\n    /**\n     * The number of requests made to the LLM API.\n     */\n    requests;\n    /**\n     * The number of input tokens used across all requests.\n     */\n    inputTokens;\n    /**\n     * The number of output tokens used across all requests.\n     */\n    outputTokens;\n    /**\n     * The total number of tokens sent and received, across all requests.\n     */\n    totalTokens;\n    /**\n     * Details about the input tokens used across all requests.\n     */\n    inputTokensDetails = [];\n    /**\n     * Details about the output tokens used across all requests.\n     */\n    outputTokensDetails = [];\n    constructor(input) {\n        if (typeof input === 'undefined') {\n            this.requests = 0;\n            this.inputTokens = 0;\n            this.outputTokens = 0;\n            this.totalTokens = 0;\n            this.inputTokensDetails = [];\n            this.outputTokensDetails = [];\n        }\n        else {\n            this.requests = input?.requests ?? 1;\n            this.inputTokens = input?.inputTokens ?? 0;\n            this.outputTokens = input?.outputTokens ?? 0;\n            this.totalTokens = input?.totalTokens ?? 0;\n            this.inputTokensDetails = input?.inputTokensDetails\n                ? [input.inputTokensDetails]\n                : [];\n            this.outputTokensDetails = input?.outputTokensDetails\n                ? [input.outputTokensDetails]\n                : [];\n        }\n    }\n    add(newUsage) {\n        this.requests += newUsage.requests;\n        this.inputTokens += newUsage.inputTokens;\n        this.outputTokens += newUsage.outputTokens;\n        this.totalTokens += newUsage.totalTokens;\n        this.inputTokensDetails.push(...newUsage.inputTokensDetails);\n        this.outputTokensDetails.push(...newUsage.outputTokensDetails);\n    }\n}\n\n//# sourceMappingURL=usage.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdXNhZ2UubWpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ3FCO0FBQ3JCIiwic291cmNlcyI6WyIvVXNlcnMveXV3YW5nL3Byb2plY3RzL29wZW5haS1yZWFsdGltZS1hZ2VudHMvbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdXNhZ2UubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFVzYWdlRGF0YSB9IGZyb20gXCIuL3R5cGVzL3Byb3RvY29sLm1qc1wiO1xuLyoqXG4gKiBUcmFja3MgdG9rZW4gdXNhZ2UgYW5kIHJlcXVlc3QgY291bnRzIGZvciBhbiBhZ2VudCBydW4uXG4gKi9cbmV4cG9ydCBjbGFzcyBVc2FnZSB7XG4gICAgLyoqXG4gICAgICogVGhlIG51bWJlciBvZiByZXF1ZXN0cyBtYWRlIHRvIHRoZSBMTE0gQVBJLlxuICAgICAqL1xuICAgIHJlcXVlc3RzO1xuICAgIC8qKlxuICAgICAqIFRoZSBudW1iZXIgb2YgaW5wdXQgdG9rZW5zIHVzZWQgYWNyb3NzIGFsbCByZXF1ZXN0cy5cbiAgICAgKi9cbiAgICBpbnB1dFRva2VucztcbiAgICAvKipcbiAgICAgKiBUaGUgbnVtYmVyIG9mIG91dHB1dCB0b2tlbnMgdXNlZCBhY3Jvc3MgYWxsIHJlcXVlc3RzLlxuICAgICAqL1xuICAgIG91dHB1dFRva2VucztcbiAgICAvKipcbiAgICAgKiBUaGUgdG90YWwgbnVtYmVyIG9mIHRva2VucyBzZW50IGFuZCByZWNlaXZlZCwgYWNyb3NzIGFsbCByZXF1ZXN0cy5cbiAgICAgKi9cbiAgICB0b3RhbFRva2VucztcbiAgICAvKipcbiAgICAgKiBEZXRhaWxzIGFib3V0IHRoZSBpbnB1dCB0b2tlbnMgdXNlZCBhY3Jvc3MgYWxsIHJlcXVlc3RzLlxuICAgICAqL1xuICAgIGlucHV0VG9rZW5zRGV0YWlscyA9IFtdO1xuICAgIC8qKlxuICAgICAqIERldGFpbHMgYWJvdXQgdGhlIG91dHB1dCB0b2tlbnMgdXNlZCBhY3Jvc3MgYWxsIHJlcXVlc3RzLlxuICAgICAqL1xuICAgIG91dHB1dFRva2Vuc0RldGFpbHMgPSBbXTtcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCkge1xuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0cyA9IDA7XG4gICAgICAgICAgICB0aGlzLmlucHV0VG9rZW5zID0gMDtcbiAgICAgICAgICAgIHRoaXMub3V0cHV0VG9rZW5zID0gMDtcbiAgICAgICAgICAgIHRoaXMudG90YWxUb2tlbnMgPSAwO1xuICAgICAgICAgICAgdGhpcy5pbnB1dFRva2Vuc0RldGFpbHMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMub3V0cHV0VG9rZW5zRGV0YWlscyA9IFtdO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5yZXF1ZXN0cyA9IGlucHV0Py5yZXF1ZXN0cyA/PyAxO1xuICAgICAgICAgICAgdGhpcy5pbnB1dFRva2VucyA9IGlucHV0Py5pbnB1dFRva2VucyA/PyAwO1xuICAgICAgICAgICAgdGhpcy5vdXRwdXRUb2tlbnMgPSBpbnB1dD8ub3V0cHV0VG9rZW5zID8/IDA7XG4gICAgICAgICAgICB0aGlzLnRvdGFsVG9rZW5zID0gaW5wdXQ/LnRvdGFsVG9rZW5zID8/IDA7XG4gICAgICAgICAgICB0aGlzLmlucHV0VG9rZW5zRGV0YWlscyA9IGlucHV0Py5pbnB1dFRva2Vuc0RldGFpbHNcbiAgICAgICAgICAgICAgICA/IFtpbnB1dC5pbnB1dFRva2Vuc0RldGFpbHNdXG4gICAgICAgICAgICAgICAgOiBbXTtcbiAgICAgICAgICAgIHRoaXMub3V0cHV0VG9rZW5zRGV0YWlscyA9IGlucHV0Py5vdXRwdXRUb2tlbnNEZXRhaWxzXG4gICAgICAgICAgICAgICAgPyBbaW5wdXQub3V0cHV0VG9rZW5zRGV0YWlsc11cbiAgICAgICAgICAgICAgICA6IFtdO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFkZChuZXdVc2FnZSkge1xuICAgICAgICB0aGlzLnJlcXVlc3RzICs9IG5ld1VzYWdlLnJlcXVlc3RzO1xuICAgICAgICB0aGlzLmlucHV0VG9rZW5zICs9IG5ld1VzYWdlLmlucHV0VG9rZW5zO1xuICAgICAgICB0aGlzLm91dHB1dFRva2VucyArPSBuZXdVc2FnZS5vdXRwdXRUb2tlbnM7XG4gICAgICAgIHRoaXMudG90YWxUb2tlbnMgKz0gbmV3VXNhZ2UudG90YWxUb2tlbnM7XG4gICAgICAgIHRoaXMuaW5wdXRUb2tlbnNEZXRhaWxzLnB1c2goLi4ubmV3VXNhZ2UuaW5wdXRUb2tlbnNEZXRhaWxzKTtcbiAgICAgICAgdGhpcy5vdXRwdXRUb2tlbnNEZXRhaWxzLnB1c2goLi4ubmV3VXNhZ2Uub3V0cHV0VG9rZW5zRGV0YWlscyk7XG4gICAgfVxufVxuZXhwb3J0IHsgVXNhZ2VEYXRhIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD11c2FnZS5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/usage.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/index.mjs":
/*!**************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/index.mjs ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventEmitterDelegate: () => (/* reexport safe */ _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_2__.EventEmitterDelegate),\n/* harmony export */   isZodObject: () => (/* reexport safe */ _typeGuards_mjs__WEBPACK_IMPORTED_MODULE_0__.isZodObject),\n/* harmony export */   toSmartString: () => (/* reexport safe */ _smartString_mjs__WEBPACK_IMPORTED_MODULE_1__.toSmartString)\n/* harmony export */ });\n/* harmony import */ var _typeGuards_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./typeGuards.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs\");\n/* harmony import */ var _smartString_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./smartString.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/smartString.mjs\");\n/* harmony import */ var _lifecycle_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lifecycle.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/lifecycle.mjs\");\n\n\n\n//# sourceMappingURL=index.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdXRpbHMvaW5kZXgubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUErQztBQUNHO0FBQ007QUFDeEQiLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXdhbmcvcHJvamVjdHMvb3BlbmFpLXJlYWx0aW1lLWFnZW50cy9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuNV93c0A4LjE4LjNfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy9pbmRleC5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgaXNab2RPYmplY3QgfSBmcm9tIFwiLi90eXBlR3VhcmRzLm1qc1wiO1xuZXhwb3J0IHsgdG9TbWFydFN0cmluZyB9IGZyb20gXCIuL3NtYXJ0U3RyaW5nLm1qc1wiO1xuZXhwb3J0IHsgRXZlbnRFbWl0dGVyRGVsZWdhdGUgfSBmcm9tIFwiLi4vbGlmZWN5Y2xlLm1qc1wiO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXgubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/index.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/messages.mjs":
/*!*****************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/messages.mjs ***!
  \*****************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLastTextFromOutputMessage: () => (/* binding */ getLastTextFromOutputMessage),\n/* harmony export */   getOutputText: () => (/* binding */ getOutputText)\n/* harmony export */ });\n/**\n * Get the last text from the output message.\n * @param outputMessage\n * @returns\n */\nfunction getLastTextFromOutputMessage(outputMessage) {\n    if (outputMessage.type !== 'message') {\n        return undefined;\n    }\n    if (outputMessage.role !== 'assistant') {\n        return undefined;\n    }\n    const lastItem = outputMessage.content[outputMessage.content.length - 1];\n    if (lastItem.type !== 'output_text') {\n        return undefined;\n    }\n    return lastItem.text;\n}\n/**\n * Get the last text from the output message.\n * @param output\n * @returns\n */\nfunction getOutputText(output) {\n    if (output.output.length === 0) {\n        return '';\n    }\n    return (getLastTextFromOutputMessage(output.output[output.output.length - 1]) || '');\n}\n//# sourceMappingURL=messages.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdXRpbHMvbWVzc2FnZXMubWpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMveXV3YW5nL3Byb2plY3RzL29wZW5haS1yZWFsdGltZS1hZ2VudHMvbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdXRpbHMvbWVzc2FnZXMubWpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0IHRoZSBsYXN0IHRleHQgZnJvbSB0aGUgb3V0cHV0IG1lc3NhZ2UuXG4gKiBAcGFyYW0gb3V0cHV0TWVzc2FnZVxuICogQHJldHVybnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldExhc3RUZXh0RnJvbU91dHB1dE1lc3NhZ2Uob3V0cHV0TWVzc2FnZSkge1xuICAgIGlmIChvdXRwdXRNZXNzYWdlLnR5cGUgIT09ICdtZXNzYWdlJykge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBpZiAob3V0cHV0TWVzc2FnZS5yb2xlICE9PSAnYXNzaXN0YW50Jykge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICBjb25zdCBsYXN0SXRlbSA9IG91dHB1dE1lc3NhZ2UuY29udGVudFtvdXRwdXRNZXNzYWdlLmNvbnRlbnQubGVuZ3RoIC0gMV07XG4gICAgaWYgKGxhc3RJdGVtLnR5cGUgIT09ICdvdXRwdXRfdGV4dCcpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIGxhc3RJdGVtLnRleHQ7XG59XG4vKipcbiAqIEdldCB0aGUgbGFzdCB0ZXh0IGZyb20gdGhlIG91dHB1dCBtZXNzYWdlLlxuICogQHBhcmFtIG91dHB1dFxuICogQHJldHVybnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldE91dHB1dFRleHQob3V0cHV0KSB7XG4gICAgaWYgKG91dHB1dC5vdXRwdXQubGVuZ3RoID09PSAwKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgcmV0dXJuIChnZXRMYXN0VGV4dEZyb21PdXRwdXRNZXNzYWdlKG91dHB1dC5vdXRwdXRbb3V0cHV0Lm91dHB1dC5sZW5ndGggLSAxXSkgfHwgJycpO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9bWVzc2FnZXMubWpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/messages.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/safeExecute.mjs":
/*!********************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/safeExecute.mjs ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   safeExecute: () => (/* binding */ safeExecute)\n/* harmony export */ });\nasync function safeExecute(fn) {\n    try {\n        return [null, await fn()];\n    }\n    catch (error) {\n        return [error, null];\n    }\n}\n//# sourceMappingURL=safeExecute.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdXRpbHMvc2FmZUV4ZWN1dGUubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXdhbmcvcHJvamVjdHMvb3BlbmFpLXJlYWx0aW1lLWFnZW50cy9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuNV93c0A4LjE4LjNfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy9zYWZlRXhlY3V0ZS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNhZmVFeGVjdXRlKGZuKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIFtudWxsLCBhd2FpdCBmbigpXTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBbZXJyb3IsIG51bGxdO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXNhZmVFeGVjdXRlLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/safeExecute.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/serialize.mjs":
/*!******************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/serialize.mjs ***!
  \******************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serializeHandoff: () => (/* binding */ serializeHandoff),\n/* harmony export */   serializeTool: () => (/* binding */ serializeTool)\n/* harmony export */ });\nfunction serializeTool(tool) {\n    if (tool.type === 'function') {\n        return {\n            type: 'function',\n            name: tool.name,\n            description: tool.description,\n            parameters: tool.parameters,\n            strict: tool.strict,\n        };\n    }\n    if (tool.type === 'computer') {\n        return {\n            type: 'computer',\n            name: tool.name,\n            environment: tool.computer.environment,\n            dimensions: tool.computer.dimensions,\n        };\n    }\n    return {\n        type: 'hosted_tool',\n        name: tool.name,\n        providerData: tool.providerData,\n    };\n}\nfunction serializeHandoff(h) {\n    return {\n        toolName: h.toolName,\n        toolDescription: h.toolDescription,\n        inputJsonSchema: h.inputJsonSchema,\n        strictJsonSchema: h.strictJsonSchema,\n    };\n}\n//# sourceMappingURL=serialize.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdXRpbHMvc2VyaWFsaXplLm1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3l1d2FuZy9wcm9qZWN0cy9vcGVuYWktcmVhbHRpbWUtYWdlbnRzL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC41X3dzQDguMTguM196b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L3V0aWxzL3NlcmlhbGl6ZS5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZVRvb2wodG9vbCkge1xuICAgIGlmICh0b29sLnR5cGUgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6ICdmdW5jdGlvbicsXG4gICAgICAgICAgICBuYW1lOiB0b29sLm5hbWUsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogdG9vbC5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgIHBhcmFtZXRlcnM6IHRvb2wucGFyYW1ldGVycyxcbiAgICAgICAgICAgIHN0cmljdDogdG9vbC5zdHJpY3QsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmICh0b29sLnR5cGUgPT09ICdjb21wdXRlcicpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHR5cGU6ICdjb21wdXRlcicsXG4gICAgICAgICAgICBuYW1lOiB0b29sLm5hbWUsXG4gICAgICAgICAgICBlbnZpcm9ubWVudDogdG9vbC5jb21wdXRlci5lbnZpcm9ubWVudCxcbiAgICAgICAgICAgIGRpbWVuc2lvbnM6IHRvb2wuY29tcHV0ZXIuZGltZW5zaW9ucyxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogJ2hvc3RlZF90b29sJyxcbiAgICAgICAgbmFtZTogdG9vbC5uYW1lLFxuICAgICAgICBwcm92aWRlckRhdGE6IHRvb2wucHJvdmlkZXJEYXRhLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplSGFuZG9mZihoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdG9vbE5hbWU6IGgudG9vbE5hbWUsXG4gICAgICAgIHRvb2xEZXNjcmlwdGlvbjogaC50b29sRGVzY3JpcHRpb24sXG4gICAgICAgIGlucHV0SnNvblNjaGVtYTogaC5pbnB1dEpzb25TY2hlbWEsXG4gICAgICAgIHN0cmljdEpzb25TY2hlbWE6IGguc3RyaWN0SnNvblNjaGVtYSxcbiAgICB9O1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c2VyaWFsaXplLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/serialize.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/smartString.mjs":
/*!********************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/smartString.mjs ***!
  \********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toSmartString: () => (/* binding */ toSmartString)\n/* harmony export */ });\nfunction toSmartString(value) {\n    if (value === null || value === undefined) {\n        return String(value);\n    }\n    else if (typeof value === 'string') {\n        return value;\n    }\n    else if (typeof value === 'object') {\n        try {\n            return JSON.stringify(value);\n        }\n        catch (_e) {\n            return '[object with circular references]';\n        }\n    }\n    return String(value);\n}\n//# sourceMappingURL=smartString.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdXRpbHMvc21hcnRTdHJpbmcubWpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXdhbmcvcHJvamVjdHMvb3BlbmFpLXJlYWx0aW1lLWFnZW50cy9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuNV93c0A4LjE4LjNfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy9zbWFydFN0cmluZy5tanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHRvU21hcnRTdHJpbmcodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9lKSB7XG4gICAgICAgICAgICByZXR1cm4gJ1tvYmplY3Qgd2l0aCBjaXJjdWxhciByZWZlcmVuY2VzXSc7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1zbWFydFN0cmluZy5tanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/smartString.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/tools.mjs":
/*!**************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/tools.mjs ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertAgentOutputTypeToSerializable: () => (/* binding */ convertAgentOutputTypeToSerializable),\n/* harmony export */   getSchemaAndParserFromInputType: () => (/* binding */ getSchemaAndParserFromInputType),\n/* harmony export */   toFunctionToolName: () => (/* binding */ toFunctionToolName)\n/* harmony export */ });\n/* harmony import */ var openai_helpers_zod__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai/helpers/zod */ \"(ssr)/../../node_modules/.pnpm/openai@5.23.2_ws@8.18.3_zod@3.25.76/node_modules/openai/helpers/zod.mjs\");\n/* harmony import */ var _errors_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/errors.mjs\");\n/* harmony import */ var _typeGuards_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./typeGuards.mjs */ \"(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs\");\n\n\n\n/**\n * Convert a string to a function tool name by replacing spaces with underscores and\n * non-alphanumeric characters with underscores.\n * @param name - The name of the tool.\n * @returns The function tool name.\n */\nfunction toFunctionToolName(name) {\n    // Replace spaces with underscores\n    name = name.replace(/\\s/g, '_');\n    // Replace non-alphanumeric characters with underscores\n    name = name.replace(/[^a-zA-Z0-9]/g, '_');\n    // Ensure the name is not empty\n    if (name.length === 0) {\n        throw new Error('Tool name cannot be empty');\n    }\n    return name;\n}\n/**\n * Get the schema and parser from an input type. If the input type is a ZodObject, we will convert\n * it into a JSON Schema and use Zod as parser. If the input type is a JSON schema, we use the\n * JSON.parse function to get the parser.\n * @param inputType - The input type to get the schema and parser from.\n * @param name - The name of the tool.\n * @returns The schema and parser.\n */\nfunction getSchemaAndParserFromInputType(inputType, name) {\n    const parser = (input) => JSON.parse(input);\n    if ((0,_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_2__.isZodObject)(inputType)) {\n        const formattedFunction = (0,openai_helpers_zod__WEBPACK_IMPORTED_MODULE_0__.zodResponsesFunction)({\n            name,\n            parameters: inputType,\n            function: () => { }, // empty function here to satisfy the OpenAI helper\n            description: '',\n        });\n        return {\n            schema: formattedFunction.parameters,\n            parser: formattedFunction.$parseRaw,\n        };\n    }\n    else if (typeof inputType === 'object' && inputType !== null) {\n        return {\n            schema: inputType,\n            parser,\n        };\n    }\n    throw new _errors_mjs__WEBPACK_IMPORTED_MODULE_1__.UserError('Input type is not a ZodObject or a valid JSON schema');\n}\n/**\n * Converts the agent output type provided to a serializable version\n */\nfunction convertAgentOutputTypeToSerializable(outputType) {\n    if (outputType === 'text') {\n        return 'text';\n    }\n    if ((0,_typeGuards_mjs__WEBPACK_IMPORTED_MODULE_2__.isZodObject)(outputType)) {\n        const output = (0,openai_helpers_zod__WEBPACK_IMPORTED_MODULE_0__.zodTextFormat)(outputType, 'output');\n        return {\n            type: output.type,\n            name: output.name,\n            strict: output.strict || false,\n            schema: output.schema,\n        };\n    }\n    return outputType;\n}\n//# sourceMappingURL=tools.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdXRpbHMvdG9vbHMubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF5RTtBQUMvQjtBQUNLO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFFBQVEsNERBQVc7QUFDbkIsa0NBQWtDLHdFQUFvQjtBQUN0RDtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGtEQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxRQUFRLDREQUFXO0FBQ25CLHVCQUF1QixpRUFBYTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL3l1d2FuZy9wcm9qZWN0cy9vcGVuYWktcmVhbHRpbWUtYWdlbnRzL25vZGVfbW9kdWxlcy8ucG5wbS9Ab3BlbmFpK2FnZW50cy1jb3JlQDAuMC41X3dzQDguMTguM196b2RAMy4yNS43Ni9ub2RlX21vZHVsZXMvQG9wZW5haS9hZ2VudHMtY29yZS9kaXN0L3V0aWxzL3Rvb2xzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB6b2RSZXNwb25zZXNGdW5jdGlvbiwgem9kVGV4dEZvcm1hdCB9IGZyb20gJ29wZW5haS9oZWxwZXJzL3pvZCc7XG5pbXBvcnQgeyBVc2VyRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JzLm1qc1wiO1xuaW1wb3J0IHsgaXNab2RPYmplY3QgfSBmcm9tIFwiLi90eXBlR3VhcmRzLm1qc1wiO1xuLyoqXG4gKiBDb252ZXJ0IGEgc3RyaW5nIHRvIGEgZnVuY3Rpb24gdG9vbCBuYW1lIGJ5IHJlcGxhY2luZyBzcGFjZXMgd2l0aCB1bmRlcnNjb3JlcyBhbmRcbiAqIG5vbi1hbHBoYW51bWVyaWMgY2hhcmFjdGVycyB3aXRoIHVuZGVyc2NvcmVzLlxuICogQHBhcmFtIG5hbWUgLSBUaGUgbmFtZSBvZiB0aGUgdG9vbC5cbiAqIEByZXR1cm5zIFRoZSBmdW5jdGlvbiB0b29sIG5hbWUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0Z1bmN0aW9uVG9vbE5hbWUobmFtZSkge1xuICAgIC8vIFJlcGxhY2Ugc3BhY2VzIHdpdGggdW5kZXJzY29yZXNcbiAgICBuYW1lID0gbmFtZS5yZXBsYWNlKC9cXHMvZywgJ18nKTtcbiAgICAvLyBSZXBsYWNlIG5vbi1hbHBoYW51bWVyaWMgY2hhcmFjdGVycyB3aXRoIHVuZGVyc2NvcmVzXG4gICAgbmFtZSA9IG5hbWUucmVwbGFjZSgvW15hLXpBLVowLTldL2csICdfJyk7XG4gICAgLy8gRW5zdXJlIHRoZSBuYW1lIGlzIG5vdCBlbXB0eVxuICAgIGlmIChuYW1lLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Rvb2wgbmFtZSBjYW5ub3QgYmUgZW1wdHknKTtcbiAgICB9XG4gICAgcmV0dXJuIG5hbWU7XG59XG4vKipcbiAqIEdldCB0aGUgc2NoZW1hIGFuZCBwYXJzZXIgZnJvbSBhbiBpbnB1dCB0eXBlLiBJZiB0aGUgaW5wdXQgdHlwZSBpcyBhIFpvZE9iamVjdCwgd2Ugd2lsbCBjb252ZXJ0XG4gKiBpdCBpbnRvIGEgSlNPTiBTY2hlbWEgYW5kIHVzZSBab2QgYXMgcGFyc2VyLiBJZiB0aGUgaW5wdXQgdHlwZSBpcyBhIEpTT04gc2NoZW1hLCB3ZSB1c2UgdGhlXG4gKiBKU09OLnBhcnNlIGZ1bmN0aW9uIHRvIGdldCB0aGUgcGFyc2VyLlxuICogQHBhcmFtIGlucHV0VHlwZSAtIFRoZSBpbnB1dCB0eXBlIHRvIGdldCB0aGUgc2NoZW1hIGFuZCBwYXJzZXIgZnJvbS5cbiAqIEBwYXJhbSBuYW1lIC0gVGhlIG5hbWUgb2YgdGhlIHRvb2wuXG4gKiBAcmV0dXJucyBUaGUgc2NoZW1hIGFuZCBwYXJzZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTY2hlbWFBbmRQYXJzZXJGcm9tSW5wdXRUeXBlKGlucHV0VHlwZSwgbmFtZSkge1xuICAgIGNvbnN0IHBhcnNlciA9IChpbnB1dCkgPT4gSlNPTi5wYXJzZShpbnB1dCk7XG4gICAgaWYgKGlzWm9kT2JqZWN0KGlucHV0VHlwZSkpIHtcbiAgICAgICAgY29uc3QgZm9ybWF0dGVkRnVuY3Rpb24gPSB6b2RSZXNwb25zZXNGdW5jdGlvbih7XG4gICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgcGFyYW1ldGVyczogaW5wdXRUeXBlLFxuICAgICAgICAgICAgZnVuY3Rpb246ICgpID0+IHsgfSwgLy8gZW1wdHkgZnVuY3Rpb24gaGVyZSB0byBzYXRpc2Z5IHRoZSBPcGVuQUkgaGVscGVyXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJycsXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc2NoZW1hOiBmb3JtYXR0ZWRGdW5jdGlvbi5wYXJhbWV0ZXJzLFxuICAgICAgICAgICAgcGFyc2VyOiBmb3JtYXR0ZWRGdW5jdGlvbi4kcGFyc2VSYXcsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGVvZiBpbnB1dFR5cGUgPT09ICdvYmplY3QnICYmIGlucHV0VHlwZSAhPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgc2NoZW1hOiBpbnB1dFR5cGUsXG4gICAgICAgICAgICBwYXJzZXIsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHRocm93IG5ldyBVc2VyRXJyb3IoJ0lucHV0IHR5cGUgaXMgbm90IGEgWm9kT2JqZWN0IG9yIGEgdmFsaWQgSlNPTiBzY2hlbWEnKTtcbn1cbi8qKlxuICogQ29udmVydHMgdGhlIGFnZW50IG91dHB1dCB0eXBlIHByb3ZpZGVkIHRvIGEgc2VyaWFsaXphYmxlIHZlcnNpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRBZ2VudE91dHB1dFR5cGVUb1NlcmlhbGl6YWJsZShvdXRwdXRUeXBlKSB7XG4gICAgaWYgKG91dHB1dFR5cGUgPT09ICd0ZXh0Jykge1xuICAgICAgICByZXR1cm4gJ3RleHQnO1xuICAgIH1cbiAgICBpZiAoaXNab2RPYmplY3Qob3V0cHV0VHlwZSkpIHtcbiAgICAgICAgY29uc3Qgb3V0cHV0ID0gem9kVGV4dEZvcm1hdChvdXRwdXRUeXBlLCAnb3V0cHV0Jyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB0eXBlOiBvdXRwdXQudHlwZSxcbiAgICAgICAgICAgIG5hbWU6IG91dHB1dC5uYW1lLFxuICAgICAgICAgICAgc3RyaWN0OiBvdXRwdXQuc3RyaWN0IHx8IGZhbHNlLFxuICAgICAgICAgICAgc2NoZW1hOiBvdXRwdXQuc2NoZW1hLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gb3V0cHV0VHlwZTtcbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRvb2xzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/tools.mjs\n");

/***/ }),

/***/ "(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs":
/*!*******************************************************************************************************************************************!*\
  !*** ../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAgentToolInput: () => (/* binding */ isAgentToolInput),\n/* harmony export */   isZodObject: () => (/* binding */ isZodObject)\n/* harmony export */ });\n/**\n * Verifies that an input is a ZodObject without needing to have Zod at runtime since it's an\n * optional dependency.\n * @param input\n * @returns\n */\nfunction isZodObject(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        '_def' in input &&\n        typeof input._def === 'object' &&\n        input._def !== null &&\n        'typeName' in input._def &&\n        input._def.typeName === 'ZodObject');\n}\n/**\n * Verifies that an input is an object with an `input` property.\n * @param input\n * @returns\n */\nfunction isAgentToolInput(input) {\n    return (typeof input === 'object' &&\n        input !== null &&\n        'input' in input &&\n        typeof input.input === 'string');\n}\n//# sourceMappingURL=typeGuards.mjs.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzLy5wbnBtL0BvcGVuYWkrYWdlbnRzLWNvcmVAMC4wLjVfd3NAOC4xOC4zX3pvZEAzLjI1Ljc2L25vZGVfbW9kdWxlcy9Ab3BlbmFpL2FnZW50cy1jb3JlL2Rpc3QvdXRpbHMvdHlwZUd1YXJkcy5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy95dXdhbmcvcHJvamVjdHMvb3BlbmFpLXJlYWx0aW1lLWFnZW50cy9ub2RlX21vZHVsZXMvLnBucG0vQG9wZW5haSthZ2VudHMtY29yZUAwLjAuNV93c0A4LjE4LjNfem9kQDMuMjUuNzYvbm9kZV9tb2R1bGVzL0BvcGVuYWkvYWdlbnRzLWNvcmUvZGlzdC91dGlscy90eXBlR3VhcmRzLm1qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFZlcmlmaWVzIHRoYXQgYW4gaW5wdXQgaXMgYSBab2RPYmplY3Qgd2l0aG91dCBuZWVkaW5nIHRvIGhhdmUgWm9kIGF0IHJ1bnRpbWUgc2luY2UgaXQncyBhblxuICogb3B0aW9uYWwgZGVwZW5kZW5jeS5cbiAqIEBwYXJhbSBpbnB1dFxuICogQHJldHVybnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzWm9kT2JqZWN0KGlucHV0KSB7XG4gICAgcmV0dXJuICh0eXBlb2YgaW5wdXQgPT09ICdvYmplY3QnICYmXG4gICAgICAgIGlucHV0ICE9PSBudWxsICYmXG4gICAgICAgICdfZGVmJyBpbiBpbnB1dCAmJlxuICAgICAgICB0eXBlb2YgaW5wdXQuX2RlZiA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgaW5wdXQuX2RlZiAhPT0gbnVsbCAmJlxuICAgICAgICAndHlwZU5hbWUnIGluIGlucHV0Ll9kZWYgJiZcbiAgICAgICAgaW5wdXQuX2RlZi50eXBlTmFtZSA9PT0gJ1pvZE9iamVjdCcpO1xufVxuLyoqXG4gKiBWZXJpZmllcyB0aGF0IGFuIGlucHV0IGlzIGFuIG9iamVjdCB3aXRoIGFuIGBpbnB1dGAgcHJvcGVydHkuXG4gKiBAcGFyYW0gaW5wdXRcbiAqIEByZXR1cm5zXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0FnZW50VG9vbElucHV0KGlucHV0KSB7XG4gICAgcmV0dXJuICh0eXBlb2YgaW5wdXQgPT09ICdvYmplY3QnICYmXG4gICAgICAgIGlucHV0ICE9PSBudWxsICYmXG4gICAgICAgICdpbnB1dCcgaW4gaW5wdXQgJiZcbiAgICAgICAgdHlwZW9mIGlucHV0LmlucHV0ID09PSAnc3RyaW5nJyk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlR3VhcmRzLm1qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/.pnpm/@openai+agents-core@0.0.5_ws@8.18.3_zod@3.25.76/node_modules/@openai/agents-core/dist/utils/typeGuards.mjs\n");

/***/ })

};
;